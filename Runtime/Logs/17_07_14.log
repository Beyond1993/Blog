[ 2017-07-14T01:13:46+08:00 ] 66.102.6.205 /index.php?s=/Admin/Public/login.html
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000049s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000078s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.001497s ]
INFO: [ view_parse ] --END-- [ RunTime:0.001546s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000027s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000048s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000024s ]
INFO: [ app_end ] --END-- [ RunTime:0.000043s ]

[ 2017-07-14T01:18:42+08:00 ] 130.65.109.113 /
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000293s ]
SQL: SELECT * FROM `ot_document` WHERE ( status=1 ) ORDER BY view desc LIMIT 0,12   [ RunTime:0.000059s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000328s ]
SQL: SELECT `id`,`name`,`title`,`pid`,`sort`,`list_row`,`meta_title`,`keywords`,`description`,`template_index`,`template_lists`,`template_detail`,`template_edit`,`model`,`type`,`link_id`,`allow_publish`,`display`,`reply`,`check`,`reply_model`,`extend`,`create_time`,`update_time`,`status`,`icon` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY sort  [ RunTime:0.000056s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( status=1 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT * FROM `ot_document` WHERE ( status=1 ) ORDER BY create_time desc LIMIT 0,10   [ RunTime:0.000049s ]
SQL: SELECT * FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT * FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000044s ]
SQL: SELECT * FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT * FROM `ot_category` WHERE ( id=64 ) LIMIT 1   [ RunTime:0.000054s ]
SQL: SELECT * FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT * FROM `ot_category` WHERE ( id=63 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT * FROM `ot_category` WHERE ( id=63 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT * FROM `ot_category` WHERE ( id=63 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT * FROM `ot_category` WHERE ( id=48 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT * FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000040s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000129s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000162s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.010395s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010430s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000050s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000072s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000029s ]
INFO: [ app_end ] --END-- [ RunTime:0.000068s ]

[ 2017-07-14T01:18:48+08:00 ] 130.65.109.113 /index.php?s=/Admin/Public/login.html
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000036s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000066s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.001590s ]
INFO: [ view_parse ] --END-- [ RunTime:0.001631s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000028s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000049s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000023s ]
INFO: [ app_end ] --END-- [ RunTime:0.000043s ]

[ 2017-07-14T01:18:54+08:00 ] 130.65.109.113 /index.php?s=/Admin/Public/login.html
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000036s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000079s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.001495s ]
INFO: [ view_parse ] --END-- [ RunTime:0.001570s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000039s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000059s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000023s ]
INFO: [ app_end ] --END-- [ RunTime:0.000043s ]

[ 2017-07-14T01:19:01+08:00 ] 130.65.109.113 /index.php?s=/Admin/Index/index.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000349s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000049s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Index/index%' ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000264s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=1 ) LIMIT 1   [ RunTime:0.000045s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 1 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 1 ) AND ( `hide` = 0 )  [ RunTime:0.000038s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000062s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000094s ]
INFO: [ AdminIndex ] --START--
SQL: SHOW COLUMNS FROM `ot_addons` [ RunTime:0.000303s ]
SQL: SELECT `config` FROM `ot_addons` WHERE ( `name` = 'SiteStat' ) AND ( `status` = 1 ) LIMIT 1   [ RunTime:0.000045s ]
SQL: SHOW COLUMNS FROM `ot_member` [ RunTime:0.000277s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_member` LIMIT 1   [ RunTime:0.000098s ]
SQL: SHOW COLUMNS FROM `ot_action_log` [ RunTime:0.000254s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_action_log` LIMIT 1   [ RunTime:0.000084s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000312s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` LIMIT 1   [ RunTime:0.000094s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000318s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_category` LIMIT 1   [ RunTime:0.000042s ]
SQL: SHOW COLUMNS FROM `ot_model` [ RunTime:0.000295s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_model` LIMIT 1   [ RunTime:0.000043s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000020s ]
INFO: [ template_filter ] --END-- [ RunTime:-0.005103s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.000890s ]
INFO: [ view_parse ] --END-- [ RunTime:0.000923s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000025s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000047s ]
INFO: Run SiteStat [ RunTime:0.004451s ]
SQL: SELECT `config` FROM `ot_addons` WHERE ( `name` = 'SystemInfo' ) AND ( `status` = 1 ) LIMIT 1   [ RunTime:0.000049s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000022s ]
INFO: [ template_filter ] --END-- [ RunTime:-0.006460s ]
SQL: select version() as v; [ RunTime:0.000071s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.001227s ]
INFO: [ view_parse ] --END-- [ RunTime:-0.000324s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000006s ]
INFO: [ view_filter ] --END-- [ RunTime:-0.001526s ]
INFO: Run SystemInfo [ RunTime:0.001538s ]
SQL: SELECT `config` FROM `ot_addons` WHERE ( `name` = 'DevTeam' ) AND ( `status` = 1 ) LIMIT 1   [ RunTime:0.000047s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000019s ]
INFO: [ template_filter ] --END-- [ RunTime:-0.007851s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.000781s ]
INFO: [ view_parse ] --END-- [ RunTime:-0.001874s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000005s ]
INFO: [ view_filter ] --END-- [ RunTime:-0.002635s ]
INFO: Run DevTeam [ RunTime:0.001100s ]
INFO: [ AdminIndex ] --END-- [ RunTime:0.007133s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.000881s ]
INFO: [ view_parse ] --END-- [ RunTime:-0.001874s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000004s ]
INFO: [ view_filter ] --END-- [ RunTime:-0.002726s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000029s ]
INFO: [ app_end ] --END-- [ RunTime:0.000103s ]

[ 2017-07-14T01:19:03+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/mydocument.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000354s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000048s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/mydocument%' ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000266s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000058s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_auth_group_access` [ RunTime:0.000240s ]
SQL: SELECT `extend_id` FROM ot_auth_group_access g INNER JOIN ot_auth_extend c on g.group_id=c.group_id  WHERE ( g.uid='1' and c.type='1' and !isnull(extend_id) )  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000313s ]
SQL: SELECT `id`,`title`,`pid`,`allow_publish` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY pid,sort  [ RunTime:0.000046s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000336s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `uid` = 1 ) AND ( `pid` = 0 ) LIMIT 1   [ RunTime:0.000209s ]
SQL: SELECT `id`,`uid`,`name`,`title`,`category_id`,`description`,`root`,`pid`,`model_id`,`type`,`position`,`link_id`,`cover_id`,`display`,`deadline`,`attach`,`view`,`comment`,`extend`,`level`,`create_time`,`update_time`,`status` FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `uid` = 1 ) AND ( `pid` = 0 ) ORDER BY update_time desc LIMIT 0,10   [ RunTime:0.000270s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000143s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000178s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000363s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=71 ) LIMIT 1   [ RunTime:0.000127s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=68 ) LIMIT 1   [ RunTime:0.000113s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=64 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=69 ) LIMIT 1   [ RunTime:0.000109s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=70 ) LIMIT 1   [ RunTime:0.000110s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=51 ) LIMIT 1   [ RunTime:0.000106s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=15 ) LIMIT 1   [ RunTime:0.000148s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=45 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=67 ) LIMIT 1   [ RunTime:0.000109s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=66 ) LIMIT 1   [ RunTime:0.000105s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=63 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=64 ) LIMIT 1   [ RunTime:0.000106s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=63 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=65 ) LIMIT 1   [ RunTime:0.000110s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=63 ) LIMIT 1   [ RunTime:0.000040s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.020242s ]
INFO: [ view_parse ] --END-- [ RunTime:0.020273s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000032s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000052s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000028s ]
INFO: [ app_end ] --END-- [ RunTime:0.000057s ]

[ 2017-07-14T01:19:11+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/index/cate_id/59.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000351s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000048s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/index%' ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000277s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000035s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_auth_group_access` [ RunTime:0.000240s ]
SQL: SELECT `extend_id` FROM ot_auth_group_access g INNER JOIN ot_auth_extend c on g.group_id=c.group_id  WHERE ( g.uid='1' and c.type='1' and !isnull(extend_id) )  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000330s ]
SQL: SELECT `id`,`title`,`pid`,`allow_publish` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY pid,sort  [ RunTime:0.000047s ]
SQL: SELECT `id`,`title`,`pid` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY sort  [ RunTime:0.000047s ]
SQL: SELECT * FROM `ot_category` WHERE ( `id` = 59 ) LIMIT 1   [ RunTime:0.000172s ]
SQL: SHOW COLUMNS FROM `ot_model` [ RunTime:0.000354s ]
SQL: SELECT * FROM `ot_model` WHERE ( `name` = 'document' ) LIMIT 1   [ RunTime:0.000053s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000329s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `pid` = 0 ) AND ( `category_id` = 59 ) LIMIT 1   [ RunTime:0.000169s ]
SQL: SELECT `id`,`uid`,`name`,`title`,`category_id`,`description`,`root`,`pid`,`model_id`,`type`,`position`,`link_id`,`cover_id`,`display`,`deadline`,`attach`,`view`,`comment`,`extend`,`level`,`create_time`,`update_time`,`status` FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `pid` = 0 ) AND ( `category_id` = 59 ) ORDER BY level DESC,id DESC LIMIT 0,10   [ RunTime:0.000208s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000153s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000189s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.018164s ]
INFO: [ view_parse ] --END-- [ RunTime:0.018199s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000030s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000051s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000028s ]
INFO: [ app_end ] --END-- [ RunTime:0.000055s ]

[ 2017-07-14T01:19:17+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/edit/id/38/model/1/cate_id/59.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000356s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000048s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/edit%' ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000260s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=5 ) LIMIT 1   [ RunTime:0.000045s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000037s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000044s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_auth_group_access` [ RunTime:0.000231s ]
SQL: SELECT `extend_id` FROM ot_auth_group_access g INNER JOIN ot_auth_extend c on g.group_id=c.group_id  WHERE ( g.uid='1' and c.type='1' and !isnull(extend_id) )  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000320s ]
SQL: SELECT `id`,`title`,`pid`,`allow_publish` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY pid,sort  [ RunTime:0.000045s ]
SQL: SELECT `id`,`title`,`pid` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY sort  [ RunTime:0.000046s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000314s ]
SQL: SELECT `id`,`uid`,`name`,`title`,`category_id`,`description`,`root`,`pid`,`model_id`,`type`,`position`,`link_id`,`cover_id`,`display`,`deadline`,`attach`,`view`,`comment`,`extend`,`level`,`create_time`,`update_time`,`status` FROM `ot_document` WHERE ( `id` = 38 ) LIMIT 1   [ RunTime:0.000158s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000249s ]
SQL: SELECT `id`,`parse`,`content`,`template`,`bookmark` FROM `ot_document_article` WHERE ( `id` = 38 ) LIMIT 1   [ RunTime:0.000120s ]
SQL: SHOW COLUMNS FROM `ot_model` [ RunTime:0.000302s ]
SQL: SELECT `extend` FROM `ot_model` WHERE ( `id` = 2 ) LIMIT 1   [ RunTime:0.000044s ]
SQL: SHOW COLUMNS FROM `ot_attribute` [ RunTime:0.000303s ]
SQL: SELECT * FROM `ot_attribute` WHERE ( `model_id` IN ('2','1') )  [ RunTime:0.000067s ]
SQL: SELECT `field_sort` FROM `ot_model` WHERE ( `id` = 2 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT `type` FROM `ot_category` WHERE ( `id` = 59 ) LIMIT 1   [ RunTime:0.000145s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000200s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000238s ]
INFO: [ adminArticleEdit ] --START--
SQL: SHOW COLUMNS FROM `ot_addons` [ RunTime:0.000343s ]
SQL: SELECT `config` FROM `ot_addons` WHERE ( `name` = 'EditorForAdmin' ) AND ( `status` = 1 ) LIMIT 1   [ RunTime:0.000044s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000049s ]
INFO: [ template_filter ] --END-- [ RunTime:-0.008516s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.002210s ]
INFO: [ view_parse ] --END-- [ RunTime:0.002243s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000028s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000049s ]
INFO: Run EditorForAdmin [ RunTime:0.003059s ]
INFO: [ adminArticleEdit ] --END-- [ RunTime:0.003085s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.002516s ]
INFO: [ view_parse ] --END-- [ RunTime:0.002243s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000006s ]
INFO: [ view_filter ] --END-- [ RunTime:-0.000254s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000030s ]
INFO: [ app_end ] --END-- [ RunTime:0.000058s ]

[ 2017-07-14T01:19:30+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/index/cate_id/59.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000400s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000046s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/index%' ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000273s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000045s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000037s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_auth_group_access` [ RunTime:0.000246s ]
SQL: SELECT `extend_id` FROM ot_auth_group_access g INNER JOIN ot_auth_extend c on g.group_id=c.group_id  WHERE ( g.uid='1' and c.type='1' and !isnull(extend_id) )  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000323s ]
SQL: SELECT `id`,`title`,`pid`,`allow_publish` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY pid,sort  [ RunTime:0.000046s ]
SQL: SELECT `id`,`title`,`pid` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY sort  [ RunTime:0.000047s ]
SQL: SHOW COLUMNS FROM `ot_model` [ RunTime:0.000299s ]
SQL: SELECT * FROM `ot_model` WHERE ( `name` = 'document' ) LIMIT 1   [ RunTime:0.000051s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000308s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `pid` = 0 ) AND ( `category_id` = 59 ) LIMIT 1   [ RunTime:0.000045s ]
SQL: SELECT `id`,`uid`,`name`,`title`,`category_id`,`description`,`root`,`pid`,`model_id`,`type`,`position`,`link_id`,`cover_id`,`display`,`deadline`,`attach`,`view`,`comment`,`extend`,`level`,`create_time`,`update_time`,`status` FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `pid` = 0 ) AND ( `category_id` = 59 ) ORDER BY level DESC,id DESC LIMIT 0,10   [ RunTime:0.000052s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000145s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000181s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.018184s ]
INFO: [ view_parse ] --END-- [ RunTime:0.018220s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000028s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000050s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000028s ]
INFO: [ app_end ] --END-- [ RunTime:0.000056s ]

[ 2017-07-14T01:19:32+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/add/cate_id/59/model_id/2/pid/0.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000420s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000045s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/add%' ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000280s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=4 ) LIMIT 1   [ RunTime:0.000078s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000037s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_auth_group_access` [ RunTime:0.000230s ]
SQL: SELECT `extend_id` FROM ot_auth_group_access g INNER JOIN ot_auth_extend c on g.group_id=c.group_id  WHERE ( g.uid='1' and c.type='1' and !isnull(extend_id) )  [ RunTime:0.000042s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000323s ]
SQL: SELECT `id`,`title`,`pid`,`allow_publish` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY pid,sort  [ RunTime:0.000046s ]
SQL: SELECT `id`,`title`,`pid` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY sort  [ RunTime:0.000045s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000315s ]
SQL: SHOW COLUMNS FROM `ot_model` [ RunTime:0.000329s ]
SQL: SELECT `extend` FROM `ot_model` WHERE ( `id` = 2 ) LIMIT 1   [ RunTime:0.000044s ]
SQL: SHOW COLUMNS FROM `ot_attribute` [ RunTime:0.000291s ]
SQL: SELECT * FROM `ot_attribute` WHERE ( `model_id` IN ('2','1') )  [ RunTime:0.000061s ]
SQL: SELECT `field_sort` FROM `ot_model` WHERE ( `id` = 2 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT `type` FROM `ot_category` WHERE ( `id` = 59 ) LIMIT 1   [ RunTime:0.000045s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000196s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000233s ]
INFO: [ adminArticleEdit ] --START--
SQL: SHOW COLUMNS FROM `ot_addons` [ RunTime:0.000350s ]
SQL: SELECT `config` FROM `ot_addons` WHERE ( `name` = 'EditorForAdmin' ) AND ( `status` = 1 ) LIMIT 1   [ RunTime:0.000045s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000050s ]
INFO: [ template_filter ] --END-- [ RunTime:-0.008307s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.002188s ]
INFO: [ view_parse ] --END-- [ RunTime:0.002221s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000024s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000044s ]
INFO: Run EditorForAdmin [ RunTime:0.003027s ]
INFO: [ adminArticleEdit ] --END-- [ RunTime:0.003052s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.002481s ]
INFO: [ view_parse ] --END-- [ RunTime:0.002221s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000005s ]
INFO: [ view_filter ] --END-- [ RunTime:-0.000243s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000027s ]
INFO: [ app_end ] --END-- [ RunTime:0.000056s ]

[ 2017-07-14T01:20:33+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000022s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000064s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000356s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000048s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000260s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000037s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000316s ]
NOTIC: [2] in_array() expects parameter 2 to be array, string given /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 324 行.
SQL: INSERT INTO `ot_document` (`title`,`name`,`description`,`type`,`display`,`level`,`cover_id`,`view`,`comment`,`create_time`,`link_id`,`id`,`pid`,`model_id`,`category_id`,`uid`,`root`,`attach`,`extend`,`update_time`,`status`,`position`) VALUES ('2017 年开始记','','',2,1,0,0,0,0,1499966433,0,0,0,2,59,1,0,0,0,1499966433,3,0) [ RunTime:0.000253s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000250s ]
SQL: INSERT INTO `ot_document_article` (`content`,`parse`,`bookmark`,`template`,`id`) VALUES ('',0,0,'',72) [ RunTime:0.000103s ]

[ 2017-07-14T01:21:33+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000029s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000077s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000393s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000047s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000259s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000038s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000320s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 72 ) LIMIT 1   [ RunTime:0.000138s ]
SQL: UPDATE `ot_document` SET `title`='2017 年开始记',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499966493,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=59,`root`=0,`update_time`=1499966493,`status`=3,`position`=0 WHERE ( `id` = 72 ) [ RunTime:0.000140s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000258s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>有一个新的开始，一年的时间，经历了太多．静下心来，踏踏实实．面试的时候连一个 map 都写不出来，这怎么也说不过去吧．</p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 72 ) [ RunTime:0.000117s ]

[ 2017-07-14T01:22:33+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000024s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000078s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000362s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000046s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000257s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000316s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 72 ) LIMIT 1   [ RunTime:0.000137s ]
SQL: UPDATE `ot_document` SET `title`='2017 年开始记',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499966553,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=59,`root`=0,`update_time`=1499966553,`status`=3,`position`=0 WHERE ( `id` = 72 ) [ RunTime:0.000139s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000338s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>有一个新的开始，一年的时间，经历了太多．静下心来，踏踏实实．面试的时候连一个 map 都写不出来，这怎么也说不过去吧．</p><p>做你不想做的事，就能逆天改命！</p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 72 ) [ RunTime:0.000119s ]

[ 2017-07-14T01:22:40+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/update.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000024s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000067s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000353s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000048s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/update%' ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000275s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=7 ) LIMIT 1   [ RunTime:0.000044s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000038s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000325s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 72 ) LIMIT 1   [ RunTime:0.000161s ]
SQL: UPDATE `ot_document` SET `title`='2017 年开始记',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499966560,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=59,`root`=0,`update_time`=1499966560,`status`=1,`position`=0 WHERE ( `id` = 72 ) [ RunTime:0.000188s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000242s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 178 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>有一个新的开始，一年的时间，经历了太多．静下心来，踏踏实实．面试的时候连一个 map 都写不出来，这怎么也说不过去吧．</p><p>做你不想做的事，就能逆天改命！</p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 72 ) [ RunTime:0.000116s ]
INFO: [ documentSaveComplete ] --START--
INFO: Run Attachment [ RunTime:0.000085s ]
INFO: [ documentSaveComplete ] --END-- [ RunTime:0.000109s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 189 行.

[ 2017-07-14T01:22:42+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/index/cate_id/59.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000362s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000048s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/index%' ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000261s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000044s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000038s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000051s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_auth_group_access` [ RunTime:0.000243s ]
SQL: SELECT `extend_id` FROM ot_auth_group_access g INNER JOIN ot_auth_extend c on g.group_id=c.group_id  WHERE ( g.uid='1' and c.type='1' and !isnull(extend_id) )  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000367s ]
SQL: SELECT `id`,`title`,`pid`,`allow_publish` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY pid,sort  [ RunTime:0.000047s ]
SQL: SELECT `id`,`title`,`pid` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY sort  [ RunTime:0.000047s ]
SQL: SHOW COLUMNS FROM `ot_model` [ RunTime:0.000303s ]
SQL: SELECT * FROM `ot_model` WHERE ( `name` = 'document' ) LIMIT 1   [ RunTime:0.000050s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000315s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `pid` = 0 ) AND ( `category_id` = 59 ) LIMIT 1   [ RunTime:0.000196s ]
SQL: SELECT `id`,`uid`,`name`,`title`,`category_id`,`description`,`root`,`pid`,`model_id`,`type`,`position`,`link_id`,`cover_id`,`display`,`deadline`,`attach`,`view`,`comment`,`extend`,`level`,`create_time`,`update_time`,`status` FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `pid` = 0 ) AND ( `category_id` = 59 ) ORDER BY level DESC,id DESC LIMIT 0,10   [ RunTime:0.000224s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000171s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000213s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.018214s ]
INFO: [ view_parse ] --END-- [ RunTime:0.018251s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000032s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000053s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000042s ]
INFO: [ app_end ] --END-- [ RunTime:0.000071s ]

[ 2017-07-14T01:23:11+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/index/cate_id/61.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000338s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000045s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/index%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000258s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000035s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_auth_group_access` [ RunTime:0.000227s ]
SQL: SELECT `extend_id` FROM ot_auth_group_access g INNER JOIN ot_auth_extend c on g.group_id=c.group_id  WHERE ( g.uid='1' and c.type='1' and !isnull(extend_id) )  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000365s ]
SQL: SELECT `id`,`title`,`pid`,`allow_publish` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY pid,sort  [ RunTime:0.000045s ]
SQL: SELECT `id`,`title`,`pid` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY sort  [ RunTime:0.000046s ]
SQL: SHOW COLUMNS FROM `ot_model` [ RunTime:0.000302s ]
SQL: SELECT * FROM `ot_model` WHERE ( `name` = 'document' ) LIMIT 1   [ RunTime:0.000063s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000316s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `pid` = 0 ) AND ( `category_id` = 61 ) LIMIT 1   [ RunTime:0.000205s ]
SQL: SELECT `id`,`uid`,`name`,`title`,`category_id`,`description`,`root`,`pid`,`model_id`,`type`,`position`,`link_id`,`cover_id`,`display`,`deadline`,`attach`,`view`,`comment`,`extend`,`level`,`create_time`,`update_time`,`status` FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `pid` = 0 ) AND ( `category_id` = 61 ) ORDER BY level DESC,id DESC LIMIT 0,10   [ RunTime:0.000218s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000150s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000185s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.019046s ]
INFO: [ view_parse ] --END-- [ RunTime:0.019080s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000029s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000051s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000028s ]
INFO: [ app_end ] --END-- [ RunTime:0.000055s ]

[ 2017-07-14T01:23:17+08:00 ] 130.65.109.113 /index.php?s=/Admin/Config/group.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000373s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000046s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Config/group%' ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000254s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=68 ) LIMIT 1   [ RunTime:0.000054s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 68 )  [ RunTime:0.000038s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 68 ) AND ( `hide` = 0 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '系统设置' ) AND ( `pid` = 68 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '' ) AND ( `pid` = 68 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '数据备份' ) AND ( `pid` = 68 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000042s ]
SQL: SHOW COLUMNS FROM `ot_config` [ RunTime:0.000270s ]
SQL: SELECT `id`,`name`,`title`,`extra`,`value`,`remark`,`type` FROM `ot_config` WHERE ( `status` = 1 ) AND ( `group` = 1 ) ORDER BY sort  [ RunTime:0.000047s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000082s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000114s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.007915s ]
INFO: [ view_parse ] --END-- [ RunTime:0.007950s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000029s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000050s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000029s ]
INFO: [ app_end ] --END-- [ RunTime:0.000056s ]

[ 2017-07-14T01:23:20+08:00 ] 130.65.109.113 /index.php?s=/Admin/Config/group/id/2.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000355s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000046s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Config/group%' ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000264s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=68 ) LIMIT 1   [ RunTime:0.000045s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 68 )  [ RunTime:0.000049s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 68 ) AND ( `hide` = 0 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '系统设置' ) AND ( `pid` = 68 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '' ) AND ( `pid` = 68 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '数据备份' ) AND ( `pid` = 68 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000043s ]
SQL: SHOW COLUMNS FROM `ot_config` [ RunTime:0.000276s ]
SQL: SELECT `id`,`name`,`title`,`extra`,`value`,`remark`,`type` FROM `ot_config` WHERE ( `status` = 1 ) AND ( `group` = 2 ) ORDER BY sort  [ RunTime:0.000047s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000081s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000114s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.007801s ]
INFO: [ view_parse ] --END-- [ RunTime:0.007833s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000027s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000048s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000028s ]
INFO: [ app_end ] --END-- [ RunTime:0.000055s ]

[ 2017-07-14T01:23:36+08:00 ] 130.65.109.113 /index.php?s=/Admin/Config/save.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000021s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000074s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000371s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000066s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Config/save%' ) LIMIT 1   [ RunTime:0.000171s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000274s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=74 ) LIMIT 1   [ RunTime:0.000126s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=70 ) LIMIT 1   [ RunTime:0.000055s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=68 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 68 )  [ RunTime:0.000037s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 68 ) AND ( `hide` = 0 )  [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '系统设置' ) AND ( `pid` = 68 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000053s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '' ) AND ( `pid` = 68 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '数据备份' ) AND ( `pid` = 68 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000036s ]
SQL: SHOW COLUMNS FROM `ot_config` [ RunTime:0.000278s ]
SQL: UPDATE `ot_config` SET `value`='10' WHERE ( `name` = 'REPLY_LIST_ROWS' ) [ RunTime:0.009328s ]
SQL: UPDATE `ot_config` SET `value`='1' WHERE ( `name` = 'OPEN_DRAFTBOX' ) [ RunTime:0.000118s ]
SQL: UPDATE `ot_config` SET `value`='60' WHERE ( `name` = 'DRAFT_AOTOSAVE_INTERVAL' ) [ RunTime:0.000081s ]
SQL: UPDATE `ot_config` SET `value`='1:列表页推荐\r\n2:频道页推荐\r\n4:网站首页推荐' WHERE ( `name` = 'DOCUMENT_POSITION' ) [ RunTime:0.000085s ]
SQL: UPDATE `ot_config` SET `value`='0:所有人可见\r\n1:仅注册会员可见\r\n2:仅管理员可见' WHERE ( `name` = 'DOCUMENT_DISPLAY' ) [ RunTime:0.000085s ]
SQL: UPDATE `ot_config` SET `value`='50' WHERE ( `name` = 'LIST_ROWS' ) [ RunTime:0.000128s ]

[ 2017-07-14T01:23:38+08:00 ] 130.65.109.113 /index.php?s=/Admin/Config/group/id/2.html
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000276s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000045s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Config/group%' ) LIMIT 1   [ RunTime:0.000045s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000264s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=68 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 68 )  [ RunTime:0.000036s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 68 ) AND ( `hide` = 0 )  [ RunTime:0.000037s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '系统设置' ) AND ( `pid` = 68 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000050s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '' ) AND ( `pid` = 68 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '数据备份' ) AND ( `pid` = 68 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000053s ]
SQL: SELECT `id`,`name`,`title`,`extra`,`value`,`remark`,`type` FROM `ot_config` WHERE ( `status` = 1 ) AND ( `group` = 2 ) ORDER BY sort  [ RunTime:0.000180s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000084s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000117s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.007896s ]
INFO: [ view_parse ] --END-- [ RunTime:0.007930s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000029s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000050s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000027s ]
INFO: [ app_end ] --END-- [ RunTime:0.000055s ]

[ 2017-07-14T01:23:39+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/mydocument.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000346s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000046s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/mydocument%' ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000261s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000038s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000042s ]
SQL: SHOW COLUMNS FROM `ot_auth_group_access` [ RunTime:0.000268s ]
SQL: SELECT `extend_id` FROM ot_auth_group_access g INNER JOIN ot_auth_extend c on g.group_id=c.group_id  WHERE ( g.uid='1' and c.type='1' and !isnull(extend_id) )  [ RunTime:0.000046s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000325s ]
SQL: SELECT `id`,`title`,`pid`,`allow_publish` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY pid,sort  [ RunTime:0.000047s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000315s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `uid` = 1 ) AND ( `pid` = 0 ) LIMIT 1   [ RunTime:0.000213s ]
SQL: SELECT `id`,`uid`,`name`,`title`,`category_id`,`description`,`root`,`pid`,`model_id`,`type`,`position`,`link_id`,`cover_id`,`display`,`deadline`,`attach`,`view`,`comment`,`extend`,`level`,`create_time`,`update_time`,`status` FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `uid` = 1 ) AND ( `pid` = 0 ) ORDER BY update_time desc LIMIT 0,50   [ RunTime:0.000387s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000147s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000183s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000352s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=72 ) LIMIT 1   [ RunTime:0.000120s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=59 ) LIMIT 1   [ RunTime:0.000118s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=71 ) LIMIT 1   [ RunTime:0.000115s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000052s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=68 ) LIMIT 1   [ RunTime:0.000107s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=64 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=69 ) LIMIT 1   [ RunTime:0.000112s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=70 ) LIMIT 1   [ RunTime:0.000101s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=51 ) LIMIT 1   [ RunTime:0.000103s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=15 ) LIMIT 1   [ RunTime:0.000098s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=45 ) LIMIT 1   [ RunTime:0.000034s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=67 ) LIMIT 1   [ RunTime:0.000104s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000053s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=66 ) LIMIT 1   [ RunTime:0.000105s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=63 ) LIMIT 1   [ RunTime:0.000036s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=64 ) LIMIT 1   [ RunTime:0.000113s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=63 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=65 ) LIMIT 1   [ RunTime:0.000104s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=63 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=63 ) LIMIT 1   [ RunTime:0.000123s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=48 ) LIMIT 1   [ RunTime:0.000034s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=60 ) LIMIT 1   [ RunTime:0.000103s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000050s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=56 ) LIMIT 1   [ RunTime:0.000095s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000034s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=59 ) LIMIT 1   [ RunTime:0.000095s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000054s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=58 ) LIMIT 1   [ RunTime:0.000103s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=57 ) LIMIT 1   [ RunTime:0.000127s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=55 ) LIMIT 1   [ RunTime:0.000102s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=54 ) LIMIT 1   [ RunTime:0.000102s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000060s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=49 ) LIMIT 1   [ RunTime:0.000113s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=50 ) LIMIT 1   [ RunTime:0.000097s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=44 ) LIMIT 1   [ RunTime:0.000152s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=50 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=45 ) LIMIT 1   [ RunTime:0.000130s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=50 ) LIMIT 1   [ RunTime:0.000036s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=47 ) LIMIT 1   [ RunTime:0.000104s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=50 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=52 ) LIMIT 1   [ RunTime:0.000106s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=39 ) LIMIT 1   [ RunTime:0.000106s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=60 ) LIMIT 1   [ RunTime:0.000098s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=50 ) LIMIT 1   [ RunTime:0.000105s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=50 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=46 ) LIMIT 1   [ RunTime:0.000107s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=50 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=29 ) LIMIT 1   [ RunTime:0.000120s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=57 ) LIMIT 1   [ RunTime:0.000098s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=38 ) LIMIT 1   [ RunTime:0.000106s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=59 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=41 ) LIMIT 1   [ RunTime:0.000103s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=40 ) LIMIT 1   [ RunTime:0.000103s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=37 ) LIMIT 1   [ RunTime:0.000114s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=54 ) LIMIT 1   [ RunTime:0.000106s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=30 ) LIMIT 1   [ RunTime:0.000128s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=58 ) LIMIT 1   [ RunTime:0.000093s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=25 ) LIMIT 1   [ RunTime:0.000113s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=56 ) LIMIT 1   [ RunTime:0.000101s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=36 ) LIMIT 1   [ RunTime:0.000130s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=51 ) LIMIT 1   [ RunTime:0.000086s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=35 ) LIMIT 1   [ RunTime:0.000096s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=54 ) LIMIT 1   [ RunTime:0.000036s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=24 ) LIMIT 1   [ RunTime:0.000103s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=54 ) LIMIT 1   [ RunTime:0.000052s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=34 ) LIMIT 1   [ RunTime:0.000096s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=56 ) LIMIT 1   [ RunTime:0.000034s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=33 ) LIMIT 1   [ RunTime:0.000096s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=54 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=32 ) LIMIT 1   [ RunTime:0.000125s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=56 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=31 ) LIMIT 1   [ RunTime:0.000104s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=56 ) LIMIT 1   [ RunTime:0.000036s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=26 ) LIMIT 1   [ RunTime:0.000107s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=51 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=23 ) LIMIT 1   [ RunTime:0.000101s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=51 ) LIMIT 1   [ RunTime:0.000035s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=21 ) LIMIT 1   [ RunTime:0.000100s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=52 ) LIMIT 1   [ RunTime:0.000094s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=20 ) LIMIT 1   [ RunTime:0.000125s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=51 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=14 ) LIMIT 1   [ RunTime:0.000099s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000091s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=17 ) LIMIT 1   [ RunTime:0.000106s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=49 ) LIMIT 1   [ RunTime:0.000085s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.036006s ]
INFO: [ view_parse ] --END-- [ RunTime:0.036036s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000030s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000049s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000030s ]
INFO: [ app_end ] --END-- [ RunTime:0.000059s ]

[ 2017-07-14T01:23:51+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/index/cate_id/61.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000358s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000048s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/index%' ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000257s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000056s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_auth_group_access` [ RunTime:0.000239s ]
SQL: SELECT `extend_id` FROM ot_auth_group_access g INNER JOIN ot_auth_extend c on g.group_id=c.group_id  WHERE ( g.uid='1' and c.type='1' and !isnull(extend_id) )  [ RunTime:0.000048s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000322s ]
SQL: SELECT `id`,`title`,`pid`,`allow_publish` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY pid,sort  [ RunTime:0.000045s ]
SQL: SELECT `id`,`title`,`pid` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY sort  [ RunTime:0.000045s ]
SQL: SHOW COLUMNS FROM `ot_model` [ RunTime:0.000304s ]
SQL: SELECT * FROM `ot_model` WHERE ( `name` = 'document' ) LIMIT 1   [ RunTime:0.000052s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000327s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `pid` = 0 ) AND ( `category_id` = 61 ) LIMIT 1   [ RunTime:0.000057s ]
SQL: SELECT `id`,`uid`,`name`,`title`,`category_id`,`description`,`root`,`pid`,`model_id`,`type`,`position`,`link_id`,`cover_id`,`display`,`deadline`,`attach`,`view`,`comment`,`extend`,`level`,`create_time`,`update_time`,`status` FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `pid` = 0 ) AND ( `category_id` = 61 ) ORDER BY level DESC,id DESC LIMIT 0,50   [ RunTime:0.000297s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000155s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000201s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.019577s ]
INFO: [ view_parse ] --END-- [ RunTime:0.019617s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000034s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000057s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000072s ]
INFO: [ app_end ] --END-- [ RunTime:0.000105s ]

[ 2017-07-14T01:23:56+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/add/cate_id/61/model_id/2/pid/0.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000455s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000046s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/add%' ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000256s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=4 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000037s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_auth_group_access` [ RunTime:0.000226s ]
SQL: SELECT `extend_id` FROM ot_auth_group_access g INNER JOIN ot_auth_extend c on g.group_id=c.group_id  WHERE ( g.uid='1' and c.type='1' and !isnull(extend_id) )  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000335s ]
SQL: SELECT `id`,`title`,`pid`,`allow_publish` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY pid,sort  [ RunTime:0.000044s ]
SQL: SELECT `id`,`title`,`pid` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY sort  [ RunTime:0.000045s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000309s ]
SQL: SHOW COLUMNS FROM `ot_model` [ RunTime:0.000299s ]
SQL: SELECT `extend` FROM `ot_model` WHERE ( `id` = 2 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SHOW COLUMNS FROM `ot_attribute` [ RunTime:0.000287s ]
SQL: SELECT * FROM `ot_attribute` WHERE ( `model_id` IN ('2','1') )  [ RunTime:0.000060s ]
SQL: SELECT `field_sort` FROM `ot_model` WHERE ( `id` = 2 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT `type` FROM `ot_category` WHERE ( `id` = 61 ) LIMIT 1   [ RunTime:0.000043s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000205s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000244s ]
INFO: [ adminArticleEdit ] --START--
SQL: SHOW COLUMNS FROM `ot_addons` [ RunTime:0.000283s ]
SQL: SELECT `config` FROM `ot_addons` WHERE ( `name` = 'EditorForAdmin' ) AND ( `status` = 1 ) LIMIT 1   [ RunTime:0.000043s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000050s ]
INFO: [ template_filter ] --END-- [ RunTime:-0.008162s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.002140s ]
INFO: [ view_parse ] --END-- [ RunTime:0.002171s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000026s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000047s ]
INFO: Run EditorForAdmin [ RunTime:0.002881s ]
INFO: [ adminArticleEdit ] --END-- [ RunTime:0.002905s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.002478s ]
INFO: [ view_parse ] --END-- [ RunTime:0.002171s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000005s ]
INFO: [ view_filter ] --END-- [ RunTime:-0.000288s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000028s ]
INFO: [ app_end ] --END-- [ RunTime:0.000057s ]

[ 2017-07-14T01:24:57+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000021s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000062s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000343s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000044s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000036s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000256s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000036s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000037s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000314s ]
NOTIC: [2] in_array() expects parameter 2 to be array, string given /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 324 行.
SQL: INSERT INTO `ot_document` (`title`,`name`,`description`,`type`,`display`,`level`,`cover_id`,`view`,`comment`,`create_time`,`link_id`,`id`,`pid`,`model_id`,`category_id`,`uid`,`root`,`attach`,`extend`,`update_time`,`status`,`position`) VALUES ('460. LFU Cache','','',2,1,0,0,0,0,1499966697,0,0,0,2,61,1,0,0,0,1499966697,3,0) [ RunTime:0.000301s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000251s ]
SQL: INSERT INTO `ot_document_article` (`content`,`parse`,`bookmark`,`template`,`id`) VALUES ('<p>LFU 最近最少访问Cache.</p><p><br/></p><p><br/></p>',0,0,'',73) [ RunTime:0.000094s ]

[ 2017-07-14T01:25:57+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000022s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000066s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000357s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000052s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000262s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000316s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000137s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499966757,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499966757,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000136s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000255s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p><br/></p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000104s ]

[ 2017-07-14T01:26:57+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000022s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000063s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000349s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000045s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000257s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000078s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000038s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000316s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000134s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499966817,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499966817,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000133s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000251s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p><br/></p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000095s ]

[ 2017-07-14T01:27:58+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000024s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000088s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000371s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000051s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000259s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000041s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000319s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000177s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499966878,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499966878,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000141s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000253s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000116s ]

[ 2017-07-14T01:28:59+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000022s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000062s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000398s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000049s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000292s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000063s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000045s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000054s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000341s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000137s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499966939,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499966939,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000126s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000284s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000105s ]

[ 2017-07-14T01:30:00+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000024s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000067s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000351s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000046s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000035s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000270s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000044s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000323s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000164s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499967000,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499967000,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000173s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000250s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000122s ]

[ 2017-07-14T01:31:00+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000066s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000348s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000047s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000257s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000326s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000137s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499967060,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499967060,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000143s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000253s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000107s ]

[ 2017-07-14T01:32:01+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000067s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000338s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000047s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000250s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000044s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000044s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000366s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000138s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499967121,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499967121,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000136s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000253s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加hash map.</p><p><br/></p><p>&nbsp;</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000115s ]

[ 2017-07-14T01:33:02+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000066s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000350s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000047s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000262s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000043s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000327s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000136s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499967182,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499967182,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000140s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000251s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加hash map.</p><p><br/></p><p>&nbsp;</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000105s ]

[ 2017-07-14T01:34:03+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000067s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000354s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000045s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000258s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000045s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000328s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000135s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499967243,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499967243,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000137s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000249s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加hash map.</p><p><br/></p><p>&nbsp;</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000112s ]

[ 2017-07-14T01:35:04+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000067s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000357s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000046s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000278s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000044s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000329s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000136s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499967304,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499967304,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000137s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000251s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加hash map.</p><p><br/></p><p>&nbsp;</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000117s ]

[ 2017-07-14T01:36:05+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000066s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000351s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000056s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000036s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000246s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000044s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000035s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000036s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000036s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000309s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000135s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499967365,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499967365,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000134s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000247s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加hash map.</p><p><br/></p><p>&nbsp;</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000097s ]

[ 2017-07-14T01:37:06+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000066s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000351s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000058s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000258s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000041s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000044s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000322s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000150s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499967426,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499967426,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000148s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000260s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加hash map.</p><p><br/></p><p>&nbsp;</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000102s ]

[ 2017-07-14T01:38:07+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000040s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000084s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000354s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000047s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000259s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000041s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000317s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000137s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499967487,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499967487,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000140s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000254s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加hash map.</p><p><br/></p><p>&nbsp;</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000102s ]

[ 2017-07-14T01:39:08+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000066s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000351s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000047s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000262s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000322s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000136s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499967548,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499967548,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000133s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000250s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加hash map.</p><p><br/></p><p>&nbsp;</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000102s ]

[ 2017-07-14T01:40:09+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000065s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000374s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000047s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000259s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000041s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000319s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000134s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499967609,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499967609,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000147s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000253s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加hash map.</p><p><br/></p><p>&nbsp;</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000102s ]

[ 2017-07-14T01:41:10+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000065s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000351s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000046s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000258s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000041s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000052s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000324s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000146s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499967670,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499967670,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000133s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000244s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加hash map.</p><p><br/></p><p>&nbsp;</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000106s ]

[ 2017-07-14T01:42:11+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000024s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000067s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000354s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000047s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000268s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000351s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000137s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499967731,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499967731,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000136s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000245s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加hash map.</p><p><br/></p><p>&nbsp;</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000103s ]

[ 2017-07-14T01:43:12+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000066s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000359s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000045s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000050s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000268s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000049s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000044s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000318s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000141s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499967792,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499967792,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000136s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000250s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加hash map.</p><p><br/></p><p>&nbsp;</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000101s ]

[ 2017-07-14T01:44:13+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000028s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000092s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000337s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000047s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000270s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000066s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000036s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000050s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000342s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000142s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499967853,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499967853,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000136s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000253s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加hash map.</p><p><br/></p><p>&nbsp;</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000094s ]

[ 2017-07-14T01:45:14+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000066s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000356s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000058s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000281s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000036s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000036s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000041s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000037s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000332s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000127s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499967914,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499967914,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000126s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000262s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加hash map.</p><p><br/></p><p>&nbsp;</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000112s ]

[ 2017-07-14T01:46:15+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000024s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000066s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000390s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000048s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000259s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000321s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000146s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499967975,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499967975,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000136s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000255s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加hash map.</p><p><br/></p><p>&nbsp;</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000101s ]

[ 2017-07-14T01:47:16+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000065s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000350s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000046s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000252s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000041s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000312s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000134s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499968036,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499968036,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000133s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000245s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加hash map.</p><p><br/></p><p>&nbsp;</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000115s ]

[ 2017-07-14T01:48:17+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000022s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000064s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000391s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000046s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000254s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000036s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000038s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000311s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000133s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499968097,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499968097,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000133s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000254s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加hash map.</p><p><br/></p><p>&nbsp;</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000100s ]

[ 2017-07-14T01:49:18+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000024s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000068s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000359s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000051s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000269s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000051s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000042s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000307s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000146s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499968158,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499968158,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000138s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000251s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加hash map.</p><p><br/></p><p>&nbsp;</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000102s ]

[ 2017-07-14T01:50:19+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000065s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000348s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000044s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000036s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000302s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000049s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000332s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000134s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499968219,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499968219,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000155s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000277s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加hash map.</p><p><br/></p><p>&nbsp;</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000098s ]

[ 2017-07-14T01:51:20+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000024s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000066s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000349s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000046s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000267s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000052s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000083s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000054s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000321s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000134s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499968280,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499968280,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000134s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000261s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加hash map.</p><p><br/></p><p>&nbsp;</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000102s ]

[ 2017-07-14T01:52:20+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000065s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000371s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000048s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000266s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000043s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000051s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000317s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000144s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499968340,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499968340,`status`=3,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000147s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000256s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加hash map.</p><p><br/></p><p>unsorted_map&nbsp;</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000112s ]

[ 2017-07-14T01:52:59+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/update.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000066s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000341s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000046s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/update%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000253s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=7 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000336s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 73 ) LIMIT 1   [ RunTime:0.000146s ]
SQL: UPDATE `ot_document` SET `title`='460. LFU Cache',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499968379,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=61,`root`=0,`update_time`=1499968379,`status`=1,`position`=0 WHERE ( `id` = 73 ) [ RunTime:0.000143s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000226s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 178 行.
SQL: UPDATE `ot_document_article` SET `content`='<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加hash map.</p><p><br/></p><p><br/></p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 73 ) [ RunTime:0.000139s ]
INFO: [ documentSaveComplete ] --START--
INFO: Run Attachment [ RunTime:0.000096s ]
INFO: [ documentSaveComplete ] --END-- [ RunTime:0.000119s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 189 行.

[ 2017-07-14T01:53:01+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/index/cate_id/61.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000360s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000049s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/index%' ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000261s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000044s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000045s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_auth_group_access` [ RunTime:0.000233s ]
SQL: SELECT `extend_id` FROM ot_auth_group_access g INNER JOIN ot_auth_extend c on g.group_id=c.group_id  WHERE ( g.uid='1' and c.type='1' and !isnull(extend_id) )  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000369s ]
SQL: SELECT `id`,`title`,`pid`,`allow_publish` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY pid,sort  [ RunTime:0.000046s ]
SQL: SELECT `id`,`title`,`pid` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY sort  [ RunTime:0.000047s ]
SQL: SHOW COLUMNS FROM `ot_model` [ RunTime:0.000305s ]
SQL: SELECT * FROM `ot_model` WHERE ( `name` = 'document' ) LIMIT 1   [ RunTime:0.000054s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000308s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `pid` = 0 ) AND ( `category_id` = 61 ) LIMIT 1   [ RunTime:0.000204s ]
SQL: SELECT `id`,`uid`,`name`,`title`,`category_id`,`description`,`root`,`pid`,`model_id`,`type`,`position`,`link_id`,`cover_id`,`display`,`deadline`,`attach`,`view`,`comment`,`extend`,`level`,`create_time`,`update_time`,`status` FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `pid` = 0 ) AND ( `category_id` = 61 ) ORDER BY level DESC,id DESC LIMIT 0,50   [ RunTime:0.000244s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000167s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000209s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.019461s ]
INFO: [ view_parse ] --END-- [ RunTime:0.019498s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000035s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000057s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000030s ]
INFO: [ app_end ] --END-- [ RunTime:0.000059s ]

[ 2017-07-14T01:53:03+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/index/cate_id/64.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000345s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000047s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/index%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000261s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000038s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000037s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_auth_group_access` [ RunTime:0.000274s ]
SQL: SELECT `extend_id` FROM ot_auth_group_access g INNER JOIN ot_auth_extend c on g.group_id=c.group_id  WHERE ( g.uid='1' and c.type='1' and !isnull(extend_id) )  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000319s ]
SQL: SELECT `id`,`title`,`pid`,`allow_publish` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY pid,sort  [ RunTime:0.000045s ]
SQL: SELECT `id`,`title`,`pid` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY sort  [ RunTime:0.000045s ]
SQL: SHOW COLUMNS FROM `ot_model` [ RunTime:0.000303s ]
SQL: SELECT * FROM `ot_model` WHERE ( `name` = 'document' ) LIMIT 1   [ RunTime:0.000052s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000302s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `pid` = 0 ) AND ( `category_id` = 64 ) LIMIT 1   [ RunTime:0.000194s ]
SQL: SELECT `id`,`uid`,`name`,`title`,`category_id`,`description`,`root`,`pid`,`model_id`,`type`,`position`,`link_id`,`cover_id`,`display`,`deadline`,`attach`,`view`,`comment`,`extend`,`level`,`create_time`,`update_time`,`status` FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `pid` = 0 ) AND ( `category_id` = 64 ) ORDER BY level DESC,id DESC LIMIT 0,50   [ RunTime:0.000197s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000146s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000184s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.018117s ]
INFO: [ view_parse ] --END-- [ RunTime:0.018154s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000032s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000053s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000029s ]
INFO: [ app_end ] --END-- [ RunTime:0.000059s ]

[ 2017-07-14T01:54:21+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/add/cate_id/64/model_id/2/pid/0.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000351s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000053s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/add%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000251s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=4 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000084s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000045s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000044s ]
SQL: SHOW COLUMNS FROM `ot_auth_group_access` [ RunTime:0.000226s ]
SQL: SELECT `extend_id` FROM ot_auth_group_access g INNER JOIN ot_auth_extend c on g.group_id=c.group_id  WHERE ( g.uid='1' and c.type='1' and !isnull(extend_id) )  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000319s ]
SQL: SELECT `id`,`title`,`pid`,`allow_publish` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY pid,sort  [ RunTime:0.000044s ]
SQL: SELECT `id`,`title`,`pid` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY sort  [ RunTime:0.000045s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000311s ]
SQL: SHOW COLUMNS FROM `ot_model` [ RunTime:0.000297s ]
SQL: SELECT `extend` FROM `ot_model` WHERE ( `id` = 2 ) LIMIT 1   [ RunTime:0.000046s ]
SQL: SHOW COLUMNS FROM `ot_attribute` [ RunTime:0.000297s ]
SQL: SELECT * FROM `ot_attribute` WHERE ( `model_id` IN ('2','1') )  [ RunTime:0.000060s ]
SQL: SELECT `field_sort` FROM `ot_model` WHERE ( `id` = 2 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `type` FROM `ot_category` WHERE ( `id` = 64 ) LIMIT 1   [ RunTime:0.000044s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000196s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000239s ]
INFO: [ adminArticleEdit ] --START--
SQL: SHOW COLUMNS FROM `ot_addons` [ RunTime:0.000378s ]
SQL: SELECT `config` FROM `ot_addons` WHERE ( `name` = 'EditorForAdmin' ) AND ( `status` = 1 ) LIMIT 1   [ RunTime:0.000043s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000049s ]
INFO: [ template_filter ] --END-- [ RunTime:-0.008405s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.002233s ]
INFO: [ view_parse ] --END-- [ RunTime:0.002264s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000028s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000054s ]
INFO: Run EditorForAdmin [ RunTime:0.003128s ]
INFO: [ adminArticleEdit ] --END-- [ RunTime:0.003152s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.002535s ]
INFO: [ view_parse ] --END-- [ RunTime:0.002264s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000005s ]
INFO: [ view_filter ] --END-- [ RunTime:-0.000242s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000031s ]
INFO: [ app_end ] --END-- [ RunTime:0.000059s ]

[ 2017-07-14T01:55:23+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000065s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000340s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000045s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000036s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000253s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000045s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000036s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000038s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000311s ]
NOTIC: [2] in_array() expects parameter 2 to be array, string given /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 324 行.
SQL: INSERT INTO `ot_document` (`title`,`name`,`description`,`type`,`display`,`level`,`cover_id`,`view`,`comment`,`create_time`,`link_id`,`id`,`pid`,`model_id`,`category_id`,`uid`,`root`,`attach`,`extend`,`update_time`,`status`,`position`) VALUES ('unsorted_map','','',2,1,0,0,0,0,1499968523,0,0,0,2,64,1,0,0,0,1499968523,3,0) [ RunTime:0.000146s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000246s ]
SQL: INSERT INTO `ot_document_article` (`content`,`parse`,`bookmark`,`template`,`id`) VALUES ('',0,0,'',74) [ RunTime:0.000091s ]

[ 2017-07-14T01:55:27+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/update.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000022s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000062s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000358s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000044s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/update%' ) LIMIT 1   [ RunTime:0.000052s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000249s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=7 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000048s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000310s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 74 ) LIMIT 1   [ RunTime:0.000131s ]
SQL: UPDATE `ot_document` SET `title`='unsorted_map',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499968527,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499968527,`status`=1,`position`=0 WHERE ( `id` = 74 ) [ RunTime:0.000144s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000266s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 178 行.
SQL: UPDATE `ot_document_article` SET `content`='<h3 id=\"11-特性\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; line-height: 1.3em; font-size: 1.73em; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; white-space: normal; background-color: rgb(255, 255, 255);\"><strong style=\"box-sizing: border-box;\">1.1 特性</strong></h3><ol style=\"box-sizing: border-box; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\" class=\" list-paddingleft-2\"><li><p>关联性：通过key去检索value，而不是通过绝对地址（和顺序容器不同）</p></li><li><p>无序性：使用hash表存储，内部无序</p></li><li><p>Map : 每个值对应一个键值</p></li><li><p>键唯一性：不存在两个元素的键一样</p></li><li><p>动态内存管理：使用内存管理模型来动态管理所需要的内存空间</p></li></ol><h3 id=\"12-hashtable和bucket\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; line-height: 1.3em; font-size: 1.73em; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; white-space: normal; background-color: rgb(255, 255, 255);\"><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t2\"></a><strong style=\"box-sizing: border-box;\">1.2 Hashtable和bucket</strong></h3><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">由于unordered_map内部采用的hashtable的<a href=\"http://lib.csdn.net/base/31\" class=\"replace_word\" title=\"算法与数据结构知识库\" target=\"_blank\" style=\"text-decoration: none; box-sizing: border-box; color: rgb(223, 52, 52); font-weight: bold;\">数据结构</a>存储，所以，每个特定的key会通过一些特定的哈希运算映射到一个特定的位置，我们知道，hashtable是可能存在冲突的（多个key通过计算映射到同一个位置），在同一个位置的元素会按顺序链在后面。所以把这个位置称为一个bucket是十分形象的（像桶子一样，可以装多个元素）。可以参考<a href=\"http://www.nowamagic.net/academy/detail/3008108\" target=\"_blank\" style=\"text-decoration: none; box-sizing: border-box; color: rgb(12, 137, 207);\">这篇介绍哈希表的文章</a></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"http://img.blog.csdn.net/20160401151505378\" alt=\"这里写图片描述\" title=\"\" style=\"border: none; box-sizing: border-box; max-width: 602px; height: auto;\"/></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\">所以unordered_map内部其实是由很多哈希桶组成的，每个哈希桶中可能没有元素，也可能有多个元素。</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 74 ) [ RunTime:0.000164s ]
INFO: [ documentSaveComplete ] --START--
INFO: Run Attachment [ RunTime:0.000126s ]
INFO: [ documentSaveComplete ] --END-- [ RunTime:0.000153s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 189 行.

[ 2017-07-14T01:55:28+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/index/cate_id/64.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000358s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000058s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/index%' ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000253s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000036s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_auth_group_access` [ RunTime:0.000279s ]
SQL: SELECT `extend_id` FROM ot_auth_group_access g INNER JOIN ot_auth_extend c on g.group_id=c.group_id  WHERE ( g.uid='1' and c.type='1' and !isnull(extend_id) )  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000325s ]
SQL: SELECT `id`,`title`,`pid`,`allow_publish` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY pid,sort  [ RunTime:0.000044s ]
SQL: SELECT `id`,`title`,`pid` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY sort  [ RunTime:0.000045s ]
SQL: SHOW COLUMNS FROM `ot_model` [ RunTime:0.000308s ]
SQL: SELECT * FROM `ot_model` WHERE ( `name` = 'document' ) LIMIT 1   [ RunTime:0.000051s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000313s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `pid` = 0 ) AND ( `category_id` = 64 ) LIMIT 1   [ RunTime:0.000206s ]
SQL: SELECT `id`,`uid`,`name`,`title`,`category_id`,`description`,`root`,`pid`,`model_id`,`type`,`position`,`link_id`,`cover_id`,`display`,`deadline`,`attach`,`view`,`comment`,`extend`,`level`,`create_time`,`update_time`,`status` FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `pid` = 0 ) AND ( `category_id` = 64 ) ORDER BY level DESC,id DESC LIMIT 0,50   [ RunTime:0.000193s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000162s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000201s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.017891s ]
INFO: [ view_parse ] --END-- [ RunTime:0.017926s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000030s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000052s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000028s ]
INFO: [ app_end ] --END-- [ RunTime:0.000056s ]

[ 2017-07-14T01:55:33+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/edit/id/74/model/1/cate_id/64.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000355s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000048s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/edit%' ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000262s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=5 ) LIMIT 1   [ RunTime:0.000046s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000044s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_auth_group_access` [ RunTime:0.000232s ]
SQL: SELECT `extend_id` FROM ot_auth_group_access g INNER JOIN ot_auth_extend c on g.group_id=c.group_id  WHERE ( g.uid='1' and c.type='1' and !isnull(extend_id) )  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000321s ]
SQL: SELECT `id`,`title`,`pid`,`allow_publish` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY pid,sort  [ RunTime:0.000045s ]
SQL: SELECT `id`,`title`,`pid` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY sort  [ RunTime:0.000044s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000322s ]
SQL: SELECT `id`,`uid`,`name`,`title`,`category_id`,`description`,`root`,`pid`,`model_id`,`type`,`position`,`link_id`,`cover_id`,`display`,`deadline`,`attach`,`view`,`comment`,`extend`,`level`,`create_time`,`update_time`,`status` FROM `ot_document` WHERE ( `id` = 74 ) LIMIT 1   [ RunTime:0.000161s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000250s ]
SQL: SELECT `id`,`parse`,`content`,`template`,`bookmark` FROM `ot_document_article` WHERE ( `id` = 74 ) LIMIT 1   [ RunTime:0.000128s ]
SQL: SHOW COLUMNS FROM `ot_model` [ RunTime:0.000309s ]
SQL: SELECT `extend` FROM `ot_model` WHERE ( `id` = 2 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SHOW COLUMNS FROM `ot_attribute` [ RunTime:0.000308s ]
SQL: SELECT * FROM `ot_attribute` WHERE ( `model_id` IN ('2','1') )  [ RunTime:0.000058s ]
SQL: SELECT `field_sort` FROM `ot_model` WHERE ( `id` = 2 ) LIMIT 1   [ RunTime:0.000044s ]
SQL: SELECT `type` FROM `ot_category` WHERE ( `id` = 64 ) LIMIT 1   [ RunTime:0.000041s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000205s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000241s ]
INFO: [ adminArticleEdit ] --START--
SQL: SHOW COLUMNS FROM `ot_addons` [ RunTime:0.000301s ]
SQL: SELECT `config` FROM `ot_addons` WHERE ( `name` = 'EditorForAdmin' ) AND ( `status` = 1 ) LIMIT 1   [ RunTime:0.000044s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000047s ]
INFO: [ template_filter ] --END-- [ RunTime:-0.008480s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.002183s ]
INFO: [ view_parse ] --END-- [ RunTime:0.002215s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000028s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000050s ]
INFO: Run EditorForAdmin [ RunTime:0.002958s ]
INFO: [ adminArticleEdit ] --END-- [ RunTime:0.002983s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.002484s ]
INFO: [ view_parse ] --END-- [ RunTime:0.002215s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000006s ]
INFO: [ view_filter ] --END-- [ RunTime:-0.000247s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000032s ]
INFO: [ app_end ] --END-- [ RunTime:0.000061s ]

[ 2017-07-14T01:59:06+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/update.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000022s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000064s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000343s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000045s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/update%' ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000274s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=7 ) LIMIT 1   [ RunTime:0.000046s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000038s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000309s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 74 ) LIMIT 1   [ RunTime:0.000130s ]
SQL: UPDATE `ot_document` SET `title`='unsorted_map',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499968500,`deadline`=0,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499968746,`status`=1,`position`=0 WHERE ( `id` = 74 ) [ RunTime:0.000147s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000245s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 178 行.
SQL: UPDATE `ot_document_article` SET `content`='<h3 id=\"11-特性\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; line-height: 1.3em; font-size: 1.73em; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" white-space:=\"\" background-color:=\"\"><strong style=\"box-sizing: border-box;\">1.1 特性</strong></h3><ol style=\"box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\" class=\" list-paddingleft-2\"><li><p>关联性：通过key去检索value，而不是通过绝对地址（和顺序容器不同）</p></li><li><p>无序性：使用hash表存储，内部无序</p></li><li><p>Map : 每个值对应一个键值</p></li><li><p>键唯一性：不存在两个元素的键一样</p></li><li><p>动态内存管理：使用内存管理模型来动态管理所需要的内存空间</p></li></ol><h3 id=\"12-hashtable和bucket\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; line-height: 1.3em; font-size: 1.73em; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" white-space:=\"\" background-color:=\"\"><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t2\"></a><strong style=\"box-sizing: border-box;\">1.2 Hashtable和bucket</strong></h3><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\">由于unordered_map内部采用的hashtable的<a href=\"http://lib.csdn.net/base/31\" class=\"replace_word\" title=\"算法与数据结构知识库\" target=\"_blank\" style=\"text-decoration: none; box-sizing: border-box; color: rgb(223, 52, 52); font-weight: bold;\">数据结构</a>存储，所以，每个特定的key会通过一些特定的哈希运算映射到一个特定的位置，我们知道，hashtable是可能存在冲突的（多个key通过计算映射到同一个位置），在同一个位置的元素会按顺序链在后面。所以把这个位置称为一个bucket是十分形象的（像桶子一样，可以装多个元素）。可以参考<a href=\"http://www.nowamagic.net/academy/detail/3008108\" target=\"_blank\" style=\"text-decoration: none; box-sizing: border-box; color: rgb(12, 137, 207);\">这篇介绍哈希表的文章</a></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\"><img src=\"http://img.blog.csdn.net/20160401151505378\" alt=\"这里写图片描述\" title=\"\" style=\"border: none; box-sizing: border-box; max-width: 602px; height: auto;\"/></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\">所以unordered_map内部其实是由很多哈希桶组成的，每个哈希桶中可能没有元素，也可能有多个元素。</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\">count 函数　是由 find　函数实现的．存在返回1 不存在返回0. 这样判断map里是否有这个元素．就不需要再声明一个迭代器了．</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 74 ) [ RunTime:0.000167s ]
INFO: [ documentSaveComplete ] --START--
INFO: Run Attachment [ RunTime:0.000081s ]
INFO: [ documentSaveComplete ] --END-- [ RunTime:0.000106s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 189 行.

[ 2017-07-14T01:59:08+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/index/cate_id/64.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000335s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000045s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/index%' ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000270s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000044s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000038s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_auth_group_access` [ RunTime:0.000232s ]
SQL: SELECT `extend_id` FROM ot_auth_group_access g INNER JOIN ot_auth_extend c on g.group_id=c.group_id  WHERE ( g.uid='1' and c.type='1' and !isnull(extend_id) )  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000324s ]
SQL: SELECT `id`,`title`,`pid`,`allow_publish` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY pid,sort  [ RunTime:0.000045s ]
SQL: SELECT `id`,`title`,`pid` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY sort  [ RunTime:0.000045s ]
SQL: SHOW COLUMNS FROM `ot_model` [ RunTime:0.000312s ]
SQL: SELECT * FROM `ot_model` WHERE ( `name` = 'document' ) LIMIT 1   [ RunTime:0.000052s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000327s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `pid` = 0 ) AND ( `category_id` = 64 ) LIMIT 1   [ RunTime:0.000193s ]
SQL: SELECT `id`,`uid`,`name`,`title`,`category_id`,`description`,`root`,`pid`,`model_id`,`type`,`position`,`link_id`,`cover_id`,`display`,`deadline`,`attach`,`view`,`comment`,`extend`,`level`,`create_time`,`update_time`,`status` FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `pid` = 0 ) AND ( `category_id` = 64 ) ORDER BY level DESC,id DESC LIMIT 0,50   [ RunTime:0.000190s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000144s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000176s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.018130s ]
INFO: [ view_parse ] --END-- [ RunTime:0.018163s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000042s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000063s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000029s ]
INFO: [ app_end ] --END-- [ RunTime:0.000057s ]

[ 2017-07-14T02:02:34+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/edit/id/74/model/1/cate_id/64.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000368s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000044s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/edit%' ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000263s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=5 ) LIMIT 1   [ RunTime:0.000065s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000036s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000048s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_auth_group_access` [ RunTime:0.000244s ]
SQL: SELECT `extend_id` FROM ot_auth_group_access g INNER JOIN ot_auth_extend c on g.group_id=c.group_id  WHERE ( g.uid='1' and c.type='1' and !isnull(extend_id) )  [ RunTime:0.000052s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000330s ]
SQL: SELECT `id`,`title`,`pid`,`allow_publish` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY pid,sort  [ RunTime:0.000058s ]
SQL: SELECT `id`,`title`,`pid` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY sort  [ RunTime:0.000058s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000330s ]
SQL: SELECT `id`,`uid`,`name`,`title`,`category_id`,`description`,`root`,`pid`,`model_id`,`type`,`position`,`link_id`,`cover_id`,`display`,`deadline`,`attach`,`view`,`comment`,`extend`,`level`,`create_time`,`update_time`,`status` FROM `ot_document` WHERE ( `id` = 74 ) LIMIT 1   [ RunTime:0.000165s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000255s ]
SQL: SELECT `id`,`parse`,`content`,`template`,`bookmark` FROM `ot_document_article` WHERE ( `id` = 74 ) LIMIT 1   [ RunTime:0.000126s ]
SQL: SHOW COLUMNS FROM `ot_model` [ RunTime:0.000305s ]
SQL: SELECT `extend` FROM `ot_model` WHERE ( `id` = 2 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_attribute` [ RunTime:0.000288s ]
SQL: SELECT * FROM `ot_attribute` WHERE ( `model_id` IN ('2','1') )  [ RunTime:0.000069s ]
SQL: SELECT `field_sort` FROM `ot_model` WHERE ( `id` = 2 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT `type` FROM `ot_category` WHERE ( `id` = 64 ) LIMIT 1   [ RunTime:0.000038s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000202s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000242s ]
INFO: [ adminArticleEdit ] --START--
SQL: SHOW COLUMNS FROM `ot_addons` [ RunTime:0.000367s ]
SQL: SELECT `config` FROM `ot_addons` WHERE ( `name` = 'EditorForAdmin' ) AND ( `status` = 1 ) LIMIT 1   [ RunTime:0.000048s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000044s ]
INFO: [ template_filter ] --END-- [ RunTime:-0.008738s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.002198s ]
INFO: [ view_parse ] --END-- [ RunTime:0.002229s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000027s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000049s ]
INFO: Run EditorForAdmin [ RunTime:0.003072s ]
INFO: [ adminArticleEdit ] --END-- [ RunTime:0.003096s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.002508s ]
INFO: [ view_parse ] --END-- [ RunTime:0.002229s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000015s ]
INFO: [ view_filter ] --END-- [ RunTime:-0.000257s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000032s ]
INFO: [ app_end ] --END-- [ RunTime:0.000060s ]

[ 2017-07-14T02:03:53+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/update.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000024s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000067s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000352s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000047s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/update%' ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000267s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=7 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000041s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000314s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 74 ) LIMIT 1   [ RunTime:0.000131s ]
SQL: UPDATE `ot_document` SET `title`='unsorted_map',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499968500,`deadline`=0,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499969033,`status`=1,`position`=0 WHERE ( `id` = 74 ) [ RunTime:0.000159s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000252s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 178 行.
SQL: UPDATE `ot_document_article` SET `content`='<h3 id=\"11-特性\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; line-height: 1.3em; font-size: 1.73em; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" white-space:=\"\" background-color:=\"\"><strong style=\"box-sizing: border-box;\">1.1 特性</strong></h3><ol style=\"box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\" class=\" list-paddingleft-2\"><li><p>关联性：通过key去检索value，而不是通过绝对地址（和顺序容器不同）</p></li><li><p>无序性：使用hash表存储，内部无序</p></li><li><p>Map : 每个值对应一个键值</p></li><li><p>键唯一性：不存在两个元素的键一样</p></li><li><p>动态内存管理：使用内存管理模型来动态管理所需要的内存空间</p></li></ol><h3 id=\"12-hashtable和bucket\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; line-height: 1.3em; font-size: 1.73em; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" white-space:=\"\" background-color:=\"\"><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t2\"></a><strong style=\"box-sizing: border-box;\">1.2 Hashtable和bucket</strong></h3><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\">由于unordered_map内部采用的hashtable的<a href=\"http://lib.csdn.net/base/31\" class=\"replace_word\" title=\"算法与数据结构知识库\" target=\"_blank\" style=\"text-decoration: none; box-sizing: border-box; color: rgb(223, 52, 52); font-weight: bold;\">数据结构</a>存储，所以，每个特定的key会通过一些特定的哈希运算映射到一个特定的位置，我们知道，hashtable是可能存在冲突的（多个key通过计算映射到同一个位置），在同一个位置的元素会按顺序链在后面。所以把这个位置称为一个bucket是十分形象的（像桶子一样，可以装多个元素）。可以参考<a href=\"http://www.nowamagic.net/academy/detail/3008108\" target=\"_blank\" style=\"text-decoration: none; box-sizing: border-box; color: rgb(12, 137, 207);\">这篇介绍哈希表的文章</a></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\"><img src=\"http://img.blog.csdn.net/20160401151505378\" alt=\"这里写图片描述\" title=\"\" style=\"border: none; box-sizing: border-box; max-width: 602px; height: auto;\"/></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\">所以unordered_map内部其实是由很多哈希桶组成的，每个哈希桶中可能没有元素，也可能有多个元素。</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\">count 函数　是由 find　函数实现的．存在返回1 不存在返回0. 这样判断map里是否有这个元素．就不需要再声明一个迭代器了．</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\"><br/></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\">和　map 的区别</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\">map 是红黑树,　unsorted_map 是hash表．</p><h2 id=\"头文件\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; line-height: 1.3em; font-size: 2.13em; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; white-space: normal; background-color: rgb(255, 255, 255);\">头文件</h2><ul style=\"box-sizing: border-box; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\" class=\" list-paddingleft-2\"><li><p>map:&nbsp;<strong style=\"box-sizing: border-box;\">#include &lt; map &gt;</strong></p></li><li><p>unordered_map:&nbsp;<strong style=\"box-sizing: border-box;\">#include &lt; unordered_map &gt;</strong></p></li></ul><h2 id=\"内部实现机理\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; line-height: 1.3em; font-size: 2.13em; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; white-space: normal; background-color: rgb(255, 255, 255);\"><a target=\"_blank\" style=\"color: rgb(79, 161, 219); box-sizing: border-box;\" name=\"t2\"></a>内部实现机理</h2><ul style=\"box-sizing: border-box; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\" class=\" list-paddingleft-2\"><li><p>map： map内部实现了一个红黑树，该结构具有自动排序的功能，因此map内部的所有元素都是<strong style=\"box-sizing: border-box;\">有序的</strong>，红黑树的每一个节点都代表着map的一个元素，因此，对于map进行的查找，删除，添加等一系列的操作都相当于是对红黑树进行这样的操作，故红黑树的效率决定了map的效率。</p></li><li><p>unordered_map: unordered_map内部实现了一个哈希表，因此其元素的排列顺序是杂乱的，无序的</p></li></ul><h2 id=\"优缺点以及适用处\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; line-height: 1.3em; font-size: 2.13em; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; white-space: normal; background-color: rgb(255, 255, 255);\"><a target=\"_blank\" style=\"color: rgb(79, 161, 219); box-sizing: border-box;\" name=\"t3\"></a>优缺点以及适用处</h2><ul style=\"box-sizing: border-box; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\" class=\" list-paddingleft-2\"><li><p>map&nbsp;<br style=\"box-sizing: border-box;\"/></p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>空间占用率高，因为map内部实现了红黑树，虽然提高了运行效率，但是因为每一个节点都需要额外保存父节点，孩子节点以及红/黑性质，使得每一个节点都占用大量的空间</p></li><li><p>有序性，这是map结构最大的优点，其元素的有序性在很多应用中都会简化很多的操作</p></li><li><p>红黑树，内部实现一个红黑书使得map的很多操作在<span class=\"MathJax_Preview\" style=\"box-sizing: border-box; color: rgb(136, 136, 136);\"></span><span class=\"MathJax\" id=\"MathJax-Element-3-Frame\" role=\"textbox\" aria-readonly=\"true\" style=\"box-sizing: border-box; display: inline; line-height: normal; word-spacing: normal; word-wrap: normal;  float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px;\"><nobr style=\"box-sizing: border-box; transition: none; border: 0px; padding: 0px; margin: 0px; max-width: none; max-height: none; min-width: 0px; min-height: 0px; vertical-align: 0px; line-height: normal;\"><span class=\"math\" id=\"MathJax-Span-1\" style=\"box-sizing: border-box; transition: none; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; line-height: normal; width: 1.324em;\"><span style=\"box-sizing: border-box; transition: none; display: inline-block; position: relative; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; line-height: normal; width: 1.261em; height: 0px; font-size: 15.9px;\"><span style=\"box-sizing: border-box; transition: none; position: absolute; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; line-height: normal; clip: rect(1.638em 1000em 2.896em -0.5em); top: -2.513em; left: 0.003em;\"><span class=\"mrow\" id=\"MathJax-Span-2\" style=\"box-sizing: border-box; transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; line-height: normal;\"><span class=\"mi\" id=\"MathJax-Span-3\" style=\"box-sizing: border-box; transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; line-height: normal; font-family: STIXGeneral; font-style: italic;\">l<span style=\"box-sizing: border-box; transition: none; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; line-height: normal; overflow: hidden; height: 1px; width: 0.003em;\"></span></span><span class=\"mi\" id=\"MathJax-Span-4\" style=\"box-sizing: border-box; transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; line-height: normal; font-family: STIXGeneral; font-style: italic;\">g</span><span class=\"mi\" id=\"MathJax-Span-5\" style=\"box-sizing: border-box; transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; line-height: normal; font-family: STIXGeneral; font-style: italic;\">n</span></span><span style=\"box-sizing: border-box; transition: none; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; line-height: normal; width: 0px; height: 2.519em;\"></span></span></span><span style=\"box-sizing: border-box; transition: none; display: inline-block; position: static; border-width: 0px 0px 0px 0.003em; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-color: initial; border-image: initial; padding: 0px; margin: 0px; vertical-align: -0.263em; line-height: normal; overflow: hidden; width: 0px; height: 1.07em; color: rgb(255, 255, 255);\"></span></span></nobr></span>的时间复杂度下就可以实现，因此效率非常的高</p></li><li><p><strong style=\"box-sizing: border-box;\">优点</strong>：&nbsp;<br style=\"box-sizing: border-box;\"/></p></li><li><p>缺点：&nbsp;<br style=\"box-sizing: border-box;\"/></p></li><li><p>适用处，对于那些有顺序要求的问题，用map会更高效一些</p></li></ul><li><p>unordered_map&nbsp;<br style=\"box-sizing: border-box;\"/></p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>哈希表的建立比较耗费时间</p></li><li><p>因为内部实现了哈希表，因此其查找速度非常的快</p></li><li><p>优点：&nbsp;<br style=\"box-sizing: border-box;\"/></p></li><li><p>缺点：&nbsp;<br style=\"box-sizing: border-box;\"/></p></li><li><p>适用处，对于查找问题，unordered_map会更加高效一些，因此遇到查找问题，常会考虑一下用unordered_map</p></li></ul></ul><h2 id=\"note\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; line-height: 1.3em; font-size: 2.13em; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; white-space: normal; background-color: rgb(255, 255, 255);\"><a target=\"_blank\" style=\"color: rgb(79, 161, 219); box-sizing: border-box;\" name=\"t4\"></a>note:</h2><ul style=\"box-sizing: border-box; color: rgb(63, 63, 63); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);\" class=\" list-paddingleft-2\"><li><p>对于unordered_map或者unordered_set容器，其遍历顺序与创建该容器时输入元素的顺序是不一定一致的，遍历是按照哈希表从前往后依次遍历的</p></li></ul><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 74 ) [ RunTime:0.000300s ]
INFO: [ documentSaveComplete ] --START--
INFO: Run Attachment [ RunTime:0.000086s ]
INFO: [ documentSaveComplete ] --END-- [ RunTime:0.000111s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 189 行.

[ 2017-07-14T02:03:55+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/index/cate_id/64.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000356s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000048s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/index%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000280s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000055s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000037s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000045s ]
SQL: SHOW COLUMNS FROM `ot_auth_group_access` [ RunTime:0.000288s ]
SQL: SELECT `extend_id` FROM ot_auth_group_access g INNER JOIN ot_auth_extend c on g.group_id=c.group_id  WHERE ( g.uid='1' and c.type='1' and !isnull(extend_id) )  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000324s ]
SQL: SELECT `id`,`title`,`pid`,`allow_publish` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY pid,sort  [ RunTime:0.000045s ]
SQL: SELECT `id`,`title`,`pid` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY sort  [ RunTime:0.000058s ]
SQL: SHOW COLUMNS FROM `ot_model` [ RunTime:0.000312s ]
SQL: SELECT * FROM `ot_model` WHERE ( `name` = 'document' ) LIMIT 1   [ RunTime:0.000052s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000312s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `pid` = 0 ) AND ( `category_id` = 64 ) LIMIT 1   [ RunTime:0.000188s ]
SQL: SELECT `id`,`uid`,`name`,`title`,`category_id`,`description`,`root`,`pid`,`model_id`,`type`,`position`,`link_id`,`cover_id`,`display`,`deadline`,`attach`,`view`,`comment`,`extend`,`level`,`create_time`,`update_time`,`status` FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `pid` = 0 ) AND ( `category_id` = 64 ) ORDER BY level DESC,id DESC LIMIT 0,50   [ RunTime:0.000206s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000149s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000183s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.018412s ]
INFO: [ view_parse ] --END-- [ RunTime:0.018446s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000034s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000056s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000028s ]
INFO: [ app_end ] --END-- [ RunTime:0.000056s ]

[ 2017-07-14T02:04:38+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/edit/id/74/model/1/cate_id/64.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000345s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000047s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/edit%' ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000258s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=5 ) LIMIT 1   [ RunTime:0.000045s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_auth_group_access` [ RunTime:0.000232s ]
SQL: SELECT `extend_id` FROM ot_auth_group_access g INNER JOIN ot_auth_extend c on g.group_id=c.group_id  WHERE ( g.uid='1' and c.type='1' and !isnull(extend_id) )  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000366s ]
SQL: SELECT `id`,`title`,`pid`,`allow_publish` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY pid,sort  [ RunTime:0.000048s ]
SQL: SELECT `id`,`title`,`pid` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY sort  [ RunTime:0.000048s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000322s ]
SQL: SELECT `id`,`uid`,`name`,`title`,`category_id`,`description`,`root`,`pid`,`model_id`,`type`,`position`,`link_id`,`cover_id`,`display`,`deadline`,`attach`,`view`,`comment`,`extend`,`level`,`create_time`,`update_time`,`status` FROM `ot_document` WHERE ( `id` = 74 ) LIMIT 1   [ RunTime:0.000168s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000248s ]
SQL: SELECT `id`,`parse`,`content`,`template`,`bookmark` FROM `ot_document_article` WHERE ( `id` = 74 ) LIMIT 1   [ RunTime:0.000139s ]
SQL: SHOW COLUMNS FROM `ot_model` [ RunTime:0.000307s ]
SQL: SELECT `extend` FROM `ot_model` WHERE ( `id` = 2 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SHOW COLUMNS FROM `ot_attribute` [ RunTime:0.000298s ]
SQL: SELECT * FROM `ot_attribute` WHERE ( `model_id` IN ('2','1') )  [ RunTime:0.000061s ]
SQL: SELECT `field_sort` FROM `ot_model` WHERE ( `id` = 2 ) LIMIT 1   [ RunTime:0.000044s ]
SQL: SELECT `type` FROM `ot_category` WHERE ( `id` = 64 ) LIMIT 1   [ RunTime:0.000042s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000193s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000228s ]
INFO: [ adminArticleEdit ] --START--
SQL: SHOW COLUMNS FROM `ot_addons` [ RunTime:0.000286s ]
SQL: SELECT `config` FROM `ot_addons` WHERE ( `name` = 'EditorForAdmin' ) AND ( `status` = 1 ) LIMIT 1   [ RunTime:0.000045s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000049s ]
INFO: [ template_filter ] --END-- [ RunTime:-0.008319s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.002173s ]
INFO: [ view_parse ] --END-- [ RunTime:0.002205s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000029s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000050s ]
INFO: Run EditorForAdmin [ RunTime:0.002925s ]
INFO: [ adminArticleEdit ] --END-- [ RunTime:0.002950s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.002479s ]
INFO: [ view_parse ] --END-- [ RunTime:0.002205s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000005s ]
INFO: [ view_filter ] --END-- [ RunTime:-0.000255s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000031s ]
INFO: [ app_end ] --END-- [ RunTime:0.000066s ]

[ 2017-07-14T02:05:06+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/update.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000022s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000068s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000351s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000047s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/update%' ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000250s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=7 ) LIMIT 1   [ RunTime:0.000044s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000044s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000374s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 74 ) LIMIT 1   [ RunTime:0.000142s ]
SQL: UPDATE `ot_document` SET `title`='map vs unsorted_map',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499968500,`deadline`=0,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499969106,`status`=1,`position`=0 WHERE ( `id` = 74 ) [ RunTime:0.000154s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000252s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 178 行.
SQL: UPDATE `ot_document_article` SET `content`='<h3 id=\"11-特性\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; line-height: 1.3em; font-size: 1.73em; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" white-space:=\"\" background-color:=\"\"><strong style=\"box-sizing: border-box;\">1.1 特性</strong></h3><ol style=\"box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\" class=\" list-paddingleft-2\"><li><p>关联性：通过key去检索value，而不是通过绝对地址（和顺序容器不同）</p></li><li><p>无序性：使用hash表存储，内部无序</p></li><li><p>Map : 每个值对应一个键值</p></li><li><p>键唯一性：不存在两个元素的键一样</p></li><li><p>动态内存管理：使用内存管理模型来动态管理所需要的内存空间</p></li></ol><h3 id=\"12-hashtable和bucket\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; line-height: 1.3em; font-size: 1.73em; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" white-space:=\"\" background-color:=\"\"><a target=\"_blank\" style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t2\"></a><strong style=\"box-sizing: border-box;\">1.2 Hashtable和bucket</strong></h3><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\">由于unordered_map内部采用的hashtable的<a href=\"http://lib.csdn.net/base/31\" class=\"replace_word\" title=\"算法与数据结构知识库\" target=\"_blank\" style=\"text-decoration: none; box-sizing: border-box; color: rgb(223, 52, 52); font-weight: bold;\">数据结构</a>存储，所以，每个特定的key会通过一些特定的哈希运算映射到一个特定的位置，我们知道，hashtable是可能存在冲突的（多个key通过计算映射到同一个位置），在同一个位置的元素会按顺序链在后面。所以把这个位置称为一个bucket是十分形象的（像桶子一样，可以装多个元素）。可以参考<a href=\"http://www.nowamagic.net/academy/detail/3008108\" target=\"_blank\" style=\"text-decoration: none; box-sizing: border-box; color: rgb(12, 137, 207);\">这篇介绍哈希表的文章</a></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\"><img src=\"http://img.blog.csdn.net/20160401151505378\" alt=\"这里写图片描述\" title=\"\" style=\"border: none; box-sizing: border-box; max-width: 602px; height: auto;\"/></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\">所以unordered_map内部其实是由很多哈希桶组成的，每个哈希桶中可能没有元素，也可能有多个元素。</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\">count 函数　是由 find　函数实现的．存在返回1 不存在返回0. 这样判断map里是否有这个元素．就不需要再声明一个迭代器了．</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\"><br/></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\">和　map 的区别</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"color: rgb(255, 0, 0);\">map 是红黑树,　unsorted_map 是hash表．</span></p><h2 id=\"头文件\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; line-height: 1.3em; font-size: 2.13em; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" white-space:=\"\" background-color:=\"\">头文件</h2><ul style=\"box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\" class=\" list-paddingleft-2\"><li><p>map:&nbsp;<strong style=\"box-sizing: border-box;\">#include &lt; map &gt;</strong></p></li><li><p>unordered_map:&nbsp;<strong style=\"box-sizing: border-box;\">#include &lt; unordered_map &gt;</strong></p></li></ul><h2 id=\"内部实现机理\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; line-height: 1.3em; font-size: 2.13em; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" white-space:=\"\" background-color:=\"\"><a target=\"_blank\" style=\"color: rgb(79, 161, 219); box-sizing: border-box;\" name=\"t2\"></a>内部实现机理</h2><ul style=\"box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\" class=\" list-paddingleft-2\"><li><p>map： map内部实现了一个红黑树，该结构具有自动排序的功能，因此map内部的所有元素都是<strong style=\"box-sizing: border-box;\">有序的</strong>，红黑树的每一个节点都代表着map的一个元素，因此，对于map进行的查找，删除，添加等一系列的操作都相当于是对红黑树进行这样的操作，故红黑树的效率决定了map的效率。</p></li><li><p>unordered_map: unordered_map内部实现了一个哈希表，因此其元素的排列顺序是杂乱的，无序的</p></li></ul><h2 id=\"优缺点以及适用处\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; line-height: 1.3em; font-size: 2.13em; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" white-space:=\"\" background-color:=\"\"><a target=\"_blank\" style=\"color: rgb(79, 161, 219); box-sizing: border-box;\" name=\"t3\"></a>优缺点以及适用处</h2><ul style=\"box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\" class=\" list-paddingleft-2\"><li><p>map&nbsp;<br style=\"box-sizing: border-box;\"/></p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>空间占用率高，因为map内部实现了红黑树，虽然提高了运行效率，但是因为每一个节点都需要额外保存父节点，孩子节点以及红/黑性质，使得每一个节点都占用大量的空间</p></li><li><p>有序性，这是map结构最大的优点，其元素的有序性在很多应用中都会简化很多的操作</p></li><li><p>红黑树，内部实现一个红黑书使得map的很多操作在<span class=\"MathJax_Preview\" style=\"box-sizing: border-box; color: rgb(136, 136, 136);\"></span><span class=\"MathJax\" id=\"MathJax-Element-3-Frame\" role=\"textbox\" aria-readonly=\"true\" style=\"box-sizing: border-box; display: inline; line-height: normal; word-spacing: normal; word-wrap: normal;  float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px;\"><nobr style=\"box-sizing: border-box; transition: none; border: 0px; padding: 0px; margin: 0px; max-width: none; max-height: none; min-width: 0px; min-height: 0px; vertical-align: 0px; line-height: normal;\"><span class=\"math\" id=\"MathJax-Span-1\" style=\"box-sizing: border-box; transition: none; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; line-height: normal; width: 1.324em;\"><span style=\"box-sizing: border-box; transition: none; display: inline-block; position: relative; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; line-height: normal; width: 1.261em; height: 0px; font-size: 15.9px;\"><span style=\"box-sizing: border-box; transition: none; position: absolute; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; line-height: normal; clip: rect(1.638em 1000em 2.896em -0.5em); top: -2.513em; left: 0.003em;\"><span class=\"mrow\" id=\"MathJax-Span-2\" style=\"box-sizing: border-box; transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; line-height: normal;\"><span class=\"mi\" id=\"MathJax-Span-3\" style=\"box-sizing: border-box; transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; line-height: normal; font-family: STIXGeneral; font-style: italic;\">l<span style=\"box-sizing: border-box; transition: none; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; line-height: normal; overflow: hidden; height: 1px; width: 0.003em;\"></span></span><span class=\"mi\" id=\"MathJax-Span-4\" style=\"box-sizing: border-box; transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; line-height: normal; font-family: STIXGeneral; font-style: italic;\">g</span><span class=\"mi\" id=\"MathJax-Span-5\" style=\"box-sizing: border-box; transition: none; display: inline; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; line-height: normal; font-family: STIXGeneral; font-style: italic;\">n</span></span><span style=\"box-sizing: border-box; transition: none; display: inline-block; position: static; border: 0px; padding: 0px; margin: 0px; vertical-align: 0px; line-height: normal; width: 0px; height: 2.519em;\"></span></span></span><span style=\"box-sizing: border-box; transition: none; display: inline-block; position: static; border-width: 0px 0px 0px 0.003em; border-top-style: initial; border-right-style: initial; border-bottom-style: initial; border-left-style: solid; border-color: initial; border-image: initial; padding: 0px; margin: 0px; vertical-align: -0.263em; line-height: normal; overflow: hidden; width: 0px; height: 1.07em; color: rgb(255, 255, 255);\"></span></span></nobr></span>的时间复杂度下就可以实现，因此效率非常的高</p></li><li><p><strong style=\"box-sizing: border-box;\">优点</strong>：&nbsp;<br style=\"box-sizing: border-box;\"/></p></li><li><p>缺点：&nbsp;<br style=\"box-sizing: border-box;\"/></p></li><li><p>适用处，对于那些有顺序要求的问题，用map会更高效一些</p></li></ul><li><p>unordered_map&nbsp;<br style=\"box-sizing: border-box;\"/></p></li><ul style=\"list-style-type: square;\" class=\" list-paddingleft-2\"><li><p>哈希表的建立比较耗费时间</p></li><li><p>因为内部实现了哈希表，因此其查找速度非常的快</p></li><li><p>优点：&nbsp;<br style=\"box-sizing: border-box;\"/></p></li><li><p>缺点：&nbsp;<br style=\"box-sizing: border-box;\"/></p></li><li><p>适用处，对于查找问题，unordered_map会更加高效一些，因此遇到查找问题，常会考虑一下用unordered_map</p></li></ul></ul><h2 id=\"note\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; line-height: 1.3em; font-size: 2.13em; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" white-space:=\"\" background-color:=\"\"><a target=\"_blank\" style=\"color: rgb(79, 161, 219); box-sizing: border-box;\" name=\"t4\"></a>note:</h2><ul style=\"box-sizing: border-box; color: rgb(63, 63, 63); font-family: \" microsoft=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\" class=\" list-paddingleft-2\"><li><p>对于unordered_map或者unordered_set容器，其遍历顺序与创建该容器时输入元素的顺序是不一定一致的，遍历是按照哈希表从前往后依次遍历的</p></li></ul><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 74 ) [ RunTime:0.000290s ]
INFO: [ documentSaveComplete ] --START--
INFO: Run Attachment [ RunTime:0.000080s ]
INFO: [ documentSaveComplete ] --END-- [ RunTime:0.000104s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 189 行.

[ 2017-07-14T02:05:07+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/index/cate_id/64.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000399s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000049s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/index%' ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000259s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000045s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_auth_group_access` [ RunTime:0.000240s ]
SQL: SELECT `extend_id` FROM ot_auth_group_access g INNER JOIN ot_auth_extend c on g.group_id=c.group_id  WHERE ( g.uid='1' and c.type='1' and !isnull(extend_id) )  [ RunTime:0.000043s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000331s ]
SQL: SELECT `id`,`title`,`pid`,`allow_publish` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY pid,sort  [ RunTime:0.000046s ]
SQL: SELECT `id`,`title`,`pid` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY sort  [ RunTime:0.000046s ]
SQL: SHOW COLUMNS FROM `ot_model` [ RunTime:0.000305s ]
SQL: SELECT * FROM `ot_model` WHERE ( `name` = 'document' ) LIMIT 1   [ RunTime:0.000054s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000355s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `pid` = 0 ) AND ( `category_id` = 64 ) LIMIT 1   [ RunTime:0.000196s ]
SQL: SELECT `id`,`uid`,`name`,`title`,`category_id`,`description`,`root`,`pid`,`model_id`,`type`,`position`,`link_id`,`cover_id`,`display`,`deadline`,`attach`,`view`,`comment`,`extend`,`level`,`create_time`,`update_time`,`status` FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `pid` = 0 ) AND ( `category_id` = 64 ) ORDER BY level DESC,id DESC LIMIT 0,50   [ RunTime:0.000198s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000153s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000197s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.018018s ]
INFO: [ view_parse ] --END-- [ RunTime:0.018057s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000033s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000054s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000029s ]
INFO: [ app_end ] --END-- [ RunTime:0.000058s ]

[ 2017-07-14T03:33:28+08:00 ] 130.65.109.113 /
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000317s ]
SQL: SELECT * FROM `ot_document` WHERE ( status=1 ) ORDER BY view desc LIMIT 0,12   [ RunTime:0.000257s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000348s ]
SQL: SELECT `id`,`name`,`title`,`pid`,`sort`,`list_row`,`meta_title`,`keywords`,`description`,`template_index`,`template_lists`,`template_detail`,`template_edit`,`model`,`type`,`link_id`,`allow_publish`,`display`,`reply`,`check`,`reply_model`,`extend`,`create_time`,`update_time`,`status`,`icon` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY sort  [ RunTime:0.000059s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( status=1 ) LIMIT 1   [ RunTime:0.000129s ]
SQL: SELECT * FROM `ot_document` WHERE ( status=1 ) ORDER BY create_time desc LIMIT 0,10   [ RunTime:0.000205s ]
SQL: SELECT * FROM `ot_category` WHERE ( id=64 ) LIMIT 1   [ RunTime:0.000048s ]
SQL: SELECT * FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000061s ]
SQL: SELECT * FROM `ot_category` WHERE ( id=59 ) LIMIT 1   [ RunTime:0.000125s ]
SQL: SELECT * FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000069s ]
SQL: SELECT * FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT * FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT * FROM `ot_category` WHERE ( id=64 ) LIMIT 1   [ RunTime:0.000054s ]
SQL: SELECT * FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT * FROM `ot_category` WHERE ( id=63 ) LIMIT 1   [ RunTime:0.000044s ]
SQL: SELECT * FROM `ot_category` WHERE ( id=63 ) LIMIT 1   [ RunTime:0.000048s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000136s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000176s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.010547s ]
INFO: [ view_parse ] --END-- [ RunTime:0.010581s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000029s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000051s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000030s ]
INFO: [ app_end ] --END-- [ RunTime:0.000059s ]

[ 2017-07-14T03:33:31+08:00 ] 130.65.109.113 /index.php?s=/Admin/Public/login.html
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000035s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000067s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.001564s ]
INFO: [ view_parse ] --END-- [ RunTime:0.001606s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000029s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000050s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000024s ]
INFO: [ app_end ] --END-- [ RunTime:0.000045s ]

[ 2017-07-14T03:33:40+08:00 ] 130.65.109.113 /index.php?s=/Admin/Index/index.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000356s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000042s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Index/index%' ) LIMIT 1   [ RunTime:0.000035s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000265s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=1 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 1 )  [ RunTime:0.000036s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 1 ) AND ( `hide` = 0 )  [ RunTime:0.000034s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000079s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000114s ]
INFO: [ AdminIndex ] --START--
SQL: SHOW COLUMNS FROM `ot_addons` [ RunTime:0.000274s ]
SQL: SELECT `config` FROM `ot_addons` WHERE ( `name` = 'SiteStat' ) AND ( `status` = 1 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SHOW COLUMNS FROM `ot_member` [ RunTime:0.000275s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_member` LIMIT 1   [ RunTime:0.000104s ]
SQL: SHOW COLUMNS FROM `ot_action_log` [ RunTime:0.000238s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_action_log` LIMIT 1   [ RunTime:0.000090s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000366s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` LIMIT 1   [ RunTime:0.000078s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000299s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_category` LIMIT 1   [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_model` [ RunTime:0.000312s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_model` LIMIT 1   [ RunTime:0.000042s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000017s ]
INFO: [ template_filter ] --END-- [ RunTime:-0.004978s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.000868s ]
INFO: [ view_parse ] --END-- [ RunTime:0.000899s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000022s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000043s ]
INFO: Run SiteStat [ RunTime:0.004387s ]
SQL: SELECT `config` FROM `ot_addons` WHERE ( `name` = 'SystemInfo' ) AND ( `status` = 1 ) LIMIT 1   [ RunTime:0.000043s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000020s ]
INFO: [ template_filter ] --END-- [ RunTime:-0.006276s ]
SQL: select version() as v; [ RunTime:0.000107s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.001246s ]
INFO: [ view_parse ] --END-- [ RunTime:-0.000316s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000018s ]
INFO: [ view_filter ] --END-- [ RunTime:-0.001546s ]
INFO: Run SystemInfo [ RunTime:0.001584s ]
SQL: SELECT `config` FROM `ot_addons` WHERE ( `name` = 'DevTeam' ) AND ( `status` = 1 ) LIMIT 1   [ RunTime:0.000065s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000018s ]
INFO: [ template_filter ] --END-- [ RunTime:-0.007746s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.000811s ]
INFO: [ view_parse ] --END-- [ RunTime:-0.001915s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000005s ]
INFO: [ view_filter ] --END-- [ RunTime:-0.002712s ]
INFO: Run DevTeam [ RunTime:0.001133s ]
INFO: [ AdminIndex ] --END-- [ RunTime:0.007144s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.000907s ]
INFO: [ view_parse ] --END-- [ RunTime:-0.001915s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000004s ]
INFO: [ view_filter ] --END-- [ RunTime:-0.002796s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000025s ]
INFO: [ app_end ] --END-- [ RunTime:0.000052s ]

[ 2017-07-14T03:33:42+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/mydocument.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000353s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000073s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/mydocument%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000245s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000067s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000048s ]
SQL: SHOW COLUMNS FROM `ot_auth_group_access` [ RunTime:0.000224s ]
SQL: SELECT `extend_id` FROM ot_auth_group_access g INNER JOIN ot_auth_extend c on g.group_id=c.group_id  WHERE ( g.uid='1' and c.type='1' and !isnull(extend_id) )  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000346s ]
SQL: SELECT `id`,`title`,`pid`,`allow_publish` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY pid,sort  [ RunTime:0.000042s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000309s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `uid` = 1 ) AND ( `pid` = 0 ) LIMIT 1   [ RunTime:0.000205s ]
SQL: SELECT `id`,`uid`,`name`,`title`,`category_id`,`description`,`root`,`pid`,`model_id`,`type`,`position`,`link_id`,`cover_id`,`display`,`deadline`,`attach`,`view`,`comment`,`extend`,`level`,`create_time`,`update_time`,`status` FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `uid` = 1 ) AND ( `pid` = 0 ) ORDER BY update_time desc LIMIT 0,50   [ RunTime:0.000382s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000137s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000169s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000374s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=74 ) LIMIT 1   [ RunTime:0.000126s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=64 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=73 ) LIMIT 1   [ RunTime:0.000117s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=72 ) LIMIT 1   [ RunTime:0.000109s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=59 ) LIMIT 1   [ RunTime:0.000052s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=71 ) LIMIT 1   [ RunTime:0.000114s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=68 ) LIMIT 1   [ RunTime:0.000118s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=64 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=69 ) LIMIT 1   [ RunTime:0.000107s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=70 ) LIMIT 1   [ RunTime:0.000111s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=51 ) LIMIT 1   [ RunTime:0.000112s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=15 ) LIMIT 1   [ RunTime:0.000145s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=45 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=67 ) LIMIT 1   [ RunTime:0.000106s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=66 ) LIMIT 1   [ RunTime:0.000105s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=63 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=64 ) LIMIT 1   [ RunTime:0.000107s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=63 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=65 ) LIMIT 1   [ RunTime:0.000132s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=63 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=63 ) LIMIT 1   [ RunTime:0.000116s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=48 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=60 ) LIMIT 1   [ RunTime:0.000107s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=56 ) LIMIT 1   [ RunTime:0.000110s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=59 ) LIMIT 1   [ RunTime:0.000105s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=58 ) LIMIT 1   [ RunTime:0.000117s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=57 ) LIMIT 1   [ RunTime:0.000104s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000036s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=55 ) LIMIT 1   [ RunTime:0.000106s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000050s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=54 ) LIMIT 1   [ RunTime:0.000098s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=49 ) LIMIT 1   [ RunTime:0.000106s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=50 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=44 ) LIMIT 1   [ RunTime:0.000114s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=50 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=45 ) LIMIT 1   [ RunTime:0.000137s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=50 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=47 ) LIMIT 1   [ RunTime:0.000106s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=50 ) LIMIT 1   [ RunTime:0.000051s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=52 ) LIMIT 1   [ RunTime:0.000119s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000036s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=39 ) LIMIT 1   [ RunTime:0.000119s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=60 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=50 ) LIMIT 1   [ RunTime:0.000134s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=50 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=46 ) LIMIT 1   [ RunTime:0.000115s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=50 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=29 ) LIMIT 1   [ RunTime:0.000106s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=57 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=38 ) LIMIT 1   [ RunTime:0.000124s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=59 ) LIMIT 1   [ RunTime:0.000036s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=41 ) LIMIT 1   [ RunTime:0.000106s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=40 ) LIMIT 1   [ RunTime:0.000097s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=61 ) LIMIT 1   [ RunTime:0.000036s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=37 ) LIMIT 1   [ RunTime:0.000116s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=54 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=30 ) LIMIT 1   [ RunTime:0.000126s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=58 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=25 ) LIMIT 1   [ RunTime:0.000096s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=56 ) LIMIT 1   [ RunTime:0.000036s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=36 ) LIMIT 1   [ RunTime:0.000132s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=51 ) LIMIT 1   [ RunTime:0.000035s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=35 ) LIMIT 1   [ RunTime:0.000121s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=54 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=24 ) LIMIT 1   [ RunTime:0.000106s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=54 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=34 ) LIMIT 1   [ RunTime:0.000106s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=56 ) LIMIT 1   [ RunTime:0.000049s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=33 ) LIMIT 1   [ RunTime:0.000108s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=54 ) LIMIT 1   [ RunTime:0.000051s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=32 ) LIMIT 1   [ RunTime:0.000132s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=56 ) LIMIT 1   [ RunTime:0.000048s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=31 ) LIMIT 1   [ RunTime:0.000103s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=56 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=26 ) LIMIT 1   [ RunTime:0.000106s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=51 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=23 ) LIMIT 1   [ RunTime:0.000106s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=51 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=21 ) LIMIT 1   [ RunTime:0.000106s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=52 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=20 ) LIMIT 1   [ RunTime:0.000135s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=51 ) LIMIT 1   [ RunTime:0.000035s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=14 ) LIMIT 1   [ RunTime:0.000112s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( pid=17 ) LIMIT 1   [ RunTime:0.000108s ]
SQL: SELECT `title` FROM `ot_category` WHERE ( id=49 ) LIMIT 1   [ RunTime:0.000038s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.036782s ]
INFO: [ view_parse ] --END-- [ RunTime:0.036812s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000035s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000069s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000030s ]
INFO: [ app_end ] --END-- [ RunTime:0.000079s ]

[ 2017-07-14T03:33:47+08:00 ] 130.65.109.113 /index.php?s=/Admin/Article/index/cate_id/64.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000363s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000045s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/index%' ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000271s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000044s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000036s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000067s ]
SQL: SHOW COLUMNS FROM `ot_auth_group_access` [ RunTime:0.000250s ]
SQL: SELECT `extend_id` FROM ot_auth_group_access g INNER JOIN ot_auth_extend c on g.group_id=c.group_id  WHERE ( g.uid='1' and c.type='1' and !isnull(extend_id) )  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000334s ]
SQL: SELECT `id`,`title`,`pid`,`allow_publish` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY pid,sort  [ RunTime:0.000044s ]
SQL: SELECT `id`,`title`,`pid` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY sort  [ RunTime:0.000045s ]
SQL: SHOW COLUMNS FROM `ot_model` [ RunTime:0.000313s ]
SQL: SELECT * FROM `ot_model` WHERE ( `name` = 'document' ) LIMIT 1   [ RunTime:0.000063s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000306s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `pid` = 0 ) AND ( `category_id` = 64 ) LIMIT 1   [ RunTime:0.000047s ]
SQL: SELECT `id`,`uid`,`name`,`title`,`category_id`,`description`,`root`,`pid`,`model_id`,`type`,`position`,`link_id`,`cover_id`,`display`,`deadline`,`attach`,`view`,`comment`,`extend`,`level`,`create_time`,`update_time`,`status` FROM `ot_document` WHERE ( `status` IN ('0','1','2') ) AND ( `pid` = 0 ) AND ( `category_id` = 64 ) ORDER BY level DESC,id DESC LIMIT 0,50   [ RunTime:0.000053s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000160s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000195s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.018343s ]
INFO: [ view_parse ] --END-- [ RunTime:0.018376s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000027s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000049s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000026s ]
INFO: [ app_end ] --END-- [ RunTime:0.000051s ]

[ 2017-07-14T03:33:50+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/add/cate_id/64/model_id/2/pid/0.html
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000348s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000047s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/add%' ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000261s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=4 ) LIMIT 1   [ RunTime:0.000044s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000041s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_auth_group_access` [ RunTime:0.000231s ]
SQL: SELECT `extend_id` FROM ot_auth_group_access g INNER JOIN ot_auth_extend c on g.group_id=c.group_id  WHERE ( g.uid='1' and c.type='1' and !isnull(extend_id) )  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000322s ]
SQL: SELECT `id`,`title`,`pid`,`allow_publish` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY pid,sort  [ RunTime:0.000046s ]
SQL: SELECT `id`,`title`,`pid` FROM `ot_category` WHERE ( `status` = 1 ) ORDER BY sort  [ RunTime:0.000046s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000316s ]
SQL: SHOW COLUMNS FROM `ot_model` [ RunTime:0.000298s ]
SQL: SELECT `extend` FROM `ot_model` WHERE ( `id` = 2 ) LIMIT 1   [ RunTime:0.000044s ]
SQL: SHOW COLUMNS FROM `ot_attribute` [ RunTime:0.000347s ]
SQL: SELECT * FROM `ot_attribute` WHERE ( `model_id` IN ('2','1') )  [ RunTime:0.000064s ]
SQL: SELECT `field_sort` FROM `ot_model` WHERE ( `id` = 2 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT `type` FROM `ot_category` WHERE ( `id` = 64 ) LIMIT 1   [ RunTime:0.000040s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000189s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000226s ]
INFO: [ adminArticleEdit ] --START--
SQL: SHOW COLUMNS FROM `ot_addons` [ RunTime:0.000299s ]
SQL: SELECT `config` FROM `ot_addons` WHERE ( `name` = 'EditorForAdmin' ) AND ( `status` = 1 ) LIMIT 1   [ RunTime:0.000047s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000088s ]
INFO: [ template_filter ] --END-- [ RunTime:-0.008147s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.002158s ]
INFO: [ view_parse ] --END-- [ RunTime:0.002189s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000025s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000047s ]
INFO: Run EditorForAdmin [ RunTime:0.002925s ]
INFO: [ adminArticleEdit ] --END-- [ RunTime:0.002950s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.002448s ]
INFO: [ view_parse ] --END-- [ RunTime:0.002189s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000005s ]
INFO: [ view_filter ] --END-- [ RunTime:-0.000239s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000030s ]
INFO: [ app_end ] --END-- [ RunTime:0.000058s ]

[ 2017-07-14T03:34:51+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000021s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000061s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000349s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000048s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000259s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000059s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000042s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000327s ]
NOTIC: [2] in_array() expects parameter 2 to be array, string given /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 324 行.
SQL: INSERT INTO `ot_document` (`title`,`name`,`description`,`type`,`display`,`level`,`cover_id`,`view`,`comment`,`create_time`,`link_id`,`id`,`pid`,`model_id`,`category_id`,`uid`,`root`,`attach`,`extend`,`update_time`,`status`,`position`) VALUES ('remove erase','','',2,1,0,0,0,0,1499974491,0,0,0,2,64,1,0,0,0,1499974491,3,0) [ RunTime:0.000256s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000262s ]
SQL: INSERT INTO `ot_document_article` (`content`,`parse`,`bookmark`,`template`,`id`) VALUES ('',0,0,'',75) [ RunTime:0.000097s ]

[ 2017-07-14T03:35:51+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000024s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000071s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000338s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000055s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000316s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000054s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000057s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000042s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000290s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000143s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499974551,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499974551,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000145s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000292s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000184s ]

[ 2017-07-14T03:36:52+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000067s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000353s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000050s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000258s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000360s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000139s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499974612,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499974612,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000141s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000252s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000166s ]

[ 2017-07-14T03:37:53+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000034s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000074s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000370s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000049s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000257s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000083s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000051s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000316s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000167s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499974673,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499974673,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000136s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000251s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000160s ]

[ 2017-07-14T03:38:54+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000066s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000348s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000047s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000258s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000044s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000317s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000137s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499974734,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499974734,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000136s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000251s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000161s ]

[ 2017-07-14T03:39:55+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000022s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000061s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000349s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000045s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000253s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000323s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000135s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499974795,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499974795,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000137s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000246s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000159s ]

[ 2017-07-14T03:40:56+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000066s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000346s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000047s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000262s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000366s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000138s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499974856,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499974856,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000137s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000253s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000160s ]

[ 2017-07-14T03:41:57+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000074s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000374s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000047s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000251s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000054s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000328s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000146s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499974917,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499974917,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000171s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000264s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000173s ]

[ 2017-07-14T03:42:58+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000022s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000062s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000353s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000047s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000277s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000046s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000322s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000152s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499974978,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499974978,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000136s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000272s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000165s ]

[ 2017-07-14T03:43:59+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000068s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000361s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000049s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000270s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000048s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000038s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000334s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000180s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499975039,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499975039,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000147s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000260s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000162s ]

[ 2017-07-14T03:45:00+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000024s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000066s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000346s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000046s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000049s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000258s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000052s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000078s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000325s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000159s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499975100,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499975100,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000136s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000257s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000171s ]

[ 2017-07-14T03:46:01+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000024s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000066s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000359s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000052s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000259s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000041s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000045s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000318s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000137s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499975161,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499975161,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000178s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000259s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000161s ]

[ 2017-07-14T03:47:02+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000065s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000355s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000046s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000036s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000261s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000314s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000141s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499975222,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499975222,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000133s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000250s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000158s ]

[ 2017-07-14T03:48:03+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000066s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000352s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000046s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000286s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000045s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000366s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000139s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499975283,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499975283,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000137s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000256s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000160s ]

[ 2017-07-14T03:49:04+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000065s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000367s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000043s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000047s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000266s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000053s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000045s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000050s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000037s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000050s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000323s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000139s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499975344,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499975344,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000145s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000267s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000171s ]

[ 2017-07-14T03:50:05+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000072s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000343s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000046s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000256s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000038s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000041s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000317s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000135s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499975405,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499975405,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000133s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000250s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000157s ]

[ 2017-07-14T03:51:06+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000022s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000065s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000359s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000046s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000274s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000044s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000300s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000136s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499975466,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499975466,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000139s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000246s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000157s ]

[ 2017-07-14T03:52:07+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000024s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000066s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000344s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000046s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000299s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000038s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000313s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000135s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499975527,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499975527,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000132s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000247s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000158s ]

[ 2017-07-14T03:53:08+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000022s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000065s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000349s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000046s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000251s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000038s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000313s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000136s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499975588,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499975588,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000136s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000249s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000157s ]

[ 2017-07-14T03:54:09+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000065s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000345s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000045s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000036s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000266s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000056s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000319s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000138s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499975649,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499975649,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000134s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000261s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000161s ]

[ 2017-07-14T03:55:10+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000022s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000064s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000356s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000045s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000269s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000080s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000036s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000343s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000154s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499975710,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499975710,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000155s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000256s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000158s ]

[ 2017-07-14T03:56:11+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000065s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000360s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000049s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000265s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000053s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000050s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000041s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000052s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000321s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000140s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499975771,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499975771,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000134s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000289s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000157s ]

[ 2017-07-14T03:56:16+08:00 ] 123.125.71.46 /index.php?s=/home/article/lists/category/linux.html
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000330s ]
SQL: SELECT * FROM `ot_document` WHERE ( status=1 ) ORDER BY view desc LIMIT 0,12   [ RunTime:0.000300s ]
SQL: SHOW COLUMNS FROM `ot_category` [ RunTime:0.000386s ]
SQL: SELECT `id`,`name`,`title`,`pid`,`sort`,`list_row`,`meta_title`,`keywords`,`description`,`template_index`,`template_lists`,`template_detail`,`template_edit`,`model`,`type`,`link_id`,`allow_publish`,`display`,`reply`,`check`,`reply_model`,`extend`,`create_time`,`update_time`,`status`,`icon` FROM `ot_category` WHERE ( `name` = 'linux' ) LIMIT 1   [ RunTime:0.000162s ]
SQL: SELECT COUNT(*) AS tp_count FROM `ot_document` WHERE ( status=1 AND category_id=51 ) LIMIT 1   [ RunTime:0.000138s ]
SQL: SELECT * FROM `ot_document` WHERE ( status=1 AND category_id=51 ) ORDER BY create_time LIMIT 0,15   [ RunTime:0.000164s ]
SQL: SELECT * FROM `ot_category` WHERE ( id=51 ) LIMIT 1   [ RunTime:0.000048s ]
SQL: SELECT * FROM `ot_category` WHERE ( id=51 ) LIMIT 1   [ RunTime:0.000048s ]
SQL: SELECT * FROM `ot_category` WHERE ( id=51 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT * FROM `ot_category` WHERE ( id=51 ) LIMIT 1   [ RunTime:0.000043s ]
INFO: [ view_parse ] --START--
INFO: [ template_filter ] --START--
INFO: Run Behavior\ContentReplace [ RunTime:0.000098s ]
INFO: [ template_filter ] --END-- [ RunTime:0.000134s ]
INFO: Run Behavior\ParseTemplate [ RunTime:0.008355s ]
INFO: [ view_parse ] --END-- [ RunTime:0.008395s ]
INFO: [ view_filter ] --START--
INFO: Run Behavior\WriteHtmlCache [ RunTime:0.000026s ]
INFO: [ view_filter ] --END-- [ RunTime:0.000046s ]
INFO: [ app_end ] --START--
INFO: Run Behavior\ShowPageTrace [ RunTime:0.000030s ]
INFO: [ app_end ] --END-- [ RunTime:0.000070s ]

[ 2017-07-14T03:57:12+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000024s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000065s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000356s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000044s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000035s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000311s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000325s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000129s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499975832,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499975832,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000144s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000256s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000161s ]

[ 2017-07-14T03:58:13+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000024s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000070s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000343s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000046s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000258s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000036s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000035s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000049s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000055s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000312s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000142s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499975893,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499975893,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000140s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000291s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000159s ]

[ 2017-07-14T03:59:14+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000035s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000076s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000346s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000047s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000238s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000052s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000318s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000144s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499975954,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499975954,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000138s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000268s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000161s ]

[ 2017-07-14T04:00:15+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000065s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000354s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000045s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000255s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000046s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000311s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000151s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499976015,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499976015,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000133s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000247s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000167s ]

[ 2017-07-14T04:01:16+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000024s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000069s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000390s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000047s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000230s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000076s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000058s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000332s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000151s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499976076,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499976076,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000134s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000258s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000162s ]

[ 2017-07-14T04:02:19+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000024s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000078s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000347s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000047s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000278s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000042s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000041s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000041s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000041s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000317s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000140s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499976139,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499976139,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000140s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000257s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000173s ]

[ 2017-07-14T04:03:18+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000023s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000065s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000393s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000048s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000267s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000043s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000052s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000326s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000146s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499976198,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499976198,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000137s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000230s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000200s ]

[ 2017-07-14T04:04:18+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000022s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000064s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000347s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000047s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000263s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000037s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000040s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000037s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000289s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000155s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499976258,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499976258,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000138s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000300s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000147s ]

[ 2017-07-14T04:05:19+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000022s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000065s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000361s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000046s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000050s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000236s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000036s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000040s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000083s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000039s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000327s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000135s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499976319,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499976319,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000161s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000285s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000170s ]

[ 2017-07-14T04:06:20+08:00 ] 130.65.109.113 /index.php?s=/Admin/article/autoSave.html
INFO: [ app_begin ] --START--
INFO: Run Behavior\ReadHtmlCache [ RunTime:0.000024s ]
INFO: [ app_begin ] --END-- [ RunTime:0.000067s ]
NOTIC: [8192] mysql_connect(): The mysql extension is deprecated and will be removed in the future: use mysqli or PDO instead /usr/share/nginx/html/ThinkPHP/Library/Think/Db/Driver/Mysql.class.php 第 52 行.
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000350s ]
SQL: SELECT * FROM `ot_menu` WHERE ( `pid` = 0 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000046s ]
SQL: SELECT `id` FROM `ot_menu` WHERE ( url like '%Article/autosave%' ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SHOW COLUMNS FROM `ot_menu` [ RunTime:0.000272s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=8 ) LIMIT 1   [ RunTime:0.000049s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=3 ) LIMIT 1   [ RunTime:0.000069s ]
SQL: SELECT `id`,`pid`,`title` FROM `ot_menu` WHERE ( id=2 ) LIMIT 1   [ RunTime:0.000038s ]
SQL: SELECT DISTINCT  `group` FROM `ot_menu` WHERE ( pid = 2 )  [ RunTime:0.000036s ]
SQL: SELECT `id`,`url` FROM `ot_menu` WHERE ( `pid` = 2 ) AND ( `hide` = 0 )  [ RunTime:0.000037s ]
SQL: SELECT `id`,`pid`,`title`,`url`,`tip` FROM `ot_menu` WHERE ( `group` = '内容' ) AND ( `pid` = 2 ) AND ( `hide` = 0 ) ORDER BY sort asc  [ RunTime:0.000040s ]
SQL: SHOW COLUMNS FROM `ot_document` [ RunTime:0.000368s ]
SQL: SELECT `status` FROM `ot_document` WHERE ( `id` = 75 ) LIMIT 1   [ RunTime:0.000181s ]
SQL: UPDATE `ot_document` SET `title`='remove erase',`name`='',`description`='',`type`=2,`display`=1,`level`=0,`cover_id`=0,`view`=0,`comment`=0,`create_time`=1499976380,`link_id`=0,`pid`=0,`model_id`=2,`category_id`=64,`root`=0,`update_time`=1499976380,`status`=3,`position`=0 WHERE ( `id` = 75 ) [ RunTime:0.000138s ]
SQL: SHOW COLUMNS FROM `ot_document_article` [ RunTime:0.000266s ]
NOTIC: [8] Undefined variable: id /usr/share/nginx/html/Application/Admin/Model/DocumentModel.class.php 第 547 行.
SQL: UPDATE `ot_document_article` SET `content`='<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>',`parse`=0,`bookmark`=0,`template`='' WHERE ( `id` = 75 ) [ RunTime:0.000187s ]

