-- MySQL dump 10.13  Distrib 5.5.57, for debian-linux-gnu (x86_64)
--
-- Host: localhost    Database: blog
-- ------------------------------------------------------
-- Server version	5.5.57-0ubuntu0.14.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `ot_action`
--

DROP TABLE IF EXISTS `ot_action`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_action` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键',
  `name` char(30) NOT NULL DEFAULT '' COMMENT '行为唯一标识',
  `title` char(80) NOT NULL DEFAULT '' COMMENT '行为说明',
  `remark` char(140) NOT NULL DEFAULT '' COMMENT '行为描述',
  `rule` text NOT NULL COMMENT '行为规则',
  `log` text NOT NULL COMMENT '日志规则',
  `type` tinyint(2) unsigned NOT NULL DEFAULT '1' COMMENT '类型',
  `status` tinyint(2) NOT NULL DEFAULT '0' COMMENT '状态',
  `update_time` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '修改时间',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=12 DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='系统行为表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_action`
--

LOCK TABLES `ot_action` WRITE;
/*!40000 ALTER TABLE `ot_action` DISABLE KEYS */;
INSERT INTO `ot_action` VALUES (1,'user_login','用户登录','积分+10，每天一次','table:member|field:score|condition:uid={$self} AND status>-1|rule:score+10|cycle:24|max:1;','[user|get_nickname]在[time|time_format]登录了后台',1,1,1387181220),(2,'add_article','发布文章','积分+5，每天上限5次','table:member|field:score|condition:uid={$self}|rule:score+5|cycle:24|max:5','',2,0,1380173180),(3,'review','评论','评论积分+1，无限制','table:member|field:score|condition:uid={$self}|rule:score+1','',2,1,1383285646),(4,'add_document','发表文档','积分+10，每天上限5次','table:member|field:score|condition:uid={$self}|rule:score+10|cycle:24|max:5','[user|get_nickname]在[time|time_format]发表了一篇文章。\r\n表[model]，记录编号[record]。',2,0,1386139726),(5,'add_document_topic','发表讨论','积分+5，每天上限10次','table:member|field:score|condition:uid={$self}|rule:score+5|cycle:24|max:10','',2,0,1383285551),(6,'update_config','更新配置','新增或修改或删除配置','','',1,1,1383294988),(7,'update_model','更新模型','新增或修改模型','','',1,1,1383295057),(8,'update_attribute','更新属性','新增或更新或删除属性','','',1,1,1383295963),(9,'update_channel','更新导航','新增或修改或删除导航','','',1,1,1383296301),(10,'update_menu','更新菜单','新增或修改或删除菜单','','',1,1,1383296392),(11,'update_category','更新分类','新增或修改或删除分类','','',1,1,1383296765);
/*!40000 ALTER TABLE `ot_action` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_action_log`
--

DROP TABLE IF EXISTS `ot_action_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_action_log` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键',
  `action_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '行为id',
  `user_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '执行用户id',
  `action_ip` bigint(20) NOT NULL COMMENT '执行行为者ip',
  `model` varchar(50) NOT NULL DEFAULT '' COMMENT '触发行为的表',
  `record_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '触发行为的数据id',
  `remark` varchar(255) NOT NULL DEFAULT '' COMMENT '日志备注',
  `status` tinyint(2) NOT NULL DEFAULT '1' COMMENT '状态',
  `create_time` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '执行行为的时间',
  PRIMARY KEY (`id`),
  KEY `action_ip_ix` (`action_ip`),
  KEY `action_id_ix` (`action_id`),
  KEY `user_id_ix` (`user_id`)
) ENGINE=MyISAM AUTO_INCREMENT=311 DEFAULT CHARSET=utf8 ROW_FORMAT=FIXED COMMENT='行为日志表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_action_log`
--

LOCK TABLES `ot_action_log` WRITE;
/*!40000 ALTER TABLE `ot_action_log` DISABLE KEYS */;
INSERT INTO `ot_action_log` VALUES (1,1,1,2130706433,'member',1,'admin在2015-12-20 18:45登录了后台',1,1450608336),(2,11,1,2130706433,'category',39,'操作url：http://www.phpbst.com/index.php?s=/admin/category/add.html',1,1450608476),(3,11,1,2130706433,'category',40,'操作url：http://www.phpbst.com/index.php?s=/admin/category/add.html',1,1450608518),(4,1,1,2130706433,'member',1,'admin在2015-12-25 00:51登录了后台',1,1450975861),(5,1,1,2130706433,'member',1,'admin在2015-12-26 13:06登录了后台',1,1451106369),(6,9,1,2130706433,'channel',3,'操作url：http://www.phpbst.com/index.php?s=/admin/channel/edit.html',1,1451108734),(7,11,1,2130706433,'category',41,'操作url：http://www.phpbst.com/index.php?s=/admin/category/add.html',1,1451108871),(8,9,1,2130706433,'channel',5,'操作url：http://www.phpbst.com/index.php?s=/admin/channel/edit.html',1,1451108917),(9,1,1,2130706433,'member',1,'admin在2016-01-10 01:23登录了后台',1,1452360183),(10,11,1,2130706433,'category',42,'操作url：http://www.phpbst.com/index.php?s=/admin/category/add.html',1,1452369925),(11,1,1,2130706433,'member',1,'admin在2016-01-10 14:41登录了后台',1,1452408085),(12,11,1,2130706433,'category',39,'操作url：http://www.phpbst.com/index.php?s=/admin/category/edit.html',1,1452410126),(13,11,1,2130706433,'category',40,'操作url：http://www.phpbst.com/index.php?s=/admin/category/edit.html',1,1452412128),(14,1,1,2130706433,'member',1,'admin在2016-01-31 16:18登录了后台',1,1454228328),(15,1,1,3395820372,'member',1,'admin在2016-04-17 13:27登录了后台',1,1460870824),(16,1,1,3395820372,'member',1,'admin在2016-04-17 13:27登录了后台',1,1460870866),(17,1,1,3395820372,'member',1,'admin在2016-04-17 13:29登录了后台',1,1460870974),(18,1,2,3395820372,'member',2,'feng在2016-04-17 13:40登录了后台',1,1460871653),(19,1,1,3395820372,'member',1,'admin在2016-04-17 13:43登录了后台',1,1460871812),(20,1,1,3395820372,'member',1,'admin在2016-04-17 15:22登录了后台',1,1460877743),(21,11,1,3395820372,'category',43,'操作url：/index.php?s=/Admin/Category/add.html',1,1460877967),(22,11,1,3395820372,'category',43,'操作url：/index.php?s=/Admin/Category/remove/id/43.html',1,1460877996),(23,11,1,3395820372,'category',44,'操作url：/index.php?s=/Admin/Category/add.html',1,1460881487),(24,11,1,3395820372,'category',45,'操作url：/index.php?s=/Admin/Category/add.html',1,1460881600),(25,11,1,3395820372,'category',46,'操作url：/index.php?s=/Admin/Category/add.html',1,1460883234),(26,11,1,3395820372,'category',47,'操作url：/index.php?s=/Admin/Category/add.html',1,1460883474),(27,1,1,3395820372,'member',1,'admin在2016-04-17 19:30登录了后台',1,1460892623),(28,11,1,3395820372,'category',48,'操作url：/index.php?s=/Admin/Category/add.html',1,1460892674),(29,11,1,3395820372,'category',49,'操作url：/index.php?s=/Admin/Category/add.html',1,1460892717),(30,1,1,3395820372,'member',1,'admin在2016-04-17 20:53登录了后台',1,1460897582),(31,1,1,3395820372,'member',1,'admin在2016-04-17 21:04登录了后台',1,1460898267),(32,1,1,3395820372,'member',1,'admin在2016-04-17 21:07登录了后台',1,1460898446),(33,1,1,3395820372,'member',1,'admin在2016-04-17 21:07登录了后台',1,1460898467),(34,1,1,3395820372,'member',1,'admin在2016-04-17 21:08登录了后台',1,1460898520),(35,1,1,3395820372,'member',1,'admin在2016-04-17 21:09登录了后台',1,1460898599),(36,1,1,3395820372,'member',1,'admin在2016-04-17 21:21登录了后台',1,1460899288),(37,11,1,3395820372,'category',47,'操作url：/index.php?s=/Admin/Category/remove/id/47.html',1,1460903064),(38,11,1,3395820372,'category',50,'操作url：/index.php?s=/Admin/Category/add.html',1,1460903092),(39,1,1,3395820372,'member',1,'Wayne在2016-04-18 14:23登录了后台',1,1460960597),(40,11,1,3395820372,'category',51,'操作url：/index.php?s=/Admin/Category/add.html',1,1460961086),(41,1,1,3395820372,'member',1,'Wayne在2016-04-20 16:33登录了后台',1,1461141238),(42,11,1,3395820372,'category',52,'操作url：/index.php?s=/Admin/Category/add.html',1,1461141356),(43,11,1,3395820372,'category',52,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461141410),(44,1,1,3395820372,'member',1,'Wayne在2016-04-23 22:30登录了后台',1,1461421831),(45,11,1,3395820372,'category',53,'操作url：/index.php?s=/Admin/Category/add.html',1,1461421953),(46,11,1,3395820372,'category',42,'操作url：/index.php?s=/Admin/Category/remove/id/42.html',1,1461421964),(47,11,1,3395820372,'category',40,'操作url：/index.php?s=/Admin/Category/remove/id/40.html',1,1461421977),(48,11,1,3395820372,'category',39,'操作url：/index.php?s=/Admin/Category/remove/id/39.html',1,1461421983),(49,11,1,3395820372,'category',41,'操作url：/index.php?s=/Admin/Category/remove/id/41.html',1,1461421988),(50,11,1,3395820372,'category',54,'操作url：/index.php?s=/Admin/Category/add.html',1,1461422022),(51,1,1,3395820372,'member',1,'Wayne在2016-04-24 10:41登录了后台',1,1461465660),(52,11,1,3395820372,'category',48,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461465943),(53,11,1,3395820372,'category',53,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461466040),(54,11,1,3395820372,'category',48,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461466175),(55,11,1,3395820372,'category',44,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461466205),(56,11,1,3395820372,'category',44,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461466220),(57,11,1,3395820372,'category',53,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461466242),(58,11,1,3395820372,'category',53,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461466251),(59,11,1,3395820372,'category',1,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461466348),(60,11,1,3395820372,'category',55,'操作url：/index.php?s=/Admin/Category/add.html',1,1461466398),(61,11,1,3395820372,'category',53,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461466420),(62,11,1,3395820372,'category',53,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461466425),(63,11,1,3395820372,'category',53,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461466466),(64,11,1,3395820372,'category',48,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461466477),(65,11,1,3395820372,'category',48,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461466496),(66,11,1,3395820372,'category',48,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461466505),(67,11,1,3395820372,'category',48,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461466525),(68,11,1,3395820372,'category',46,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461466530),(69,11,1,3395820372,'category',44,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461466534),(70,11,1,3395820372,'category',55,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461466538),(71,11,1,3395820372,'category',53,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461466540),(72,11,1,3395820372,'category',48,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461466565),(73,11,1,3395820372,'category',48,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461466598),(74,11,1,3395820372,'category',48,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461467726),(75,1,1,3395820372,'member',1,'Wayne在2016-04-24 14:41登录了后台',1,1461480079),(76,11,1,3395820372,'category',56,'操作url：/index.php?s=/Admin/Category/add.html',1,1461480834),(77,1,1,3395820372,'member',1,'Wayne在2016-04-24 16:28登录了后台',1,1461486480),(78,1,1,3395820372,'member',1,'Wayne在2016-04-24 18:53登录了后台',1,1461495229),(79,1,1,3395820372,'member',1,'Wayne在2016-04-24 19:56登录了后台',1,1461498974),(80,1,1,3395820373,'member',1,'Wayne在2016-04-24 22:34登录了后台',1,1461508467),(81,1,1,3395820373,'member',1,'Wayne在2016-04-24 23:10登录了后台',1,1461510621),(82,11,1,3395820373,'category',45,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461510876),(83,11,1,3395820373,'category',1,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461511382),(84,1,1,3395820372,'member',1,'Wayne在2016-04-25 13:55登录了后台',1,1461563731),(85,11,1,3395820372,'category',44,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461563782),(86,11,1,3395820372,'category',45,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461564079),(87,11,1,3395820372,'category',57,'操作url：/index.php?s=/Admin/Category/add.html',1,1461567945),(88,1,1,3395820372,'member',1,'Wayne在2016-04-25 19:09登录了后台',1,1461582569),(89,11,1,3395820372,'category',58,'操作url：/index.php?s=/Admin/Category/add.html',1,1461585130),(90,11,1,3395820372,'category',58,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461585191),(91,11,1,3395820372,'category',58,'操作url：/index.php?s=/Admin/Category/edit.html',1,1461585229),(92,1,1,3395820371,'member',1,'Wayne在2016-04-26 00:27登录了后台',1,1461601665),(93,1,1,3395820372,'member',1,'Wayne在2016-04-26 09:48登录了后台',1,1461635338),(94,1,1,3395820372,'member',1,'Wayne在2016-04-26 16:57登录了后台',1,1461661073),(95,1,1,3395820372,'member',1,'Wayne在2016-04-26 19:19登录了后台',1,1461669554),(96,1,1,3395820372,'member',1,'Wayne在2016-04-26 21:39登录了后台',1,1461677998),(97,1,1,3395820372,'member',1,'Wayne在2016-04-27 10:19登录了后台',1,1461723599),(98,1,1,3395820371,'member',1,'Wayne在2016-04-30 01:56登录了后台',1,1461952576),(99,1,1,3395820372,'member',1,'Wayne在2016-04-30 08:23登录了后台',1,1461975799),(100,1,1,3395820372,'member',1,'Wayne在2016-04-30 09:19登录了后台',1,1461979153),(101,1,1,3395820372,'member',1,'Wayne在2016-04-30 10:43登录了后台',1,1461984235),(102,1,1,3395820372,'member',1,'Wayne在2016-04-30 13:48登录了后台',1,1461995295),(103,1,1,455478492,'member',1,'Wayne在2016-06-24 22:14登录了后台',1,1466777694),(104,11,1,455478492,'category',59,'操作url：/index.php?s=/Admin/Category/add.html',1,1466777827),(105,11,1,455478492,'category',60,'操作url：/index.php?s=/Admin/Category/add.html',1,1466779712),(106,11,1,455478492,'category',53,'操作url：/index.php?s=/Admin/Category/edit.html',1,1466780757),(107,11,1,455478492,'category',61,'操作url：/index.php?s=/Admin/Category/add.html',1,1466780786),(108,1,1,455478492,'member',1,'Wayne在2016-06-24 23:40登录了后台',1,1466782802),(109,1,1,455478486,'member',1,'Wayne在2016-06-27 22:53登录了后台',1,1467039221),(110,1,1,2005995420,'member',1,'Wayne在2016-06-29 15:24登录了后台',1,1467185070),(111,1,1,2005995420,'member',1,'Wayne在2016-06-29 16:31登录了后台',1,1467189086),(112,11,1,2005995420,'category',60,'操作url：/index.php?s=/Admin/Category/edit.html',1,1467189650),(113,1,1,455478472,'member',1,'Wayne在2016-06-29 22:48登录了后台',1,1467211689),(114,1,1,989567205,'member',1,'Wayne在2016-06-30 09:11登录了后台',1,1467249068),(115,11,1,989567205,'category',62,'操作url：/index.php?s=/Admin/Category/add.html',1,1467249257),(116,1,1,455478472,'member',1,'Wayne在2016-06-30 22:35登录了后台',1,1467297345),(117,1,1,2005995221,'member',1,'Wayne在2016-07-01 10:48登录了后台',1,1467341307),(118,1,1,2005995221,'member',1,'Wayne在2016-07-01 15:02登录了后台',1,1467356526),(119,1,1,455478493,'member',1,'Wayne在2016-07-04 22:28登录了后台',1,1467642481),(120,1,1,2742890687,'member',1,'Wayne在2016-07-05 21:58登录了后台',1,1467727124),(121,1,1,2005995324,'member',1,'Wayne在2016-07-08 09:31登录了后台',1,1467941513),(122,1,1,989567204,'member',1,'Wayne在2016-07-13 14:20登录了后台',1,1468390825),(123,1,1,2005995291,'member',1,'Wayne在2016-07-14 08:51登录了后台',1,1468457499),(124,1,1,455478467,'member',1,'Wayne在2016-07-14 23:30登录了后台',1,1468510229),(125,1,1,2005995420,'member',1,'Wayne在2016-07-15 09:47登录了后台',1,1468547238),(126,1,1,3395820372,'member',1,'Wayne在2016-07-16 09:06登录了后台',1,1468631174),(127,1,1,3395820372,'member',1,'Wayne在2016-07-16 09:18登录了后台',1,1468631908),(128,1,1,3395820372,'member',1,'Wayne在2016-07-16 10:42登录了后台',1,1468636962),(129,1,1,3395820372,'member',1,'Wayne在2016-07-16 15:17登录了后台',1,1468653422),(130,1,1,3395820372,'member',1,'Wayne在2016-07-17 08:21登录了后台',1,1468714912),(131,1,1,455478479,'member',1,'Wayne在2016-07-25 20:16登录了后台',1,1469448999),(132,1,1,2163067143,'member',1,'Wayne在2017-04-28 03:46登录了后台',1,1493322404),(133,1,1,3449484316,'member',1,'Wayne在2017-06-20 08:17登录了后台',1,1497917827),(134,1,1,2185325937,'member',1,'Wayne在2017-06-21 03:02登录了后台',1,1497985321),(135,1,1,2185325937,'member',1,'Wayne在2017-06-21 04:18登录了后台',1,1497989900),(136,1,1,1616567627,'member',1,'Wayne在2017-07-05 02:53登录了后台',1,1499194413),(137,1,1,1614861579,'member',1,'Wayne在2017-07-05 06:18登录了后台',1,1499206727),(138,1,1,1614861579,'member',1,'Wayne在2017-07-05 06:26登录了后台',1,1499207202),(139,1,1,1230871175,'member',1,'Wayne在2017-07-07 01:48登录了后台',1,1499363321),(140,1,1,1614861579,'member',1,'Wayne在2017-07-10 01:41登录了后台',1,1499622090),(141,1,1,1614861579,'member',1,'Wayne在2017-07-10 04:11登录了后台',1,1499631072),(142,1,1,1614861579,'member',1,'Wayne在2017-07-10 05:06登录了后台',1,1499634412),(143,1,1,1614861579,'member',1,'Wayne在2017-07-10 05:45登录了后台',1,1499636739),(144,1,1,1614861579,'member',1,'Wayne在2017-07-10 07:12登录了后台',1,1499641927),(145,1,1,3327882422,'member',1,'Wayne在2017-07-11 07:26登录了后台',1,1499729175),(146,1,1,1230871311,'member',1,'Wayne在2017-07-11 12:26登录了后台',1,1499747166),(147,11,1,1230871311,'category',63,'操作url：/index.php?s=/Admin/Category/add.html',1,1499755960),(148,1,1,411200902,'member',1,'Wayne在2017-07-12 01:41登录了后台',1,1499794885),(149,1,1,411200902,'member',1,'Wayne在2017-07-12 04:14登录了后台',1,1499804080),(150,1,1,411200902,'member',1,'Wayne在2017-07-12 05:10登录了后台',1,1499807423),(151,1,1,411200902,'member',1,'Wayne在2017-07-12 05:39登录了后台',1,1499809168),(152,1,1,411200902,'member',1,'Wayne在2017-07-12 10:09登录了后台',1,1499825344),(153,11,1,411200902,'category',64,'操作url：/index.php?s=/Admin/Category/add.html',1,1499825871),(154,1,1,1230870728,'member',1,'Wayne在2017-07-12 11:14登录了后台',1,1499829240),(155,11,1,1230870728,'category',64,'操作url：/index.php?s=/Admin/Category/edit.html',1,1499829286),(156,11,1,1230870728,'category',64,'操作url：/index.php?s=/Admin/Category/edit.html',1,1499829417),(157,11,1,1230870728,'category',64,'操作url：/index.php?s=/Admin/Category/edit.html',1,1499829501),(158,1,1,1230870728,'member',1,'Wayne在2017-07-12 11:40登录了后台',1,1499830813),(159,1,1,1230870748,'member',1,'Wayne在2017-07-13 00:39登录了后台',1,1499877593),(160,1,1,1230870867,'member',1,'Wayne在2017-07-13 10:02登录了后台',1,1499911372),(161,1,1,1230870867,'member',1,'Wayne在2017-07-13 13:16登录了后台',1,1499922976),(162,1,1,2185325937,'member',1,'Wayne在2017-07-14 01:19登录了后台',1,1499966340),(163,1,1,2185325937,'member',1,'Wayne在2017-07-14 03:33登录了后台',1,1499974419),(164,1,1,2185325937,'member',1,'Wayne在2017-07-14 05:34登录了后台',1,1499981694),(165,1,1,1230870847,'member',1,'Wayne在2017-07-14 10:30登录了后台',1,1499999436),(166,1,1,1230870867,'member',1,'Wayne在2017-07-15 01:50登录了后台',1,1500054613),(167,1,1,411200902,'member',1,'Wayne在2017-07-15 10:38登录了后台',1,1500086332),(168,1,1,411200902,'member',1,'Wayne在2017-07-15 11:25登录了后台',1,1500089115),(169,1,1,411200902,'member',1,'Wayne在2017-07-16 00:02登录了后台',1,1500134561),(170,1,1,411200902,'member',1,'Wayne在2017-07-16 05:03登录了后台',1,1500152611),(171,1,1,411200902,'member',1,'Wayne在2017-07-16 05:15登录了后台',1,1500153317),(172,1,1,411200902,'member',1,'Wayne在2017-07-16 05:19登录了后台',1,1500153579),(173,1,1,3227402816,'member',1,'Wayne在2017-07-18 23:22登录了后台',1,1500391378),(174,1,1,1808912404,'member',1,'Wayne在2017-07-19 13:34登录了后台',1,1500442489),(175,11,1,1808912404,'category',65,'操作url：/index.php?s=/Admin/Category/add.html',1,1500442624),(176,1,1,3227402770,'member',1,'Wayne在2017-07-20 01:07登录了后台',1,1500484078),(177,1,1,3227402770,'member',1,'Wayne在2017-07-20 01:53登录了后台',1,1500486835),(178,1,1,3227402770,'member',1,'Wayne在2017-07-20 02:42登录了后台',1,1500489768),(179,1,1,3227402774,'member',1,'Wayne在2017-07-20 03:46登录了后台',1,1500493598),(180,1,1,3227402770,'member',1,'Wayne在2017-07-20 05:07登录了后台',1,1500498465),(181,1,1,1808912404,'member',1,'Wayne在2017-07-20 11:26登录了后台',1,1500521187),(182,1,1,3227402774,'member',1,'Wayne在2017-07-20 23:37登录了后台',1,1500565077),(183,11,1,3227402774,'category',66,'操作url：/index.php?s=/Admin/Category/add.html',1,1500565127),(184,1,1,3227402770,'member',1,'Wayne在2017-07-21 01:25登录了后台',1,1500571509),(185,1,1,3227402770,'member',1,'Wayne在2017-07-21 03:56登录了后台',1,1500580579),(186,1,1,3227402774,'member',1,'Wayne在2017-07-21 07:16登录了后台',1,1500592609),(187,1,1,3227402770,'member',1,'Wayne在2017-07-21 08:23登录了后台',1,1500596637),(188,1,1,3227402770,'member',1,'Wayne在2017-07-21 09:13登录了后台',1,1500599636),(189,1,1,3227402770,'member',1,'Wayne在2017-07-21 09:41登录了后台',1,1500601291),(190,1,1,3227402774,'member',1,'Wayne在2017-07-22 01:23登录了后台',1,1500657827),(191,11,1,3227402774,'category',67,'操作url：/index.php?s=/Admin/Category/add.html',1,1500657882),(192,11,1,3227402774,'category',68,'操作url：/index.php?s=/Admin/Category/add.html',1,1500658653),(193,11,1,3227402774,'category',68,'操作url：/index.php?s=/Admin/Category/edit.html',1,1500658667),(194,1,1,1808912404,'member',1,'Wayne在2017-07-23 09:51登录了后台',1,1500774694),(195,1,1,1808912404,'member',1,'Wayne在2017-07-23 11:19登录了后台',1,1500779957),(196,1,1,1808912404,'member',1,'Wayne在2017-07-23 12:26登录了后台',1,1500783983),(197,1,1,3227402769,'member',1,'Wayne在2017-07-24 02:42登录了后台',1,1500835348),(198,1,1,3227402769,'member',1,'Wayne在2017-07-24 03:28登录了后台',1,1500838110),(199,1,1,3227402769,'member',1,'Wayne在2017-07-25 05:54登录了后台',1,1500933258),(200,1,1,3227402769,'member',1,'Wayne在2017-07-26 00:31登录了后台',1,1501000296),(201,1,1,3227402769,'member',1,'Wayne在2017-07-26 07:53登录了后台',1,1501026799),(202,1,1,3227402770,'member',1,'Wayne在2017-07-26 12:03登录了后台',1,1501041791),(203,1,1,3227402774,'member',1,'Wayne在2017-07-27 00:31登录了后台',1,1501086668),(204,1,1,3227402769,'member',1,'Wayne在2017-07-27 01:37登录了后台',1,1501090638),(205,1,1,3227402769,'member',1,'Wayne在2017-07-27 07:29登录了后台',1,1501111740),(206,1,1,3227402769,'member',1,'Wayne在2017-07-27 08:19登录了后台',1,1501114747),(207,1,1,1808912404,'member',1,'Wayne在2017-07-27 13:22登录了后台',1,1501132946),(208,1,1,3227402769,'member',1,'Wayne在2017-07-28 01:42登录了后台',1,1501177356),(209,1,1,3227402769,'member',1,'Wayne在2017-07-28 05:37登录了后台',1,1501191444),(210,1,1,3227402774,'member',1,'Wayne在2017-07-28 07:29登录了后台',1,1501198150),(211,1,1,3227402773,'member',1,'Wayne在2017-07-28 10:49登录了后台',1,1501210188),(212,1,1,3227402773,'member',1,'Wayne在2017-07-28 12:29登录了后台',1,1501216169),(213,1,1,3227402773,'member',1,'Wayne在2017-07-28 13:36登录了后台',1,1501220216),(214,1,1,3227402774,'member',1,'Wayne在2017-07-29 05:27登录了后台',1,1501277271),(215,1,1,1808912404,'member',1,'Wayne在2017-07-29 13:13登录了后台',1,1501305199),(216,1,1,1808912404,'member',1,'Wayne在2017-07-29 13:36登录了后台',1,1501306592),(217,1,1,1808912404,'member',1,'Wayne在2017-07-31 09:23登录了后台',1,1501464234),(218,11,1,1808912404,'category',69,'操作url：/index.php?s=/Admin/Category/add.html',1,1501464303),(219,1,1,1808912404,'member',1,'Wayne在2017-07-31 09:28登录了后台',1,1501464480),(220,1,1,1808912404,'member',1,'Wayne在2017-07-31 11:51登录了后台',1,1501473114),(221,11,1,1808912404,'category',70,'操作url：/index.php?s=/Admin/Category/add.html',1,1501477422),(222,1,1,3227402774,'member',1,'Wayne在2017-08-01 00:47登录了后台',1,1501519631),(223,1,1,3227402774,'member',1,'Wayne在2017-08-01 02:11登录了后台',1,1501524678),(224,1,1,3227402774,'member',1,'Wayne在2017-08-01 04:34登录了后台',1,1501533247),(225,11,1,3227402774,'category',71,'操作url：/index.php?s=/Admin/Category/add.html',1,1501537123),(226,11,1,3227402774,'category',71,'操作url：/index.php?s=/Admin/Category/edit.html',1,1501537178),(227,1,1,3227402774,'member',1,'Wayne在2017-08-01 06:26登录了后台',1,1501539972),(228,1,1,3227402769,'member',1,'Wayne在2017-08-01 07:34登录了后台',1,1501544079),(229,1,1,3227402774,'member',1,'Wayne在2017-08-02 01:44登录了后台',1,1501609478),(230,11,1,3227402774,'category',70,'操作url：/index.php?s=/Admin/Category/remove/id/70.html',1,1501617471),(231,11,1,3227402774,'category',72,'操作url：/index.php?s=/Admin/Category/add.html',1,1501617499),(232,1,1,3227402774,'member',1,'Wayne在2017-08-02 05:37登录了后台',1,1501623464),(233,1,1,3227402774,'member',1,'Wayne在2017-08-02 11:54登录了后台',1,1501646091),(234,1,1,1808912404,'member',1,'Wayne在2017-08-02 13:42登录了后台',1,1501652577),(235,1,1,3227402774,'member',1,'Wayne在2017-08-03 04:57登录了后台',1,1501707447),(236,1,1,1808912404,'member',1,'Wayne在2017-08-03 11:59登录了后台',1,1501732758),(237,1,1,1808912404,'member',1,'Wayne在2017-08-03 12:51登录了后台',1,1501735862),(238,11,1,1808912404,'category',73,'操作url：/index.php?s=/Admin/Category/add.html',1,1501735927),(239,1,1,1808912404,'member',1,'Wayne在2017-08-03 13:23登录了后台',1,1501737827),(240,1,1,3227402775,'member',1,'Wayne在2017-08-03 14:09登录了后台',1,1501740578),(241,1,1,3227402775,'member',1,'Wayne在2017-08-03 19:33登录了后台',1,1501759982),(242,1,1,3227402775,'member',1,'Wayne在2017-08-03 20:44登录了后台',1,1501764272),(243,1,1,3227402774,'member',1,'Wayne在2017-08-04 01:24登录了后台',1,1501781052),(244,1,1,1808912404,'member',1,'Wayne在2017-08-04 13:34登录了后台',1,1501824841),(245,1,1,3227402775,'member',1,'Wayne在2017-08-05 07:34登录了后台',1,1501889675),(246,1,1,1808912404,'member',1,'Wayne在2017-08-05 14:30登录了后台',1,1501914649),(247,11,1,1808912404,'category',74,'操作url：/index.php?s=/Admin/Category/add.html',1,1501915167),(248,1,1,1808912404,'member',1,'Wayne在2017-08-05 15:29登录了后台',1,1501918190),(249,11,1,1808912404,'category',75,'操作url：/index.php?s=/Admin/Category/add.html',1,1501918276),(250,11,1,1808912404,'category',76,'操作url：/index.php?s=/Admin/Category/add.html',1,1501918402),(251,1,1,3227402774,'member',1,'Wayne在2017-08-06 05:48登录了后台',1,1501969697),(252,1,1,3227402769,'member',1,'Wayne在2017-08-06 09:29登录了后台',1,1501982998),(253,1,1,1808912404,'member',1,'Wayne在2017-08-06 12:06登录了后台',1,1501992377),(254,1,1,3227402769,'member',1,'Wayne在2017-08-07 07:06登录了后台',1,1502060813),(255,1,1,3227402774,'member',1,'Wayne在2017-08-07 12:48登录了后台',1,1502081337),(256,1,1,3227402770,'member',1,'Wayne在2017-08-08 06:39登录了后台',1,1502145562),(257,1,1,3227402769,'member',1,'Wayne在2017-08-09 01:40登录了后台',1,1502214008),(258,1,1,3227402774,'member',1,'Wayne在2017-08-09 06:09登录了后台',1,1502230175),(259,1,1,3227402768,'member',1,'Wayne在2017-08-09 11:25登录了后台',1,1502249136),(260,1,1,3227402769,'member',1,'Wayne在2017-08-10 07:00登录了后台',1,1502319610),(261,1,1,3227402773,'member',1,'Wayne在2017-08-10 11:25登录了后台',1,1502335542),(262,1,1,3227402769,'member',1,'Wayne在2017-08-11 05:47登录了后台',1,1502401633),(263,1,1,3227402774,'member',1,'Wayne在2017-08-11 07:38登录了后台',1,1502408337),(264,11,1,3227402774,'category',72,'操作url：/index.php?s=/Admin/Category/edit.html',1,1502408399),(265,1,1,3227402769,'member',1,'Wayne在2017-08-12 01:05登录了后台',1,1502471117),(266,1,1,3227402771,'member',1,'Wayne在2017-08-12 14:01登录了后台',1,1502517701),(267,1,1,3227402770,'member',1,'Wayne在2017-08-13 06:58登录了后台',1,1502578695),(268,1,1,3227402770,'member',1,'Wayne在2017-08-13 07:44登录了后台',1,1502581475),(269,1,1,3227402770,'member',1,'Wayne在2017-08-13 09:21登录了后台',1,1502587301),(270,1,1,3227402770,'member',1,'Wayne在2017-08-13 14:31登录了后台',1,1502605882),(271,1,1,3227402771,'member',1,'Wayne在2017-08-14 02:32登录了后台',1,1502649163),(272,1,1,3227402769,'member',1,'Wayne在2017-08-14 11:19登录了后台',1,1502680790),(273,1,1,3227402769,'member',1,'Wayne在2017-08-14 12:54登录了后台',1,1502686495),(274,1,1,1808912404,'member',1,'Wayne在2017-08-14 13:42登录了后台',1,1502689335),(275,1,1,3227402769,'member',1,'Wayne在2017-08-15 00:23登录了后台',1,1502727812),(276,1,1,3227402772,'member',1,'Wayne在2017-08-15 12:11登录了后台',1,1502770303),(277,1,1,3227402769,'member',1,'Wayne在2017-08-16 00:57登录了后台',1,1502816250),(278,1,1,3227402769,'member',1,'Wayne在2017-08-16 01:50登录了后台',1,1502819410),(279,1,1,3227402769,'member',1,'Wayne在2017-08-16 06:19登录了后台',1,1502835555),(280,1,1,1808912404,'member',1,'Wayne在2017-08-16 14:05登录了后台',1,1502863520),(281,11,1,1808912404,'category',77,'操作url：/index.php?s=/Admin/Category/add.html',1,1502864155),(282,1,1,3227402769,'member',1,'Wayne在2017-08-17 01:55登录了后台',1,1502906129),(283,1,1,3227402775,'member',1,'Wayne在2017-08-17 03:50登录了后台',1,1502913013),(284,1,1,3227402775,'member',1,'Wayne在2017-08-17 04:39登录了后台',1,1502915961),(285,1,1,3227402775,'member',1,'Wayne在2017-08-17 06:53登录了后台',1,1502923987),(286,1,1,3227402775,'member',1,'Wayne在2017-08-17 07:52登录了后台',1,1502927540),(287,1,1,1808912404,'member',1,'Wayne在2017-08-17 15:11登录了后台',1,1502953894),(288,1,1,3227402769,'member',1,'Wayne在2017-08-18 00:38登录了后台',1,1502987935),(289,1,1,3227402769,'member',1,'Wayne在2017-08-19 04:47登录了后台',1,1503089232),(290,1,1,3227402769,'member',1,'Wayne在2017-08-19 07:06登录了后台',1,1503097580),(291,1,1,1808912404,'member',1,'Wayne在2017-08-19 16:21登录了后台',1,1503130914),(292,1,1,1808912404,'member',1,'Wayne在2017-08-20 00:57登录了后台',1,1503161820),(293,1,1,1808912404,'member',1,'Wayne在2017-08-20 06:24登录了后台',1,1503181458),(294,1,1,1808912404,'member',1,'Wayne在2017-08-21 08:15登录了后台',1,1503274520),(295,1,1,3227402769,'member',1,'Wayne在2017-08-22 08:52登录了后台',1,1503363139),(296,1,1,3227402769,'member',1,'Wayne在2017-08-23 08:13登录了后台',1,1503447233),(297,1,1,3227402769,'member',1,'Wayne在2017-08-24 00:57登录了后台',1,1503507431),(298,1,1,3227402772,'member',1,'Wayne在2017-08-24 07:47登录了后台',1,1503532057),(299,1,1,3227402772,'member',1,'Wayne在2017-08-25 02:17登录了后台',1,1503598657),(300,1,1,3223504400,'member',1,'Wayne在2017-08-25 13:04登录了后台',1,1503637493),(301,1,1,3227402770,'member',1,'Wayne在2017-08-26 06:19登录了后台',1,1503699561),(302,1,1,3227402771,'member',1,'Wayne在2017-08-27 11:08登录了后台',1,1503803297),(303,1,1,3227402771,'member',1,'Wayne在2017-08-27 14:03登录了后台',1,1503813794),(304,1,1,3227402769,'member',1,'Wayne在2017-08-29 03:09登录了后台',1,1503947385),(305,1,1,3227402774,'member',1,'Wayne在2017-08-29 12:11登录了后台',1,1503979892),(306,1,1,3227402774,'member',1,'Wayne在2017-08-29 15:15登录了后台',1,1503990920),(307,1,1,3227402775,'member',1,'Wayne在2017-08-30 07:19登录了后台',1,1504048770),(308,1,1,3227402775,'member',1,'Wayne在2017-08-30 12:01登录了后台',1,1504065702),(309,1,1,3227402773,'member',1,'Wayne在2017-08-31 06:38登录了后台',1,1504132688),(310,1,1,3227402771,'member',1,'Wayne在2017-09-02 03:25登录了后台',1,1504293921);
/*!40000 ALTER TABLE `ot_action_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_addons`
--

DROP TABLE IF EXISTS `ot_addons`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_addons` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键',
  `name` varchar(40) NOT NULL COMMENT '插件名或标识',
  `title` varchar(20) NOT NULL DEFAULT '' COMMENT '中文名',
  `description` text COMMENT '插件描述',
  `status` tinyint(1) NOT NULL DEFAULT '1' COMMENT '状态',
  `config` text COMMENT '配置',
  `author` varchar(40) DEFAULT '' COMMENT '作者',
  `version` varchar(20) DEFAULT '' COMMENT '版本号',
  `create_time` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '安装时间',
  `has_adminlist` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '是否有后台列表',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=16 DEFAULT CHARSET=utf8 COMMENT='插件表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_addons`
--

LOCK TABLES `ot_addons` WRITE;
/*!40000 ALTER TABLE `ot_addons` DISABLE KEYS */;
INSERT INTO `ot_addons` VALUES (15,'EditorForAdmin','后台编辑器','用于增强整站长文本的输入和显示',1,'{\"editor_type\":\"2\",\"editor_wysiwyg\":\"2\",\"editor_height\":\"500px\",\"editor_resize_type\":\"1\"}','thinkphp','0.1',1383126253,0),(2,'SiteStat','站点统计信息','统计站点的基础信息',1,'{\"title\":\"\\u7cfb\\u7edf\\u4fe1\\u606f\",\"width\":\"1\",\"display\":\"1\",\"status\":\"0\"}','thinkphp','0.1',1379512015,0),(3,'DevTeam','开发团队信息','开发团队成员信息',1,'{\"title\":\"OneThink\\u5f00\\u53d1\\u56e2\\u961f\",\"width\":\"2\",\"display\":\"1\"}','thinkphp','0.1',1379512022,0),(4,'SystemInfo','系统环境信息','用于显示一些服务器的信息',1,'{\"title\":\"\\u7cfb\\u7edf\\u4fe1\\u606f\",\"width\":\"2\",\"display\":\"1\"}','thinkphp','0.1',1379512036,0),(5,'Editor','前台编辑器','用于增强整站长文本的输入和显示',1,'{\"editor_type\":\"2\",\"editor_wysiwyg\":\"1\",\"editor_height\":\"300px\",\"editor_resize_type\":\"1\"}','thinkphp','0.1',1379830910,0),(6,'Attachment','附件','用于文档模型上传附件',1,'null','thinkphp','0.1',1379842319,1),(9,'SocialComment','通用社交化评论','集成了各种社交化评论插件，轻松集成到系统中。',1,'{\"comment_type\":\"1\",\"comment_uid_youyan\":\"\",\"comment_short_name_duoshuo\":\"\",\"comment_data_list_duoshuo\":\"\"}','thinkphp','0.1',1380273962,0);
/*!40000 ALTER TABLE `ot_addons` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_attachment`
--

DROP TABLE IF EXISTS `ot_attachment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_attachment` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `uid` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '用户ID',
  `title` char(30) NOT NULL DEFAULT '' COMMENT '附件显示名',
  `type` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT '附件类型',
  `source` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '资源ID',
  `record_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '关联记录ID',
  `download` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '下载次数',
  `size` bigint(20) unsigned NOT NULL DEFAULT '0' COMMENT '附件大小',
  `dir` int(12) unsigned NOT NULL DEFAULT '0' COMMENT '上级目录ID',
  `sort` int(8) unsigned NOT NULL DEFAULT '0' COMMENT '排序',
  `create_time` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '创建时间',
  `update_time` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '更新时间',
  `status` tinyint(1) NOT NULL DEFAULT '0' COMMENT '状态',
  PRIMARY KEY (`id`),
  KEY `idx_record_status` (`record_id`,`status`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='附件表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_attachment`
--

LOCK TABLES `ot_attachment` WRITE;
/*!40000 ALTER TABLE `ot_attachment` DISABLE KEYS */;
/*!40000 ALTER TABLE `ot_attachment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_attribute`
--

DROP TABLE IF EXISTS `ot_attribute`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_attribute` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(30) NOT NULL DEFAULT '' COMMENT '字段名',
  `title` varchar(100) NOT NULL DEFAULT '' COMMENT '字段注释',
  `field` varchar(100) NOT NULL DEFAULT '' COMMENT '字段定义',
  `type` varchar(20) NOT NULL DEFAULT '' COMMENT '数据类型',
  `value` varchar(100) NOT NULL DEFAULT '' COMMENT '字段默认值',
  `remark` varchar(100) NOT NULL DEFAULT '' COMMENT '备注',
  `is_show` tinyint(1) unsigned NOT NULL DEFAULT '1' COMMENT '是否显示',
  `extra` varchar(255) NOT NULL DEFAULT '' COMMENT '参数',
  `model_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '模型id',
  `is_must` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '是否必填',
  `status` tinyint(2) NOT NULL DEFAULT '0' COMMENT '状态',
  `update_time` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '更新时间',
  `create_time` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '创建时间',
  `validate_rule` varchar(255) NOT NULL,
  `validate_time` tinyint(1) unsigned NOT NULL,
  `error_info` varchar(100) NOT NULL,
  `validate_type` varchar(25) NOT NULL,
  `auto_rule` varchar(100) NOT NULL,
  `auto_time` tinyint(1) unsigned NOT NULL,
  `auto_type` varchar(25) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `model_id` (`model_id`)
) ENGINE=MyISAM AUTO_INCREMENT=33 DEFAULT CHARSET=utf8 COMMENT='模型属性表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_attribute`
--

LOCK TABLES `ot_attribute` WRITE;
/*!40000 ALTER TABLE `ot_attribute` DISABLE KEYS */;
INSERT INTO `ot_attribute` VALUES (1,'uid','用户ID','int(10) unsigned NOT NULL ','num','0','',0,'',1,0,1,1384508362,1383891233,'',0,'','','',0,''),(2,'name','标识','char(40) NOT NULL ','string','','同一根节点下标识不重复',1,'',1,0,1,1383894743,1383891233,'',0,'','','',0,''),(3,'title','标题','char(80) NOT NULL ','string','','文档标题',1,'',1,0,1,1383894778,1383891233,'',0,'','','',0,''),(4,'category_id','所属分类','int(10) unsigned NOT NULL ','string','','',0,'',1,0,1,1384508336,1383891233,'',0,'','','',0,''),(5,'description','描述','char(140) NOT NULL ','textarea','','',1,'',1,0,1,1383894927,1383891233,'',0,'','','',0,''),(6,'root','根节点','int(10) unsigned NOT NULL ','num','0','该文档的顶级文档编号',0,'',1,0,1,1384508323,1383891233,'',0,'','','',0,''),(7,'pid','所属ID','int(10) unsigned NOT NULL ','num','0','父文档编号',0,'',1,0,1,1384508543,1383891233,'',0,'','','',0,''),(8,'model_id','内容模型ID','tinyint(3) unsigned NOT NULL ','num','0','该文档所对应的模型',0,'',1,0,1,1384508350,1383891233,'',0,'','','',0,''),(9,'type','内容类型','tinyint(3) unsigned NOT NULL ','select','2','',1,'1:目录\r\n2:主题\r\n3:段落',1,0,1,1384511157,1383891233,'',0,'','','',0,''),(10,'position','推荐位','smallint(5) unsigned NOT NULL ','checkbox','0','多个推荐则将其推荐值相加',1,'1:列表推荐\r\n2:频道页推荐\r\n4:首页推荐',1,0,1,1383895640,1383891233,'',0,'','','',0,''),(11,'link_id','外链','int(10) unsigned NOT NULL ','num','0','0-非外链，大于0-外链ID,需要函数进行链接与编号的转换',1,'',1,0,1,1383895757,1383891233,'',0,'','','',0,''),(12,'cover_id','封面','int(10) unsigned NOT NULL ','picture','0','0-无封面，大于0-封面图片ID，需要函数处理',1,'',1,0,1,1384147827,1383891233,'',0,'','','',0,''),(13,'display','可见性','tinyint(3) unsigned NOT NULL ','radio','1','',1,'0:不可见\r\n1:所有人可见',1,0,1,1386662271,1383891233,'',0,'','regex','',0,'function'),(14,'deadline','截至时间','int(10) unsigned NOT NULL ','datetime','0','0-永久有效',1,'',1,0,1,1387163248,1383891233,'',0,'','regex','',0,'function'),(15,'attach','附件数量','tinyint(3) unsigned NOT NULL ','num','0','',0,'',1,0,1,1387260355,1383891233,'',0,'','regex','',0,'function'),(16,'view','浏览量','int(10) unsigned NOT NULL ','num','0','',1,'',1,0,1,1383895835,1383891233,'',0,'','','',0,''),(17,'comment','评论数','int(10) unsigned NOT NULL ','num','0','',1,'',1,0,1,1383895846,1383891233,'',0,'','','',0,''),(18,'extend','扩展统计字段','int(10) unsigned NOT NULL ','num','0','根据需求自行使用',0,'',1,0,1,1384508264,1383891233,'',0,'','','',0,''),(19,'level','优先级','int(10) unsigned NOT NULL ','num','0','越高排序越靠前',1,'',1,0,1,1383895894,1383891233,'',0,'','','',0,''),(20,'create_time','创建时间','int(10) unsigned NOT NULL ','datetime','0','',1,'',1,0,1,1383895903,1383891233,'',0,'','','',0,''),(21,'update_time','更新时间','int(10) unsigned NOT NULL ','datetime','0','',0,'',1,0,1,1384508277,1383891233,'',0,'','','',0,''),(22,'status','数据状态','tinyint(4) NOT NULL ','radio','0','',0,'-1:删除\r\n0:禁用\r\n1:正常\r\n2:待审核\r\n3:草稿',1,0,1,1384508496,1383891233,'',0,'','','',0,''),(23,'parse','内容解析类型','tinyint(3) unsigned NOT NULL ','select','0','',0,'0:html\r\n1:ubb\r\n2:markdown',2,0,1,1384511049,1383891243,'',0,'','','',0,''),(24,'content','文章内容','text NOT NULL ','editor','','',1,'',2,0,1,1383896225,1383891243,'',0,'','','',0,''),(25,'template','详情页显示模板','varchar(100) NOT NULL ','string','','参照display方法参数的定义',1,'',2,0,1,1383896190,1383891243,'',0,'','','',0,''),(26,'bookmark','收藏数','int(10) unsigned NOT NULL ','num','0','',1,'',2,0,1,1383896103,1383891243,'',0,'','','',0,''),(27,'parse','内容解析类型','tinyint(3) unsigned NOT NULL ','select','0','',0,'0:html\r\n1:ubb\r\n2:markdown',3,0,1,1387260461,1383891252,'',0,'','regex','',0,'function'),(28,'content','下载详细描述','text NOT NULL ','editor','','',1,'',3,0,1,1383896438,1383891252,'',0,'','','',0,''),(29,'template','详情页显示模板','varchar(100) NOT NULL ','string','','',1,'',3,0,1,1383896429,1383891252,'',0,'','','',0,''),(30,'file_id','文件ID','int(10) unsigned NOT NULL ','file','0','需要函数处理',1,'',3,0,1,1383896415,1383891252,'',0,'','','',0,''),(31,'download','下载次数','int(10) unsigned NOT NULL ','num','0','',1,'',3,0,1,1383896380,1383891252,'',0,'','','',0,''),(32,'size','文件大小','bigint(20) unsigned NOT NULL ','num','0','单位bit',1,'',3,0,1,1383896371,1383891252,'',0,'','','',0,'');
/*!40000 ALTER TABLE `ot_attribute` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_auth_extend`
--

DROP TABLE IF EXISTS `ot_auth_extend`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_auth_extend` (
  `group_id` mediumint(10) unsigned NOT NULL COMMENT '用户id',
  `extend_id` mediumint(8) unsigned NOT NULL COMMENT '扩展表中数据的id',
  `type` tinyint(1) unsigned NOT NULL COMMENT '扩展类型标识 1:栏目分类权限;2:模型权限',
  UNIQUE KEY `group_extend_type` (`group_id`,`extend_id`,`type`),
  KEY `uid` (`group_id`),
  KEY `group_id` (`extend_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='用户组与分类的对应关系表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_auth_extend`
--

LOCK TABLES `ot_auth_extend` WRITE;
/*!40000 ALTER TABLE `ot_auth_extend` DISABLE KEYS */;
INSERT INTO `ot_auth_extend` VALUES (1,1,1),(1,1,2),(1,2,1),(1,2,2),(1,3,1),(1,3,2),(1,4,1),(1,37,1);
/*!40000 ALTER TABLE `ot_auth_extend` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_auth_group`
--

DROP TABLE IF EXISTS `ot_auth_group`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_auth_group` (
  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT COMMENT '用户组id,自增主键',
  `module` varchar(20) NOT NULL COMMENT '用户组所属模块',
  `type` tinyint(4) NOT NULL COMMENT '组类型',
  `title` char(20) NOT NULL DEFAULT '' COMMENT '用户组中文名称',
  `description` varchar(80) NOT NULL DEFAULT '' COMMENT '描述信息',
  `status` tinyint(1) NOT NULL DEFAULT '1' COMMENT '用户组状态：为1正常，为0禁用,-1为删除',
  `rules` varchar(500) NOT NULL DEFAULT '' COMMENT '用户组拥有的规则id，多个规则 , 隔开',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_auth_group`
--

LOCK TABLES `ot_auth_group` WRITE;
/*!40000 ALTER TABLE `ot_auth_group` DISABLE KEYS */;
INSERT INTO `ot_auth_group` VALUES (1,'admin',1,'默认用户组','',1,'1,2,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,81,82,83,84,86,87,88,89,90,91,92,93,94,95,96,97,100,102,103,105,106'),(2,'admin',1,'测试用户','测试用户',1,'1,2,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,79,80,82,83,84,88,89,90,91,92,93,96,97,100,102,103,195');
/*!40000 ALTER TABLE `ot_auth_group` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_auth_group_access`
--

DROP TABLE IF EXISTS `ot_auth_group_access`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_auth_group_access` (
  `uid` int(10) unsigned NOT NULL COMMENT '用户id',
  `group_id` mediumint(8) unsigned NOT NULL COMMENT '用户组id',
  UNIQUE KEY `uid_group_id` (`uid`,`group_id`),
  KEY `uid` (`uid`),
  KEY `group_id` (`group_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_auth_group_access`
--

LOCK TABLES `ot_auth_group_access` WRITE;
/*!40000 ALTER TABLE `ot_auth_group_access` DISABLE KEYS */;
/*!40000 ALTER TABLE `ot_auth_group_access` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_auth_rule`
--

DROP TABLE IF EXISTS `ot_auth_rule`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_auth_rule` (
  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT COMMENT '规则id,自增主键',
  `module` varchar(20) NOT NULL COMMENT '规则所属module',
  `type` tinyint(2) NOT NULL DEFAULT '1' COMMENT '1-url;2-主菜单',
  `name` char(80) NOT NULL DEFAULT '' COMMENT '规则唯一英文标识',
  `title` char(20) NOT NULL DEFAULT '' COMMENT '规则中文描述',
  `status` tinyint(1) NOT NULL DEFAULT '1' COMMENT '是否有效(0:无效,1:有效)',
  `condition` varchar(300) NOT NULL DEFAULT '' COMMENT '规则附加条件',
  PRIMARY KEY (`id`),
  KEY `module` (`module`,`status`,`type`)
) ENGINE=MyISAM AUTO_INCREMENT=217 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_auth_rule`
--

LOCK TABLES `ot_auth_rule` WRITE;
/*!40000 ALTER TABLE `ot_auth_rule` DISABLE KEYS */;
INSERT INTO `ot_auth_rule` VALUES (1,'admin',2,'Admin/Index/index','首页',1,''),(2,'admin',2,'Admin/Article/mydocument','内容',1,''),(3,'admin',2,'Admin/User/index','用户',1,''),(4,'admin',2,'Admin/Addons/index','扩展',1,''),(5,'admin',2,'Admin/Config/group','系统',1,''),(7,'admin',1,'Admin/article/add','新增',1,''),(8,'admin',1,'Admin/article/edit','编辑',1,''),(9,'admin',1,'Admin/article/setStatus','改变状态',1,''),(10,'admin',1,'Admin/article/update','保存',1,''),(11,'admin',1,'Admin/article/autoSave','保存草稿',1,''),(12,'admin',1,'Admin/article/move','移动',1,''),(13,'admin',1,'Admin/article/copy','复制',1,''),(14,'admin',1,'Admin/article/paste','粘贴',1,''),(15,'admin',1,'Admin/article/permit','还原',1,''),(16,'admin',1,'Admin/article/clear','清空',1,''),(17,'admin',1,'Admin/article/index','文档列表',1,''),(18,'admin',1,'Admin/article/recycle','回收站',1,''),(19,'admin',1,'Admin/User/addaction','新增用户行为',1,''),(20,'admin',1,'Admin/User/editaction','编辑用户行为',1,''),(21,'admin',1,'Admin/User/saveAction','保存用户行为',1,''),(22,'admin',1,'Admin/User/setStatus','变更行为状态',1,''),(23,'admin',1,'Admin/User/changeStatus?method=forbidUser','禁用会员',1,''),(24,'admin',1,'Admin/User/changeStatus?method=resumeUser','启用会员',1,''),(25,'admin',1,'Admin/User/changeStatus?method=deleteUser','删除会员',1,''),(26,'admin',1,'Admin/User/index','用户信息',1,''),(27,'admin',1,'Admin/User/action','用户行为',1,''),(28,'admin',1,'Admin/AuthManager/changeStatus?method=deleteGroup','删除',1,''),(29,'admin',1,'Admin/AuthManager/changeStatus?method=forbidGroup','禁用',1,''),(30,'admin',1,'Admin/AuthManager/changeStatus?method=resumeGroup','恢复',1,''),(31,'admin',1,'Admin/AuthManager/createGroup','新增',1,''),(32,'admin',1,'Admin/AuthManager/editGroup','编辑',1,''),(33,'admin',1,'Admin/AuthManager/writeGroup','保存用户组',1,''),(34,'admin',1,'Admin/AuthManager/group','授权',1,''),(35,'admin',1,'Admin/AuthManager/access','访问授权',1,''),(36,'admin',1,'Admin/AuthManager/user','成员授权',1,''),(37,'admin',1,'Admin/AuthManager/removeFromGroup','解除授权',1,''),(38,'admin',1,'Admin/AuthManager/addToGroup','保存成员授权',1,''),(39,'admin',1,'Admin/AuthManager/category','分类授权',1,''),(40,'admin',1,'Admin/AuthManager/addToCategory','保存分类授权',1,''),(41,'admin',1,'Admin/AuthManager/index','权限管理',1,''),(42,'admin',1,'Admin/Addons/create','创建',1,''),(43,'admin',1,'Admin/Addons/checkForm','检测创建',1,''),(44,'admin',1,'Admin/Addons/preview','预览',1,''),(45,'admin',1,'Admin/Addons/build','快速生成插件',1,''),(46,'admin',1,'Admin/Addons/config','设置',1,''),(47,'admin',1,'Admin/Addons/disable','禁用',1,''),(48,'admin',1,'Admin/Addons/enable','启用',1,''),(49,'admin',1,'Admin/Addons/install','安装',1,''),(50,'admin',1,'Admin/Addons/uninstall','卸载',1,''),(51,'admin',1,'Admin/Addons/saveconfig','更新配置',1,''),(52,'admin',1,'Admin/Addons/adminList','插件后台列表',1,''),(53,'admin',1,'Admin/Addons/execute','URL方式访问插件',1,''),(54,'admin',1,'Admin/Addons/index','插件管理',1,''),(55,'admin',1,'Admin/Addons/hooks','钩子管理',1,''),(56,'admin',1,'Admin/model/add','新增',1,''),(57,'admin',1,'Admin/model/edit','编辑',1,''),(58,'admin',1,'Admin/model/setStatus','改变状态',1,''),(59,'admin',1,'Admin/model/update','保存数据',1,''),(60,'admin',1,'Admin/Model/index','模型管理',1,''),(61,'admin',1,'Admin/Config/edit','编辑',1,''),(62,'admin',1,'Admin/Config/del','删除',1,''),(63,'admin',1,'Admin/Config/add','新增',1,''),(64,'admin',1,'Admin/Config/save','保存',1,''),(65,'admin',1,'Admin/Config/group','网站设置',1,''),(66,'admin',1,'Admin/Config/index','配置管理',1,''),(67,'admin',1,'Admin/Channel/add','新增',1,''),(68,'admin',1,'Admin/Channel/edit','编辑',1,''),(69,'admin',1,'Admin/Channel/del','删除',1,''),(70,'admin',1,'Admin/Channel/index','导航管理',1,''),(71,'admin',1,'Admin/Category/edit','编辑',1,''),(72,'admin',1,'Admin/Category/add','新增',1,''),(73,'admin',1,'Admin/Category/remove','删除',1,''),(74,'admin',1,'Admin/Category/index','分类管理',1,''),(75,'admin',1,'Admin/file/upload','上传控件',-1,''),(76,'admin',1,'Admin/file/uploadPicture','上传图片',-1,''),(77,'admin',1,'Admin/file/download','下载',-1,''),(94,'admin',1,'Admin/AuthManager/modelauth','模型授权',1,''),(79,'admin',1,'Admin/article/batchOperate','导入',1,''),(80,'admin',1,'Admin/Database/index?type=export','备份数据库',1,''),(81,'admin',1,'Admin/Database/index?type=import','还原数据库',1,''),(82,'admin',1,'Admin/Database/export','备份',1,''),(83,'admin',1,'Admin/Database/optimize','优化表',1,''),(84,'admin',1,'Admin/Database/repair','修复表',1,''),(86,'admin',1,'Admin/Database/import','恢复',1,''),(87,'admin',1,'Admin/Database/del','删除',1,''),(88,'admin',1,'Admin/User/add','新增用户',1,''),(89,'admin',1,'Admin/Attribute/index','属性管理',1,''),(90,'admin',1,'Admin/Attribute/add','新增',1,''),(91,'admin',1,'Admin/Attribute/edit','编辑',1,''),(92,'admin',1,'Admin/Attribute/setStatus','改变状态',1,''),(93,'admin',1,'Admin/Attribute/update','保存数据',1,''),(95,'admin',1,'Admin/AuthManager/addToModel','保存模型授权',1,''),(96,'admin',1,'Admin/Category/move','移动',-1,''),(97,'admin',1,'Admin/Category/merge','合并',-1,''),(98,'admin',1,'Admin/Config/menu','后台菜单管理',-1,''),(99,'admin',1,'Admin/Article/mydocument','内容',-1,''),(100,'admin',1,'Admin/Menu/index','菜单管理',1,''),(101,'admin',1,'Admin/other','其他',-1,''),(102,'admin',1,'Admin/Menu/add','新增',1,''),(103,'admin',1,'Admin/Menu/edit','编辑',1,''),(104,'admin',1,'Admin/Think/lists?model=article','文章管理',-1,''),(105,'admin',1,'Admin/Think/lists?model=download','下载管理',1,''),(106,'admin',1,'Admin/Think/lists?model=config','配置管理',1,''),(107,'admin',1,'Admin/Action/actionlog','行为日志',1,''),(108,'admin',1,'Admin/User/updatePassword','修改密码',1,''),(109,'admin',1,'Admin/User/updateNickname','修改昵称',1,''),(110,'admin',1,'Admin/action/edit','查看行为日志',1,''),(205,'admin',1,'Admin/think/add','新增数据',1,''),(111,'admin',2,'Admin/article/index','文档列表',-1,''),(112,'admin',2,'Admin/article/add','新增',-1,''),(113,'admin',2,'Admin/article/edit','编辑',-1,''),(114,'admin',2,'Admin/article/setStatus','改变状态',-1,''),(115,'admin',2,'Admin/article/update','保存',-1,''),(116,'admin',2,'Admin/article/autoSave','保存草稿',-1,''),(117,'admin',2,'Admin/article/move','移动',-1,''),(118,'admin',2,'Admin/article/copy','复制',-1,''),(119,'admin',2,'Admin/article/paste','粘贴',-1,''),(120,'admin',2,'Admin/article/batchOperate','导入',-1,''),(121,'admin',2,'Admin/article/recycle','回收站',-1,''),(122,'admin',2,'Admin/article/permit','还原',-1,''),(123,'admin',2,'Admin/article/clear','清空',-1,''),(124,'admin',2,'Admin/User/add','新增用户',-1,''),(125,'admin',2,'Admin/User/action','用户行为',-1,''),(126,'admin',2,'Admin/User/addAction','新增用户行为',-1,''),(127,'admin',2,'Admin/User/editAction','编辑用户行为',-1,''),(128,'admin',2,'Admin/User/saveAction','保存用户行为',-1,''),(129,'admin',2,'Admin/User/setStatus','变更行为状态',-1,''),(130,'admin',2,'Admin/User/changeStatus?method=forbidUser','禁用会员',-1,''),(131,'admin',2,'Admin/User/changeStatus?method=resumeUser','启用会员',-1,''),(132,'admin',2,'Admin/User/changeStatus?method=deleteUser','删除会员',-1,''),(133,'admin',2,'Admin/AuthManager/index','权限管理',-1,''),(134,'admin',2,'Admin/AuthManager/changeStatus?method=deleteGroup','删除',-1,''),(135,'admin',2,'Admin/AuthManager/changeStatus?method=forbidGroup','禁用',-1,''),(136,'admin',2,'Admin/AuthManager/changeStatus?method=resumeGroup','恢复',-1,''),(137,'admin',2,'Admin/AuthManager/createGroup','新增',-1,''),(138,'admin',2,'Admin/AuthManager/editGroup','编辑',-1,''),(139,'admin',2,'Admin/AuthManager/writeGroup','保存用户组',-1,''),(140,'admin',2,'Admin/AuthManager/group','授权',-1,''),(141,'admin',2,'Admin/AuthManager/access','访问授权',-1,''),(142,'admin',2,'Admin/AuthManager/user','成员授权',-1,''),(143,'admin',2,'Admin/AuthManager/removeFromGroup','解除授权',-1,''),(144,'admin',2,'Admin/AuthManager/addToGroup','保存成员授权',-1,''),(145,'admin',2,'Admin/AuthManager/category','分类授权',-1,''),(146,'admin',2,'Admin/AuthManager/addToCategory','保存分类授权',-1,''),(147,'admin',2,'Admin/AuthManager/modelauth','模型授权',-1,''),(148,'admin',2,'Admin/AuthManager/addToModel','保存模型授权',-1,''),(149,'admin',2,'Admin/Addons/create','创建',-1,''),(150,'admin',2,'Admin/Addons/checkForm','检测创建',-1,''),(151,'admin',2,'Admin/Addons/preview','预览',-1,''),(152,'admin',2,'Admin/Addons/build','快速生成插件',-1,''),(153,'admin',2,'Admin/Addons/config','设置',-1,''),(154,'admin',2,'Admin/Addons/disable','禁用',-1,''),(155,'admin',2,'Admin/Addons/enable','启用',-1,''),(156,'admin',2,'Admin/Addons/install','安装',-1,''),(157,'admin',2,'Admin/Addons/uninstall','卸载',-1,''),(158,'admin',2,'Admin/Addons/saveconfig','更新配置',-1,''),(159,'admin',2,'Admin/Addons/adminList','插件后台列表',-1,''),(160,'admin',2,'Admin/Addons/execute','URL方式访问插件',-1,''),(161,'admin',2,'Admin/Addons/hooks','钩子管理',-1,''),(162,'admin',2,'Admin/Model/index','模型管理',-1,''),(163,'admin',2,'Admin/model/add','新增',-1,''),(164,'admin',2,'Admin/model/edit','编辑',-1,''),(165,'admin',2,'Admin/model/setStatus','改变状态',-1,''),(166,'admin',2,'Admin/model/update','保存数据',-1,''),(167,'admin',2,'Admin/Attribute/index','属性管理',-1,''),(168,'admin',2,'Admin/Attribute/add','新增',-1,''),(169,'admin',2,'Admin/Attribute/edit','编辑',-1,''),(170,'admin',2,'Admin/Attribute/setStatus','改变状态',-1,''),(171,'admin',2,'Admin/Attribute/update','保存数据',-1,''),(172,'admin',2,'Admin/Config/index','配置管理',-1,''),(173,'admin',2,'Admin/Config/edit','编辑',-1,''),(174,'admin',2,'Admin/Config/del','删除',-1,''),(175,'admin',2,'Admin/Config/add','新增',-1,''),(176,'admin',2,'Admin/Config/save','保存',-1,''),(177,'admin',2,'Admin/Menu/index','菜单管理',-1,''),(178,'admin',2,'Admin/Channel/index','导航管理',-1,''),(179,'admin',2,'Admin/Channel/add','新增',-1,''),(180,'admin',2,'Admin/Channel/edit','编辑',-1,''),(181,'admin',2,'Admin/Channel/del','删除',-1,''),(182,'admin',2,'Admin/Category/index','分类管理',-1,''),(183,'admin',2,'Admin/Category/edit','编辑',-1,''),(184,'admin',2,'Admin/Category/add','新增',-1,''),(185,'admin',2,'Admin/Category/remove','删除',-1,''),(186,'admin',2,'Admin/Category/move','移动',-1,''),(187,'admin',2,'Admin/Category/merge','合并',-1,''),(188,'admin',2,'Admin/Database/index?type=export','备份数据库',-1,''),(189,'admin',2,'Admin/Database/export','备份',-1,''),(190,'admin',2,'Admin/Database/optimize','优化表',-1,''),(191,'admin',2,'Admin/Database/repair','修复表',-1,''),(192,'admin',2,'Admin/Database/index?type=import','还原数据库',-1,''),(193,'admin',2,'Admin/Database/import','恢复',-1,''),(194,'admin',2,'Admin/Database/del','删除',-1,''),(195,'admin',2,'Admin/other','其他',1,''),(196,'admin',2,'Admin/Menu/add','新增',-1,''),(197,'admin',2,'Admin/Menu/edit','编辑',-1,''),(198,'admin',2,'Admin/Think/lists?model=article','应用',-1,''),(199,'admin',2,'Admin/Think/lists?model=download','下载管理',-1,''),(200,'admin',2,'Admin/Think/lists?model=config','应用',-1,''),(201,'admin',2,'Admin/Action/actionlog','行为日志',-1,''),(202,'admin',2,'Admin/User/updatePassword','修改密码',-1,''),(203,'admin',2,'Admin/User/updateNickname','修改昵称',-1,''),(204,'admin',2,'Admin/action/edit','查看行为日志',-1,''),(206,'admin',1,'Admin/think/edit','编辑数据',1,''),(207,'admin',1,'Admin/Menu/import','导入',1,''),(208,'admin',1,'Admin/Model/generate','生成',1,''),(209,'admin',1,'Admin/Addons/addHook','新增钩子',1,''),(210,'admin',1,'Admin/Addons/edithook','编辑钩子',1,''),(211,'admin',1,'Admin/Article/sort','文档排序',1,''),(212,'admin',1,'Admin/Config/sort','排序',1,''),(213,'admin',1,'Admin/Menu/sort','排序',1,''),(214,'admin',1,'Admin/Channel/sort','排序',1,''),(215,'admin',1,'Admin/Category/operate/type/move','移动',1,''),(216,'admin',1,'Admin/Category/operate/type/merge','合并',1,'');
/*!40000 ALTER TABLE `ot_auth_rule` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_category`
--

DROP TABLE IF EXISTS `ot_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_category` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '分类ID',
  `name` varchar(30) NOT NULL COMMENT '标志',
  `title` varchar(50) NOT NULL COMMENT '标题',
  `pid` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '上级分类ID',
  `sort` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '排序（同级有效）',
  `list_row` tinyint(3) unsigned NOT NULL DEFAULT '10' COMMENT '列表每页行数',
  `meta_title` varchar(50) NOT NULL DEFAULT '' COMMENT 'SEO的网页标题',
  `keywords` varchar(255) NOT NULL DEFAULT '' COMMENT '关键字',
  `description` varchar(255) NOT NULL DEFAULT '' COMMENT '描述',
  `template_index` varchar(100) NOT NULL COMMENT '频道页模板',
  `template_lists` varchar(100) NOT NULL COMMENT '列表页模板',
  `template_detail` varchar(100) NOT NULL COMMENT '详情页模板',
  `template_edit` varchar(100) NOT NULL COMMENT '编辑页模板',
  `model` varchar(100) NOT NULL DEFAULT '' COMMENT '关联模型',
  `type` varchar(100) NOT NULL DEFAULT '' COMMENT '允许发布的内容类型',
  `link_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '外链',
  `allow_publish` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT '是否允许发布内容',
  `display` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT '可见性',
  `reply` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT '是否允许回复',
  `check` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT '发布的文章是否需要审核',
  `reply_model` varchar(100) NOT NULL DEFAULT '',
  `extend` text NOT NULL COMMENT '扩展设置',
  `create_time` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '创建时间',
  `update_time` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '更新时间',
  `status` tinyint(4) NOT NULL DEFAULT '0' COMMENT '数据状态',
  `icon` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '分类图标',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_name` (`name`),
  KEY `pid` (`pid`)
) ENGINE=MyISAM AUTO_INCREMENT=78 DEFAULT CHARSET=utf8 COMMENT='分类表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_category`
--

LOCK TABLES `ot_category` WRITE;
/*!40000 ALTER TABLE `ot_category` DISABLE KEYS */;
INSERT INTO `ot_category` VALUES (1,'blog','博客',0,0,10,'','','','','','','','2','2,1',0,1,1,0,0,'1','',1379474947,1461511382,1,0),(2,'default_blog','默认分类',1,1,10,'','','','','','','','2','2,1,3',0,1,1,0,1,'1','',1379475028,1386839751,1,31),(55,'cmu','CMU课程',0,3,10,'','','','','','','','2,3','2,1,3',0,1,1,1,0,'','',1461466398,1461466538,1,0),(56,'hadoop','Hadoop',46,0,10,'','','','','','','','2,3','2,1,3',0,1,1,1,0,'','',1461480834,1461480834,1,0),(54,'java','Java',53,0,10,'','','','','','','','2,3','2,1,3',0,1,1,1,0,'','',1461422022,1461422022,1,0),(44,'afterClass','休闲',0,5,10,'','','','','','','','2,3','2,1,3',0,1,1,1,0,'','',1460881487,1461563782,1,0),(45,'poem','唐诗宋词元曲',44,0,10,'','','','','','','','2,3','2,1,3',0,2,1,1,0,'','',1460881600,1461564079,1,0),(46,'algorithmBigData','算法大数据',0,2,10,'','','','','','','','','',0,1,1,1,0,'','',1460883234,1461466530,1,0),(50,'RL','RL Learning',46,0,10,'','','','','','','','2','2,1,3',0,1,1,1,0,'','',1460903092,1460903092,1,0),(48,'system','系统',0,1,10,'','','','','','','','2,3','2,1,3',0,1,1,1,0,'','',1460892674,1461467726,1,0),(49,'mysql','Mysql',48,0,10,'','','','','','','','2','2,1,3',0,1,1,1,0,'','',1460892717,1460892717,1,0),(51,'linux','Linux',48,0,10,'','','','','','','','2,3','2,1,3',0,1,1,1,0,'','',1460961086,1460961086,1,0),(52,'ML','Machine Learning',46,0,10,'','','','','','','','2','2,1,3',0,1,1,1,0,'','',1461141356,1461141410,1,0),(53,'program','读书笔记',0,4,10,'','','','','','','','2,3','2,1,3',0,1,1,1,0,'','',1461421953,1466780757,1,0),(57,'git','Git',53,0,10,'','','','','','','','2,3','2,1,3',0,1,1,1,0,'','',1461567945,1461567945,1,0),(58,'thinkphp','ThinkPHP',48,0,10,'','','','','','','','2,3','2,1,3',0,1,1,1,0,'','',1461585130,1461585229,1,0),(59,'weeklyJournal','周记',44,0,10,'','','','','','','','2,3','2,1,3',0,1,1,1,0,'','',1466777827,1466777827,1,0),(60,'ICC','Introduction to Computer System',55,0,10,'','','','','','','','2,3','2,1,3',0,2,1,1,0,'','',1466779712,1467189650,1,0),(61,'leetCode','leetCode',53,0,10,'','','','','','','','2,3','2,1,3',0,1,1,1,0,'','',1466780786,1466780786,1,0),(62,'ChineseMedicine','中医',44,0,10,'','','','','','','','2,3','2,1,3',0,2,1,1,0,'','',1467249257,1467249257,1,0),(63,'SystemDesigninterview','SystemDesigninterview',48,0,10,'','','','','','','','2,3','2,1,3',0,1,1,1,0,'','',1499755960,1499755960,1,0),(64,'CorCPlusPlus','C/C++',53,0,10,'','','','','','','','2,3','2,1,3',0,1,1,1,0,'','',1499825871,1499829501,1,0),(65,'Hive','Hive',46,0,10,'','','','','','','','2,3','2,1,3',0,1,1,1,1,'','',1500442624,1500442624,1,0),(66,'python','Python',53,0,10,'','','','','','','','2,3','2,1,3',0,1,1,1,0,'','',1500565127,1500565127,1,0),(67,'LiveInUSA','美国生活',44,0,10,'','','','','','','','2','',0,1,1,1,0,'','',1500657882,1500657882,1,0),(68,'Web','Web',48,0,10,'','','','','','','','2','2',0,1,1,1,0,'','',1500658653,1500658667,1,0),(69,'Thrift','Thrift',46,0,10,'','','','','','','','2','',0,1,1,1,0,'','',1501464303,1501464303,1,0),(72,'leetCode_Questions','LC_Question',53,0,10,'','','','','','','','2','2',0,1,1,1,0,'','',1501617499,1502408399,1,0),(71,'Big_Data_Algorithm','BigDataAlgorithm',46,0,10,'','','','','','','','2','2',0,1,1,1,0,'','',1501537123,1501537178,1,0),(73,'Cascading','Cascading',46,0,10,'','','','','','','','2','2,1,3',0,1,1,1,0,'','',1501735927,1501735927,1,0),(74,'BeijingOpera','京剧',44,0,10,'','','','','','','','2,3','2,1,3',0,1,1,1,0,'','',1501915167,1501915167,1,0),(75,'cmu15440','15440 Distributed System',55,0,10,'','','','','','','','2','',0,1,1,1,0,'','',1501918276,1501918276,1,0),(76,'15214CMU','15214 Principles of Software Construction',55,0,10,'','','','','','','','2','',0,1,1,1,0,'','',1501918402,1501918402,1,0),(77,'Diary','日记',44,0,10,'','','','','','','','2','',0,1,1,1,0,'','',1502864155,1502864155,1,0);
/*!40000 ALTER TABLE `ot_category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_channel`
--

DROP TABLE IF EXISTS `ot_channel`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_channel` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '频道ID',
  `pid` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '上级频道ID',
  `title` char(30) NOT NULL COMMENT '频道标题',
  `url` char(100) NOT NULL COMMENT '频道连接',
  `sort` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '导航排序',
  `create_time` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '创建时间',
  `update_time` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '更新时间',
  `status` tinyint(4) NOT NULL DEFAULT '0' COMMENT '状态',
  `target` tinyint(2) unsigned NOT NULL DEFAULT '0' COMMENT '新窗口打开',
  PRIMARY KEY (`id`),
  KEY `pid` (`pid`)
) ENGINE=MyISAM AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_channel`
--

LOCK TABLES `ot_channel` WRITE;
/*!40000 ALTER TABLE `ot_channel` DISABLE KEYS */;
INSERT INTO `ot_channel` VALUES (1,0,'首页','Index/index',1,1379475111,1379923177,1,0),(2,0,'博客','Article/index?category=blog',2,1379475131,1379483713,1,0),(3,0,'官网','http://www.onethink.cn',4,1379475154,1451108734,1,0),(4,0,'前端','Article/index?category=front',3,1450608559,1450608559,1,0),(5,0,'php','Article/index?category=php',5,1451108911,1451108917,1,0);
/*!40000 ALTER TABLE `ot_channel` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_config`
--

DROP TABLE IF EXISTS `ot_config`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_config` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '配置ID',
  `name` varchar(30) NOT NULL DEFAULT '' COMMENT '配置名称',
  `type` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT '配置类型',
  `title` varchar(50) NOT NULL DEFAULT '' COMMENT '配置说明',
  `group` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT '配置分组',
  `extra` varchar(255) NOT NULL DEFAULT '' COMMENT '配置值',
  `remark` varchar(100) NOT NULL COMMENT '配置说明',
  `create_time` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '创建时间',
  `update_time` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '更新时间',
  `status` tinyint(4) NOT NULL DEFAULT '0' COMMENT '状态',
  `value` text NOT NULL COMMENT '配置值',
  `sort` smallint(3) unsigned NOT NULL DEFAULT '0' COMMENT '排序',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_name` (`name`),
  KEY `type` (`type`),
  KEY `group` (`group`)
) ENGINE=MyISAM AUTO_INCREMENT=38 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_config`
--

LOCK TABLES `ot_config` WRITE;
/*!40000 ALTER TABLE `ot_config` DISABLE KEYS */;
INSERT INTO `ot_config` VALUES (1,'WEB_SITE_TITLE',1,'网站标题',1,'','网站标题前台显示标题',1378898976,1379235274,1,'My heart is on work',0),(2,'WEB_SITE_DESCRIPTION',2,'网站描述',1,'','网站搜索引擎描述',1378898976,1379235841,1,'积跬步，至千里',1),(3,'WEB_SITE_KEYWORD',2,'网站关键字',1,'','网站搜索引擎关键字',1378898976,1381390100,1,'ThinkPHP,OneThink，CMU , Hadoop',8),(4,'WEB_SITE_CLOSE',4,'关闭站点',1,'0:关闭,1:开启','站点关闭后其他用户不能访问，管理员可以正常访问',1378898976,1379235296,1,'1',1),(9,'CONFIG_TYPE_LIST',3,'配置类型列表',4,'','主要用于数据解析和页面表单的生成',1378898976,1379235348,1,'0:数字\r\n1:字符\r\n2:文本\r\n3:数组\r\n4:枚举',2),(10,'WEB_SITE_ICP',1,'网站备案号',1,'','设置在网站底部显示的备案号，如“沪ICP备12007941号-2',1378900335,1379235859,1,'暂时没有备案号',9),(11,'DOCUMENT_POSITION',3,'文档推荐位',2,'','文档推荐位，推荐到多个位置KEY值相加即可',1379053380,1379235329,1,'1:列表页推荐\r\n2:频道页推荐\r\n4:网站首页推荐',3),(12,'DOCUMENT_DISPLAY',3,'文档可见性',2,'','文章可见性仅影响前台显示，后台不收影响',1379056370,1379235322,1,'0:所有人可见\r\n1:仅注册会员可见\r\n2:仅管理员可见',4),(13,'COLOR_STYLE',4,'后台色系',1,'default_color:默认\r\nblue_color:紫罗兰','后台颜色风格',1379122533,1379235904,1,'blue_color',10),(20,'CONFIG_GROUP_LIST',3,'配置分组',4,'','配置分组',1379228036,1384418383,1,'1:基本\r\n2:内容\r\n3:用户\r\n4:系统',4),(21,'HOOKS_TYPE',3,'钩子的类型',4,'','类型 1-用于扩展显示内容，2-用于扩展业务处理',1379313397,1379313407,1,'1:视图\r\n2:控制器',6),(22,'AUTH_CONFIG',3,'Auth配置',4,'','自定义Auth.class.php类配置',1379409310,1379409564,1,'AUTH_ON:1\r\nAUTH_TYPE:2',8),(23,'OPEN_DRAFTBOX',4,'是否开启草稿功能',2,'0:关闭草稿功能\r\n1:开启草稿功能\r\n','新增文章时的草稿功能配置',1379484332,1379484591,1,'1',1),(24,'DRAFT_AOTOSAVE_INTERVAL',0,'自动保存草稿时间',2,'','自动保存草稿的时间间隔，单位：秒',1379484574,1386143323,1,'60',2),(25,'LIST_ROWS',0,'后台每页记录数',2,'','后台数据每页显示记录数',1379503896,1380427745,1,'50',10),(26,'USER_ALLOW_REGISTER',4,'是否允许用户注册',3,'0:关闭注册\r\n1:允许注册','是否开放用户注册',1379504487,1379504580,1,'1',3),(27,'CODEMIRROR_THEME',4,'预览插件的CodeMirror主题',4,'3024-day:3024 day\r\n3024-night:3024 night\r\nambiance:ambiance\r\nbase16-dark:base16 dark\r\nbase16-light:base16 light\r\nblackboard:blackboard\r\ncobalt:cobalt\r\neclipse:eclipse\r\nelegant:elegant\r\nerlang-dark:erlang-dark\r\nlesser-dark:lesser-dark\r\nmidnight:midnight','详情见CodeMirror官网',1379814385,1384740813,1,'ambiance',3),(28,'DATA_BACKUP_PATH',1,'数据库备份根路径',4,'','路径必须以 / 结尾',1381482411,1381482411,1,'./Data/',5),(29,'DATA_BACKUP_PART_SIZE',0,'数据库备份卷大小',4,'','该值用于限制压缩后的分卷最大长度。单位：B；建议设置20M',1381482488,1381729564,1,'20971520',7),(30,'DATA_BACKUP_COMPRESS',4,'数据库备份文件是否启用压缩',4,'0:不压缩\r\n1:启用压缩','压缩备份文件需要PHP环境支持gzopen,gzwrite函数',1381713345,1381729544,1,'1',9),(31,'DATA_BACKUP_COMPRESS_LEVEL',4,'数据库备份文件压缩级别',4,'1:普通\r\n4:一般\r\n9:最高','数据库备份文件的压缩级别，该配置在开启压缩时生效',1381713408,1381713408,1,'9',10),(32,'DEVELOP_MODE',4,'开启开发者模式',4,'0:关闭\r\n1:开启','是否开启开发者模式',1383105995,1383291877,1,'1',11),(33,'ALLOW_VISIT',3,'不受限控制器方法',0,'','',1386644047,1386644741,1,'0:article/draftbox\r\n1:article/mydocument\r\n2:Category/tree\r\n3:Index/verify\r\n4:file/upload\r\n5:file/download\r\n6:user/updatePassword\r\n7:user/updateNickname\r\n8:user/submitPassword\r\n9:user/submitNickname\r\n10:file/uploadpicture',0),(34,'DENY_VISIT',3,'超管专限控制器方法',0,'','仅超级管理员可访问的控制器方法',1386644141,1386644659,1,'0:Addons/addhook\r\n1:Addons/edithook\r\n2:Addons/delhook\r\n3:Addons/updateHook\r\n4:Admin/getMenus\r\n5:Admin/recordList\r\n6:AuthManager/updateRules\r\n7:AuthManager/tree',0),(35,'REPLY_LIST_ROWS',0,'回复列表每页条数',2,'','',1386645376,1387178083,1,'10',0),(36,'ADMIN_ALLOW_IP',2,'后台允许访问IP',4,'','多个用逗号分隔，如果不配置表示不限制IP访问',1387165454,1387165553,1,'',12),(37,'SHOW_PAGE_TRACE',4,'是否显示页面Trace',4,'0:关闭\r\n1:开启','是否显示页面Trace信息',1387165685,1387165685,1,'0',1);
/*!40000 ALTER TABLE `ot_config` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_document`
--

DROP TABLE IF EXISTS `ot_document`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_document` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '文档ID',
  `uid` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '用户ID',
  `name` char(40) NOT NULL DEFAULT '' COMMENT '标识',
  `title` char(80) NOT NULL DEFAULT '' COMMENT '标题',
  `category_id` int(10) unsigned NOT NULL COMMENT '所属分类',
  `description` char(140) NOT NULL DEFAULT '' COMMENT '描述',
  `root` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '根节点',
  `pid` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '所属ID',
  `model_id` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT '内容模型ID',
  `type` tinyint(3) unsigned NOT NULL DEFAULT '2' COMMENT '内容类型',
  `position` smallint(5) unsigned NOT NULL DEFAULT '0' COMMENT '推荐位',
  `link_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '外链',
  `cover_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '封面',
  `display` tinyint(3) unsigned NOT NULL DEFAULT '1' COMMENT '可见性',
  `deadline` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '截至时间',
  `attach` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT '附件数量',
  `view` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '浏览量',
  `comment` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '评论数',
  `extend` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '扩展统计字段',
  `level` int(10) NOT NULL DEFAULT '0' COMMENT '优先级',
  `create_time` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '创建时间',
  `update_time` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '更新时间',
  `status` tinyint(4) NOT NULL DEFAULT '0' COMMENT '数据状态',
  PRIMARY KEY (`id`),
  KEY `idx_category_status` (`category_id`,`status`),
  KEY `idx_status_type_pid` (`status`,`uid`,`pid`)
) ENGINE=MyISAM AUTO_INCREMENT=163 DEFAULT CHARSET=utf8 COMMENT='文档模型基础表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_document`
--

LOCK TABLES `ot_document` WRITE;
/*!40000 ALTER TABLE `ot_document` DISABLE KEYS */;
INSERT INTO `ot_document` VALUES (59,1,'graph','图论',61,'图论概述',0,0,2,2,0,0,0,1,0,0,5,0,0,15,1499639460,1502863886,1),(32,1,'','Hdaoop 运行时，找不到类',56,'',0,0,2,2,0,0,0,1,0,0,11,0,0,0,1461662160,1461662480,1),(31,1,'hadoop_PCA','hadoop PCA',56,'hadoopPCA',0,0,2,2,0,0,0,1,0,0,43,0,0,0,1461586800,1461636875,1),(30,1,'oneThink','oneThink 使用的各种问题',58,'oneThink 使用问题',0,0,2,2,0,0,0,1,0,0,7,0,0,0,1461585300,1461952860,1),(29,1,'gitBasic','Git 将本地代码push到 github',57,'Git 的基本操作',0,0,2,2,0,0,0,1,0,0,42,0,0,0,1461568620,1503089515,1),(28,1,'','x',45,'',0,0,3,2,0,0,0,1,0,0,0,0,0,0,1461567828,1461567828,3),(27,1,'','xiaoyan',45,'',0,0,3,2,0,0,0,1,0,0,0,0,0,0,1461564752,1461564752,3),(26,1,'autoremove','危险的 autoremove',51,'autoremove',0,0,2,2,0,0,0,1,0,0,12,0,0,0,1461486720,1501611759,1),(25,1,'hadoopWeiFenbushi','Hadoop 伪分布模式',56,'hadoop 伪分布模式',0,0,2,2,0,0,0,1,0,0,41,0,0,0,1461482340,1501733669,1),(24,1,'javaIO','Java IO流',54,'Java IO流',0,0,2,2,0,0,0,1,0,0,56,0,0,0,1461468300,1461672820,1),(23,1,'vimAdvance','vim 进阶篇',51,'vim 高级用法',0,0,2,2,0,0,0,1,0,0,18,0,0,0,1461468060,1502086144,1),(57,1,'dp','动态规划',61,'动态规划',0,0,2,2,0,0,0,1,0,0,8,0,0,13,1499195040,1499625252,1),(21,1,'PythonML','Linux Python 机器学习环境',52,'linux python machine learning',0,0,2,2,0,0,0,1,0,0,11,0,0,0,1461141935,1461141935,1),(14,1,'firstDay','第一篇博客',2,'第一篇博客',0,0,2,2,0,0,0,1,0,0,6,0,0,0,1460878320,1460897749,1),(15,1,'yueye','月夜',45,'月夜 赏析 杜甫',0,0,2,2,0,0,0,1,0,0,42,0,0,0,1460881620,1499829725,1),(20,1,'sublime2License','sublime2 激活码',51,'sublime2激活码',0,0,2,2,0,0,0,1,0,0,15,0,0,0,1460961166,1460961166,1),(17,1,'mysqlBackup','Mysql 备份数据',49,'mysql简单备份',0,0,2,2,0,0,0,1,0,0,48,0,0,0,1460893534,1460893534,1),(58,1,'leetCode416','LeetCode 416 partition equal subset sum',61,'等分问题',0,0,2,2,0,0,0,1,0,0,7,0,0,14,1499625900,1501617725,-1),(33,1,'loadClass','Java  类加载',54,'各种加载类',0,0,2,2,0,0,0,1,0,0,15,0,0,0,1461662880,1461663237,1),(34,1,'aws','AWS 初步',56,'Aws 使用记录',0,0,2,2,0,0,0,1,0,0,9,0,0,0,1461671325,1461671325,1),(35,1,'maven','Maven 工程实战',54,'maven hadoop mahout',0,0,2,2,0,0,0,1,0,0,43,0,0,0,1461679920,1503097602,1),(36,1,'command','linux 常用命令',51,'linux  常用命令',0,0,2,2,0,0,0,1,0,0,11,0,0,0,1461723709,1461723709,1),(37,1,'gradle','Gradle 入门',54,'gradle java',0,0,2,2,0,0,0,1,0,0,17,0,0,0,1461976020,1461998233,1),(38,1,'begin','开始',59,'',0,0,2,2,0,0,0,1,0,0,13,0,0,0,1466777940,1467039334,1),(39,1,'chapter2','第二章 信息的表示和处理',60,'第二章笔记',0,0,2,2,0,0,0,1,0,0,54,0,0,0,1466779800,1467297514,1),(40,1,'preface','leetCode 刷题总结 前言',61,'',0,0,2,2,0,0,0,1,0,0,13,0,0,7,1466781240,1466782964,1),(41,1,'backtracking','leetCode 前50题 回溯',61,'',0,0,2,2,0,0,0,1,0,0,37,0,0,8,1466783020,1466783020,1),(56,1,'leetcode','一句话总结 leetcode',61,'leetcode one line',0,0,2,2,0,0,0,1,0,0,7,0,0,12,1497985860,1499730351,1),(55,1,'leecode100','leetcode 100',61,'leetcode 100',0,0,2,2,0,0,0,1,0,0,11,0,0,11,1497924301,1497924301,1),(44,1,'abstract','thesis abstract',50,'论文摘要',0,0,2,2,0,0,0,1,0,0,49,0,0,0,1467211860,1468632315,1),(45,1,'introduction','thesis introduction',50,'论文简介',0,0,2,2,0,0,0,1,0,0,47,0,0,0,1467211920,1468632264,1),(46,1,'RLalgorithm','thesis RL algorithm',50,'论文强化学习算法介绍',0,0,2,2,0,0,0,1,0,0,38,0,0,0,1467212092,1467212092,1),(47,1,'FQIgridworld','thesis FQI in grid world',50,'论文 FQI 应用在格子世界',0,0,2,2,0,0,0,1,0,0,42,0,0,0,1467212160,1468510345,1),(49,1,'ChineseLearning','thesis in Chinese learning',50,'论文，将算法应用到中文学习',0,0,2,2,0,0,0,1,0,0,48,0,0,0,1467212220,1468636986,1),(50,1,'resultAnalysis','thesis result analysis',50,'论文结果分析',0,0,2,2,0,0,0,1,0,0,37,0,0,0,1467212306,1467212306,1),(51,1,'list','链表',61,'leetCode 刷题链表总结',0,0,2,2,0,0,0,1,0,0,30,0,0,20,1467341640,1502693816,1),(52,1,'','leetCode 前50题 字符串',61,'',0,0,2,2,0,0,0,1,0,0,56,0,0,9,1467727320,1467728264,1),(54,1,'','华为答辩',61,'',0,0,2,2,0,0,0,1,0,0,46,0,0,10,1469455740,1469455996,1),(60,1,'bt','二叉树',61,'二叉树小结',0,0,2,2,0,0,0,1,0,0,10,0,0,16,1499749500,1500054706,1),(65,1,'distributedFileSystem','设计一个分布式文件系统',63,'分布式文件系统',0,0,2,2,0,0,0,1,0,0,5,0,0,0,1499796256,1499796256,1),(64,1,'FindMid','海量分布式数据查找中位数',63,'分布式大数据查找中位数',0,0,2,2,0,0,0,1,0,0,7,0,0,0,1499756100,1501534538,1),(63,1,'SystemDesign','系统设计面试',48,'系统设计面试',0,0,2,2,0,0,0,1,0,0,4,0,0,0,1499755667,1499755667,1),(66,1,'','DNS 的 Cache结构',63,'',0,0,2,2,0,0,0,1,0,0,4,0,0,0,1499819780,1499819780,1),(67,1,'','时间复杂度',61,'',0,0,2,2,0,0,0,1,0,0,7,0,0,17,1499825730,1499825730,1),(68,1,'','C++ 面试',64,'',0,0,2,2,0,0,0,1,0,0,6,0,0,0,1499827740,1499878435,1),(69,1,'','回溯法',61,'',0,0,2,2,0,0,0,1,0,0,7,0,0,18,1499830260,1500136403,1),(70,1,'','leetcode 24 Swap Node in Pairs',61,'',0,0,2,2,0,0,0,1,0,0,6,0,0,19,1499832060,1501617648,-1),(71,1,'','391. Perfect Rectangle',61,'',0,0,2,2,0,0,0,1,0,0,6,0,0,1,1499923200,1502729137,-1),(72,1,'',' 07/16/2017 开始记',59,'',0,0,2,2,0,0,0,1,0,0,4,0,0,0,1499966520,1500784123,1),(73,1,'','460. LFU Cache',61,'',0,0,2,2,0,0,0,1,0,0,5,0,0,2,1499968379,1502693368,-1),(74,1,'','map vs unsorted_map',64,'',0,0,2,2,0,0,0,1,0,0,5,0,0,0,1499968500,1499976794,1),(75,1,'','remove erase',64,'',0,0,2,2,0,0,0,1,0,0,5,0,0,0,1499977015,1499977015,1),(76,1,'','线段树　索引树',61,'',0,0,2,2,0,0,0,1,0,0,7,0,0,3,1500054720,1502693796,1),(77,1,'','索引树',61,'',0,0,2,2,0,0,0,1,0,0,3,0,0,4,1500054746,1502693761,-1),(79,1,'','poriority_queue',64,'',0,0,2,2,0,0,0,1,0,0,5,0,0,0,1500092274,1500092274,1),(80,1,'','第一天上班',59,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1500391919,1500391919,3),(81,1,'','07/18/2017 第一天上班．',59,'',0,0,2,2,0,0,0,1,0,0,6,0,0,0,1500391980,1500784095,1),(82,1,'','Hive Overview',65,'',0,0,2,2,0,0,0,1,0,0,4,0,0,0,1500443100,1500500063,1),(83,1,'','Hive',65,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1500491090,1500491090,3),(84,1,'','Hive DDL Operations',65,'',0,0,2,2,0,0,0,1,0,0,4,0,0,0,1500499440,1500500145,1),(85,1,'','Hive DML Operations',65,'',0,0,2,2,0,0,0,1,0,0,3,0,0,0,1500499745,1500499745,1),(86,1,'','Hive SQL Operations',65,'',0,0,2,2,0,0,0,1,0,0,3,0,0,0,1500499980,1501194082,1),(87,1,'','慕课网 Hive 进阶',65,'',0,0,2,2,0,0,0,1,0,0,5,0,0,0,1500501840,1500507233,1),(88,1,'','Python parse html from google for ads',66,'',0,0,2,2,0,0,0,1,0,0,2,0,0,0,1500565200,1500589803,1),(89,1,'','Find All in python',66,'',0,0,2,2,0,0,0,1,0,0,3,0,0,0,1500571621,1500571621,1),(90,1,'','Pandas',66,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1500587386,1500587386,3),(91,1,'','二分搜索',61,'',0,0,2,2,0,0,0,1,0,0,3,0,0,5,1500599640,1502924862,1),(93,1,'','Amish 阿米什人',67,'',0,0,2,2,0,0,0,1,0,0,2,0,0,0,1500657940,1500657940,1),(94,1,'','美国的茶',67,'',0,0,2,2,0,0,0,1,0,0,3,0,0,0,1500657960,1500840233,1),(95,1,'','Google API',68,'',0,0,2,2,0,0,0,1,0,0,2,0,0,0,1500658909,1500658909,1),(96,1,'','America: Our Story',67,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1500775072,1500775072,3),(97,1,'','America: Our Story',67,'',0,0,2,2,0,0,0,1,0,0,4,0,0,0,1500779940,1500785184,1),(98,1,'','07/22/2017 第一个周末',59,'',0,0,2,2,0,0,0,1,0,0,4,0,0,0,1500784320,1500784430,1),(99,1,'','United States Declaration of Independence',67,'',0,0,2,2,0,0,0,1,0,0,3,0,0,0,1500785700,1500786362,1),(100,1,'','Bing URL Parameters',68,'',0,0,2,2,0,0,0,1,0,0,2,0,0,0,1500840076,1500840076,1),(101,1,'','Python 技巧',66,'',0,0,2,2,0,0,0,1,0,0,2,0,0,0,1501000620,1501000673,1),(102,1,'','http in python',66,'',0,0,2,2,0,0,0,1,0,0,2,0,0,0,1501026972,1501026972,1),(103,1,'','HTMLParser',66,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1501043440,1501043440,3),(104,1,'','Python IOStream',66,'',0,0,2,2,0,0,0,1,0,0,3,0,0,0,1501086840,1501086873,1),(105,1,'','Python Selenium',66,'',0,0,2,2,0,0,0,1,0,0,4,0,0,0,1501111980,1501112062,1),(106,1,'','checked and unchecked Exception',54,'',0,0,2,2,0,0,0,1,0,0,4,0,0,0,1501177800,1501177979,1),(107,1,'','Mysql Test',65,'',0,0,2,2,0,0,0,1,0,0,3,0,0,0,1501198320,1501203353,1),(108,1,'','Join  Operation',65,'',0,0,2,2,0,0,0,1,0,0,7,0,0,0,1501279320,1501613426,1),(109,1,'','Hive 从s3 导入文件 到 表',65,'',0,0,2,2,0,0,0,1,0,0,3,0,0,0,1501280125,1501280125,1),(110,1,'','Thrift 跑起来',69,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1501464420,1501474327,1),(111,1,'','07/30/2017第二个周末',59,'',0,0,2,2,0,0,0,1,0,0,2,0,0,0,1501475460,1501824937,1),(112,1,'','leetcode 307',61,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1501480140,1502693802,-1),(113,1,'','Bit Manipulation',61,'',0,0,2,2,0,0,0,1,0,0,4,0,0,0,1501525620,1501653983,1),(114,1,'','Effective Python II Chapter 1 : Pythonic Thinking',66,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1501527120,1501629293,1),(115,1,'','Bit-map and Bloom Filter',71,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1501537455,1501537455,1),(116,1,'','Hive 性能优化',65,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1501613331,1501613331,1),(117,1,'','24 Swap Node in Pairs',72,'',0,0,2,2,0,0,0,1,0,0,0,0,0,12,1501617600,1502693471,1),(118,1,'','1 Two Sum',72,'',0,0,2,2,0,0,0,1,0,0,0,0,0,14,1501617660,1502693588,1),(119,1,'','416 partition equal subset sum',72,'',0,0,2,2,0,0,0,1,0,0,0,0,0,4,1501617660,1502693526,1),(120,1,'','Technology Stack',71,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1501624562,1501624562,1),(121,1,'','Effective Java Chapter 2 Creating and Destroying Objects',54,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1501625260,1501625260,1),(122,1,'','Effective Java Chapter 3',54,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1501625460,1501626391,1),(123,1,'','Effective Java Chapter 9 Exceptions',54,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1501627293,1501627293,1),(124,1,'','String',65,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1501707570,1501707570,1),(125,1,'','tmux 常用指令',51,'',0,0,2,2,0,0,0,1,0,0,1,0,0,0,1501708137,1501708137,1),(126,1,'','Start Cascading',73,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1501736100,1501889714,1),(127,1,'','Oral English',67,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1501825243,1501825243,1),(128,1,'','08/05/2017 第三个周末',59,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1501914852,1501914852,1),(129,1,'','老生',74,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1501915293,1501915293,1),(130,1,'','Project_1',75,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1501918324,1501918324,1),(131,1,'','Equals compare',54,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1501983386,1501983386,1),(132,1,'','Python Poriority Queue',66,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1502176555,1502176555,3),(133,1,'','bug 集锦',65,'',0,0,2,2,0,0,0,1,0,0,1,0,0,0,1502145600,1502913133,1),(134,1,'','Panda Data',66,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1502214075,1502214075,1),(135,1,'','399 Evaluate Division',72,'',0,0,2,2,0,0,0,1,0,0,0,0,0,5,1502410860,1502693513,1),(136,1,'','矩阵',61,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1502412060,1502689087,1),(137,1,'','591 Tag Validator',72,'',0,0,2,2,0,0,0,1,0,0,0,0,0,2,1502412173,1502412173,1),(139,1,'','深入解析 map reduce 架构设计与实现原理',56,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1502413200,1502413648,1),(140,1,'','Over window',65,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1502519340,1502587323,1),(141,1,'','sum 在不同地方，结果不同。',65,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1502605929,1502605929,1),(142,1,'','08/13/2017 第四个周末',59,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1502681100,1502688530,1),(143,1,'','79 Word Search',72,'',0,0,2,2,0,0,0,1,0,0,0,0,0,10,1502688420,1502693488,1),(144,1,'','矩阵回溯模板',61,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1502688943,1502688943,1),(145,1,'','二十三种设计模式',53,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1502690880,1502690937,1),(146,1,'','332 Reconstruct Itinerary',72,'',0,0,2,2,0,0,0,1,0,0,0,0,0,7,1502692800,1502693501,1),(147,1,'','310 Minimum Height Trees',72,'',0,0,2,2,0,0,0,1,0,0,0,0,0,9,1502693114,1502693114,1),(148,1,'','460 LFU Cache',72,'',0,0,2,2,0,0,0,1,0,0,0,0,0,3,1502693340,1502693538,1),(149,1,'','307 Range Sum Query - Mutable',72,'',0,0,2,2,0,0,0,1,0,0,0,0,0,8,1502693663,1502693663,1),(150,1,'','Multithreads',54,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1502728243,1502728243,3),(151,1,'','391 Perfect Rectangle',72,'',0,0,2,2,0,0,0,1,0,0,0,0,0,6,1502729087,1502729087,3),(152,1,'','391 Perfect Rectangle',72,'',0,0,2,2,0,0,0,1,0,0,0,0,0,1,1502729114,1502729114,1),(153,1,'','Service',69,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1502819671,1502819671,3),(154,1,'','Hive Insert',65,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1502836140,1502836528,1),(155,1,'','Learn Hive',65,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1502837100,1502863548,1),(156,1,'','控制欲望',77,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1502864394,1502864394,1),(157,1,'','术语',65,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1502906214,1502906214,1),(158,1,'','Hive 查看日志',65,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1502913300,1502916013,1),(159,1,'','4 Median of Two Sorted Arrays',72,'',0,0,2,2,0,0,0,1,0,0,0,0,0,13,1502928172,1502928172,1),(160,1,'','29 Divide Two Integers',72,'',0,0,2,2,0,0,0,1,0,0,0,0,0,11,1502928767,1502928767,1),(161,1,'','Map Reduce 的 Data Skew',65,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1502929109,1502929109,1),(162,1,'','33 Search in Rotated Sorted Array',72,'',0,0,2,2,0,0,0,1,0,0,0,0,0,0,1502932115,1502932115,1);
/*!40000 ALTER TABLE `ot_document` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_document_article`
--

DROP TABLE IF EXISTS `ot_document_article`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_document_article` (
  `id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '文档ID',
  `parse` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT '内容解析类型',
  `content` text NOT NULL COMMENT '文章内容',
  `template` varchar(100) NOT NULL DEFAULT '' COMMENT '详情页显示模板',
  `bookmark` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '收藏数',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='文档模型文章表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_document_article`
--

LOCK TABLES `ot_document_article` WRITE;
/*!40000 ALTER TABLE `ot_document_article` DISABLE KEYS */;
INSERT INTO `ot_document_article` VALUES (58,0,'<p style=\"white-space: normal;\">leet code 416 partition equal subset sum</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">这题的题意是给出一个数组, [1,5,11,5]</p><p style=\"white-space: normal;\">能否找出一个patition, 使得两个集合和相等．</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">这题是true, ［１．５，５］　和　［１１］</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">这题就是在数组中找出几个数字，使其和为给定值．</p><p style=\"white-space: normal;\">这题可以转化成　0, &nbsp;1 背包问题．</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">１：能否被等分．</p><p style=\"white-space: normal;\">２：给出一组解</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><span style=\"font-family:YouTube Noto, Roboto, arial, sans-serif\"><span style=\"font-size: 20px; background-color: rgb(255, 255, 255);\">　拓展有三等分，四等分，ｎ等分．</span></span></p><p style=\"white-space: normal;\"><span style=\"font-family: \" youtube=\"\" font-size:=\"\" background-color:=\"\">Balanced Partition of Array</span></p><p style=\"white-space: normal;\"><span style=\"font-family: \" youtube=\"\" font-size:=\"\" background-color:=\"\"><br/></span></p><p style=\"white-space: normal;\">先看二等分问题</p><p style=\"white-space: normal;\">d[i][j] 表示前i个数字．能否组成和为j.</p><p style=\"white-space: normal;\">dp[i][j] = dp[i-1][j] || dp[i][j - nums[i]</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">空间复杂度可以优化到一维.</p><p style=\"white-space: normal;\">dp[j]&nbsp;</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">如果是三等分问题</p><p style=\"white-space: normal;\">http://www.dewen.net.cn/q/14871/%E8%A7%A3%E4%B8%89%E5%88%92%E5%88%86%E9%97%AE%E9%A2%98+3-partition+problem+%E7%9A%84%E6%80%9D%E8%B7%AF</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p><br/></p>','',0),(59,0,'<p style=\"white-space: normal;\">graph 是面试中常考的体型．也是算法中的重中之重.</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">理论上来说图的题目：</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">有向图-----DFS-----有权重</p><p style=\"white-space: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| |-无权重</p><p style=\"white-space: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|-BFS-----有权重</p><p style=\"white-space: normal;\">&nbsp; |-无权重</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">无向图-----DFS-----有权重</p><p style=\"white-space: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| |-无权重</p><p style=\"white-space: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|-BFS-----有权重</p><p style=\"white-space: normal;\">&nbsp; |-无权重</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">但其实仔细一想，可以最终合并成几种．</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">从算法的角度，图只有两种。</p><p style=\"white-space: normal;\">DFS:</p><p style=\"white-space: normal;\">递归</p><p style=\"white-space: normal;\">非递归（栈）</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">BFS：只有非递归（队列）</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">存储方法：</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"font-family: \" microsoft=\"\" font-size:=\"\"><strong>1&nbsp; 邻接矩阵： n 阶方阵，无向图是对称矩阵，有向图行是出度，列是入度</strong></span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"font-family: \" microsoft=\"\" font-size:=\"\"><strong>2&nbsp; 邻接表： 可用linked list, arraylist, set, priorityqueue.</strong></span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"font-family: \" microsoft=\"\" font-size:=\"\"><strong>3&nbsp; 十字链表:</strong></span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"font-family: \" microsoft=\"\" font-size:=\"\"><strong>4&nbsp; 前向星:</strong></span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"font-family: \" microsoft=\"\" font-size:=\"\"><strong>5&nbsp; 链式前向星:</strong></span></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">掌握图的遍历, DFS, BFS</p><p style=\"white-space: normal;\">图的遍历一般指遍历点， 遍历边是有向图遍历点的特殊形式．</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">遍历点: DFS</p><p style=\"white-space: normal;\">递归: 设置一个visited数组</p><p style=\"white-space: normal;\">非递归:</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">遍历点: BFS</p><p style=\"white-space: normal;\">递归: 已经visited 过的就不需要重新加入queue了</p><p style=\"white-space: normal;\">非递归:</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">有向图的遍历:将有出度就加入HashMap 作为 key, 将其邻接表存入 queue, list</p><p style=\"white-space: normal;\">这样一个节点有几个入读，就会出现几次</p><p style=\"white-space: normal;\">每遍历一次就会从相应队列里删除一个</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">BFS 求最短路径只是针对无向图</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">图的BFS 类似于树，出队一个节点，将neighbor 入队，　用set标记是否已经访问过．但为了能找出层次，先用size来　for 循环．</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">最短路劲</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">汉密尔顿</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">欧拉回路&nbsp;</p><p><br/></p><p>133 clone graph</p><p><br/></p><p>269. Alien Dictionary</p><p><br/></p><p>207. Course Schedule</p><p><br/></p><p>200. course schedule II</p><p><br/></p><p>261. Graph valid tree</p><p><br/></p><p>310 Minimum Height Trees&nbsp;</p><p><br/></p><p>323.</p><p>332. Reconstruct Itinerary 重建飞行图</p><p><br/></p><p>399 Evaluate Division</p><p><br/></p><p>444.</p><p><br/></p>','',0),(21,0,'<span style=\"color:#666666;font-family:宋体, Arial;font-size:16px;line-height:26px;background-color:#FFFFFF;\">一、概述</span><br />\r\n<span style=\"color:#666666;font-family:宋体, Arial;font-size:16px;line-height:26px;background-color:#FFFFFF;\">Python 里 numpy，scipy,matplotlib,scikit-learn 是常用的三个库。</span><br />\r\n<p>\r\no<span style=\"color:#666666;font-family:宋体, Arial;font-size:16px;line-height:26px;background-color:#FFFFFF;\">numpy : &nbsp; &nbsp; &nbsp; &nbsp;运算矩阵。通过数组形式将Python循环放入C语言中，加快循环速度。</span>\r\n</p>\r\n<p>\r\no<span style=\"color:#666666;font-family:宋体, Arial;font-size:16px;line-height:26px;background-color:#FFFFFF;\">scipy： &nbsp; &nbsp; &nbsp; &nbsp; 信号处理及数值计算的一些工具。</span>\r\n</p>\r\n<span style=\"color:#666666;font-family:宋体, Arial;font-size:16px;line-height:26px;background-color:#FFFFFF;\"><span>scikit-learn：</span><span>机器学习相关的算法（如聚类算法，SVM等）。</span><br />\r\n<br />\r\n<span>matplotlib：一个画图工具。<br />\r\n<br />\r\n二、安装</span><br />\r\n<br />\r\n</span>\r\n<p>\r\no<span style=\"color:#666666;font-family:宋体, Arial;font-size:16px;line-height:26px;background-color:#FFFFFF;\">Ubuntu 下的安装</span>\r\n</p>\r\n<p>\r\no<span style=\"color:#666666;font-family:宋体, Arial;font-size:16px;line-height:26px;background-color:#FFFFFF;\">\r\no<ol class=\"dp-css none_number\">\r\no<li>\r\nosudo apt-get install python-numpy\r\no</li>\r\no<li>\r\nosudo apt-get install python-scipy<br />\r\no</li>\r\no<li>\r\nosudo apt-get install python-matplotlib\r\no</li>\r\no<li>\r\nosudo apt-get install python-sklearn\r\no</li>\r\no</ol>\r\n<br />\r\n</span>\r\n</p>\r\n<span style=\"color:#666666;font-family:宋体, Arial;font-size:16px;line-height:26px;background-color:#FFFFFF;\"><br />\r\n</span>\r\n<p>\r\no<span style=\"color:#666666;font-family:宋体, Arial;font-size:16px;line-height:26px;background-color:#FFFFFF;\">使用pip</span>\r\n</p>\r\n<p>\r\no<span style=\"color:#666666;font-family:宋体, Arial;font-size:16px;line-height:26px;background-color:#FFFFFF;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\no<span style=\"color:#666666;font-family:宋体, Arial;font-size:16px;line-height:26px;background-color:#FFFFFF;\">&nbsp;&nbsp;&nbsp;&nbsp;pip install sklearn<br />\r\n</span>\r\n</p>\r\n<p>\r\no<span style=\"color:#666666;font-family:宋体, Arial;font-size:16px;line-height:26px;background-color:#FFFFFF;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\no<span style=\"color:#666666;font-family:宋体, Arial;font-size:16px;line-height:26px;background-color:#FFFFFF;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\no<span style=\"color:#666666;font-family:宋体, Arial;font-size:16px;line-height:26px;background-color:#FFFFFF;\"><br />\r\n</span>\r\n</p>','',0),(23,0,'<p><span style=\"font-size: 12px;\">配置 &nbsp;.vimrc</span></p><p><span style=\"font-size: 12px;\">vim ~/.vimrc (need touch if the file does not exist)</span></p><pre class=\"brush:bash;toolbar:false\">set&nbsp;number\r\nsyntax&nbsp;on\r\nset&nbsp;a</pre><p><span style=\"font-size: 12px;\"></span><br/></p><p><span style=\"font-size: 12px;\"><br/></span></p><p><span style=\"font-size: 12px;\"><br/></span></p><p><span style=\"font-size: 12px;\">一. 快速移动篇</span></p><p><span style=\"font-size: 12px;\">按行号移动</span></p><p><span style=\"font-size: 12px;\">nG &nbsp; &nbsp; &nbsp; &nbsp; //移动到第n行，注意此处G是大写。即输入n，在小写模式下输入shift+g，大写模式下直接按下g键(如100G则能快速定位到源程序中第100行代码位置处，想必是很有用的。）</span></p><p><span style=\"font-size: 12px;\">Ctrl + g &nbsp;// 显示当前行（并不是移动命令）</span></p><p><span style=\"font-size: 12px;\">G &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// 移动到文件的尾部，在小写模式下输入shift+g，大写模式下直接按下g键</span></p><p><span style=\"font-size: 12px;\">gg &nbsp; &nbsp; &nbsp; &nbsp; //move to file top</span></p><p><br/></p><p><span style=\"font-size: 12px;\">按字符移动</span></p><p><span style=\"font-size: 12px;\">fx &nbsp; &nbsp; &nbsp; //往右移动到 x 字符上 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></p><p><span style=\"font-size: 12px;\">Fx &nbsp; &nbsp; &nbsp; //往左移动到 x 字符上 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></p><p><span style=\"font-size: 12px;\">tx &nbsp; &nbsp; &nbsp; //往右移动到 x 字符前 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></p><p><span style=\"font-size: 12px;\">Tx &nbsp; &nbsp; &nbsp;//往左移动到 x 字符后 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></p><p><br/></p><p><span style=\"font-size: 12px;\">; &nbsp; &nbsp; &nbsp; &nbsp; //分号，配合 f 和 t 使用，重复一次 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></p><p><span style=\"font-size: 12px;\">, &nbsp; &nbsp; &nbsp; &nbsp; //逗号，配合 f 和 t 使用，反方向重复一次 &nbsp;o</span></p><p><br/></p><p><br/></p><p><span style=\"font-size: 12px;\">二.编辑：</span></p><p><span style=\"font-size: 12px;\">http://www.cnblogs.com/nerxious/archive/2012/12/21/2827774.html</span></p><p><span style=\"font-size: 12px;\">i &nbsp; 当前位置插入</span></p><p><span style=\"font-size: 12px;\">O 上一行插入</span></p><p><span style=\"font-size: 12px;\">o 小o， 下一行插入</span></p><p><span style=\"font-size: 12px;\"><br/></span></p><p>y5h--&gt; p &nbsp; yank back 5 characters &nbsp;and then paste</p><p><br/></p><p><br/></p><p><span style=\"font-size: 12px;\">三.搜索, 替换</span></p><p><span style=\"font-size: 12px;\">/pattern &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// 向前搜索模式，pattern代指要搜索的内容</span></p><p><span style=\"font-size: 12px;\">?pattern &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// 向后搜索模式</span></p><p><span style=\"font-size: 12px;\">n &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// 重复上次搜索（向行号大的方向）</span></p><p><span style=\"font-size: 12px;\">N &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 反方向重复上次搜索</span></p><p><span style=\"font-size: 12px;\"></span></p><p><br/></p><p><span style=\"font-size: 12px;\">替换</span></p><p><span style=\"font-size: 12px;\">：%s/from/to/g &nbsp; 有%是全文替换，没有%是当前行替换，s即substitude，将from替换成to, 加 /g &nbsp;是对这一行每个from 都替换成to， 不加/g 之替换这一行第一个出现的from</span></p><p><span style=\"font-size: 12px;\">例：替换每一行行号，用正则</span></p><p><span style=\"font-size: 12px;\">：%s/[0-9]\\./ / g &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 将 [0-9]\\. &nbsp;(如 8.) 替换成 空格</span></p><p><span style=\"font-size: 12px;\"><br/></span><br/></p><p><br/></p>','',0),(117,0,'<p style=\"white-space: normal;\">19. Remove Nth Node From End of List.</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">24. Swap Node in Pairs&nbsp;</p><p style=\"white-space: normal;\">1-&gt;2-&gt;3-&gt;4 ==&gt; 2-&gt;1-&gt;4-&gt;3</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">这题简单又易错，和反转的题目类似．</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">在循环的一开始，就要保存next.</p><p style=\"white-space: normal;\"><img src=\"http://www.beyondfw.com/Uploads/Editor/2017-07-12/59659de2734eb.png\" title=\"link.png\"/></p><pre class=\"brush:java;toolbar:false\">while&nbsp;(&nbsp;cur&nbsp;!=&nbsp;null&nbsp;&amp;&amp;&nbsp;cur.next&nbsp;!=&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;next&nbsp;=&nbsp;cur.next;\r\n&nbsp;&nbsp;&nbsp;&nbsp;cur.next&nbsp;=&nbsp;next.next;&nbsp;//step1\r\n&nbsp;&nbsp;&nbsp;&nbsp;next.next&nbsp;=&nbsp;cur;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//step2\r\n&nbsp;&nbsp;&nbsp;&nbsp;prev.next&nbsp;=&nbsp;next;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//step3\r\n&nbsp;&nbsp;&nbsp;&nbsp;prev&nbsp;=&nbsp;cur;\r\n&nbsp;&nbsp;&nbsp;&nbsp;cur&nbsp;=&nbsp;cur.next;\r\n}</pre><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p><br/></p>','',0),(24,0,'<p><span style=\"font-size:16px;\">选自 《java 核心技术 》 高级 第九版</span> </p><p><span style=\"font-size:16px;\">第一章 流和文件</span> </p><p><span style=\"font-size:16px;\">输入流：读一串字节（a sequence of bytes） </span> </p><p><span style=\"font-size:16px;\">输出流：写一串字节</span> </p><p><span style=\"font-size:16px;\">这种字节串 一般是文件，但也可能是 网络链接甚至是一块内存。</span> </p><p><span style=\"font-size:16px;\">InputStream 和 OutputStream 类 继承于 input/output（I/O）类。</span> </p><p><span style=\"font-size:16px;\">这种流在处理Unicode编码时并不高效，因为Unicode 是一个字符有多个字节（multiple bytes&nbsp;per character），所以可以用Reader 和 Writer类来处理，这是基于两字节Unicode编码的。 &nbsp;</span> </p><p><span style=\"font-size:16px;\">什么是流？ </span> </p><p><span style=\"font-size:16px;\"><br/></span> </p><p><span style=\"font-size:16px;\"><br/></span> </p><p><span style=\"font-size:16px;\">ps: java io 体系所有子类的名称的后缀名一般都是父类的名称。<br/>&nbsp;<br/>InputStream 是所有字节输入流的超类，它是个抽象类。并且所有过滤流的构造函数接收的类型也是它。&nbsp;<br/>其中的方法也是所有输入流类都有的方法：<br/>available() 返回当前未读的字节数，<br/>close() 关闭流资源，<br/>mark(int readlimit) 标记当前输入流所在的位置，也就是当前输入流读取到的位置，readlimit 表示最大缓存多少个字节，也就是记忆多少个字节。当调用reset()方法的时候会重新定位到mark方法定位时的位置。InputStream 里没有实现这两个方法，只会抛出IOException。<br/>markSupported() 测试此输入流是否支持 mark 和 reset 方法。<br/>read()方法，读取单个字节，以int类型返回，是个抽象方法。<br/>read(byte[]) 从输入流中读取一定数量的字节，并将其存放到字符数组中。<br/>read(byte[] b,int startIndex,int len) 从输入流中的startIndex位置读取len个字节放到字符数组中,<br/>reset()方法，将此流重新定位到最后一次对此输入流调用 mark 方法时的位置。<br/>skip(long n)方法， 跳过和丢弃此输入流中数据的 n 个字节。<br/><br/></span> </p><p><span style=\"font-size:16px;\">OutputStream:</span> </p><p><span style=\"font-size:16px;\">java.io.OutputStream 1.0<br/>• abstract void write(int n)<br/>writes a byte of data.<br/>• void write(byte[] b)<br/>• void write(byte[] b, int off, int len)<br/>writes all bytes or a range of bytes in the array b.<br/>• void close()<br/>flushes and closes the output stream.<br/>• void flush()<br/>flushes the output stream—that is, sends any buffered data to its destination.</span> </p><p><span style=\"font-size:16px;\"><br/></span> </p><p><span style=\"font-size:16px;\">java IO 是个很大家族。可以根据自己不同的输入输出需要选择不同的流。</span> </p><p><span style=\"font-size:16px;\"><br/></span> </p><p><span style=\"font-size:16px;\">很多情况下，文件是以二进制存放的，因为效率更高。</span> </p><p><span style=\"font-size:16px;\">但我们打开二进制文件时，却常常显示16进制，因为如果以二进制表示篇幅太大，也不利于阅读，同时十六进制可以方便的转成二进制。</span> </p><p><span style=\"font-size:16px;\">不同的编码体系转成二进制文件也不同。例如string “1234”</span> </p><p><span style=\"font-size:16px;\">UTF-16 :&nbsp;00 31 00 32 00 33 00 34&nbsp;</span> </p><p><span style=\"font-size:16px;\">ISO 8859-1&nbsp;:&nbsp;31&nbsp;32 33 34 (没有0字节)</span> </p><p><span style=\"font-size:16px;\"><br/></span> </p><p><span style=\"font-size:16px;\">Java IO 是典型的装饰者模式，通过在原来的流上加装饰，功能不断增强。</span> </p><p><br/></p><p><span style=\"font-size:16px;\">• To write data in binary format, you use a DataOutputStream.</span><br/><span style=\"font-size:16px;\">• To write in text format, you use a PrintWriter.</span></p><p><span style=\"font-size:16px;line-height:24px;\">只介绍两个典型的用法</span> </p><p><span style=\"font-size:16px;line-height:24px;\">1.读取写入txt文件</span> </p><p><span style=\"font-size:16px;line-height:24px;\">读取：</span> </p><p><span style=\"font-size:16px;line-height:24px;\">Scanner&nbsp;</span></p><p><span style=\"font-size:16px;line-height:24px;\">写入：</span> </p><p><span style=\"font-size:16px;line-height:24px;\">这两句是等效的</span> </p><p><span style=\"font-size:16px;line-height:24px;\">PrintWriter out = new PrintWriter(&quot;employee.txt&quot;);<br/>PrintWriter out = new PrintWriter(new FileWriter(&quot;employee.txt&quot;));</span> </p><p><span style=\"font-size:16px;line-height:24px;\">当定义了out对象，就可一System.out里最常见的print, println, 和 printf 方法去写文件了！</span> </p><p><span style=\"font-size:16px;line-height:24px;\"><span style=\"color: rgb(54, 46, 43); font-family: Arial; font-size: 14px; line-height: 26px;  background-color: rgb(255, 255, 255);\"><span id=\"_baidu_bookmark_start_1\" style=\"display: none; line-height: 0px;\">‍</span></span></span><span id=\"_baidu_bookmark_start_3\" style=\"display: none; line-height: 0px;\">‍</span>import java.io.PrintWriter;</p><p><span style=\"font-size:16px;line-height:24px;\">void writeFile(){</span> </p><p><span style=\"font-size:16px;line-height:24px;\"></span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try{</p><p>&nbsp; &nbsp; &nbsp; &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>PrintWriter out = new PrintWriter(&quot;test.txt&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>out.print(&quot;sd&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>out.println();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>out.print(&quot;as&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; out.close(); //不加的话，就是只写到buffer里，一定要加</p><p>&nbsp; &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>}catch(Exception e){</p><p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;<span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>System.out.println(e.getMessage());</p><p>&nbsp; &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>}</p><p>&nbsp; &nbsp; &nbsp; &nbsp;</p><p><span style=\"font-size:16px;line-height:24px;\"><span style=\"font-size:16px;line-height:24px;\"></span></span> <br/></p><p><span style=\"font-size:16px;line-height:24px;\">}</span> </p><p><span style=\"font-size:16px;line-height:24px;\"><br/></span> </p><p><span style=\"font-size:16px;line-height:24px;\">2.标准输入输出流</span> </p><p><span style=\"font-size:16px;line-height:24px;\"><br/></span> </p>','',0),(25,0,'<p>http://www.powerxing.com/install-hadoop/</p><p>o环境 ：ubuntu 16.04 &nbsp; ， Hadoop 2.4.0 java-8-openjdk-amd64</p><p>o</p><p>o一.hadoop三种安装模式</p><p>o1，单机模式：Hadoop的默认模式。当首次解压Hadoop的源码包时，Hadoop无法了解硬件安装环境，便保守地选择了最小配置。在这种默认模式下所有3个XML文件均为空。当配置文件为空时，Hadoop会完全运行在本地。因为不需要与其他节点交互，单机模式就不使用HDFS，也不加载任何Hadoop的守护进程。该模式主要用于开发调试MapReduce程序的应用逻辑， 而不会与守护进程交互，避免引起额外的复杂性。（选自 hadoop in action）</p><p>o</p><p>o2.伪分布模式：在“单节点集群”上运行hadoop，所有守护进程运行于同一台主机上，但此时Hadoop将使用分布式文件系统，而且各jobs也是由JobTracker服务管理的独立进程。同时，由于伪分布式的Hadoop集群只有一个节点，因此HDFS的块复制将限制为单个副本，其secondary-master和slave也都将运行于本地主机。此种模式除了并非真正意义的分布式之外，其程序执行逻辑完全类似于完全分布式，该模式在单机模式之上增加了代码调试功能，允许你检查内存使用情况，HDFS输入输出，以及其他的守护进程交互，因此，常用于开发人员测试程序执行。</p><p><br/></p><p>3.全分布模式：真正的分布式集群。</p><p><br/></p><p>二.现采用伪分布模式：</p><p>1,下载hadoop 2.0.4</p><p>2,配置环境变量：</p><p>ovim ./.bashrc</p><p>export HADOOP_HOME=/home/wanye/softWare/hadoop-2.4.0</p><p>export PATH=$PATH:$HADOOP_HOME/bin</p><p>export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64</p><p>export CLASSPATH=.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib:$CLASSPATH</p><p>export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH</p><p>source ./.bashrc</p><p>o3.配置hadoop&nbsp;</p><p>o</p><p>o进入hadoop2.4.0文件夹，配置etc/hadoop中的文件。</p><p>ohadoop-env.sh</p><p>oexport JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64</p><p>o另外可选的添加上：</p><p>oexport HADOOP_COMMON_LIB_NATIVE_DIR=${HADOOP_HOME}/lib/native</p><p>oexport HADOOP_OPTS=&quot;-Djava.library.path=$HADOOP_HOME/lib&quot;</p><p>o</p><p>ocore-site.xml，做如下配置：</p><p><br/></p><p><br/></p><p>&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp;fs.default.name&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp;hdfs://127.0.0.1:9000&nbsp;</p><p>&nbsp; &nbsp;&nbsp;</p><p><br/></p><p>&nbsp; &nbsp;</p><p>dfs.namenode.name.dir</p><p>file:/homewanye/softWare/hadoop-2.4.0/dfs/name</p><p><br/></p><p><br/></p><p><br/></p><p>dfs.datanode.data.dir</p><p>&nbsp; &nbsp;file:/home/wanye/softWare/hadoop-2.4.0/dfs/data</p><p>&nbsp; &nbsp;</p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p>ohdfs-site.xml，做如下配置（系统默认文件保存3份，因伪分布模式，故改为1份）：</p><p><br/></p><p>o</p><p>&nbsp;</p><p>dfs.replication</p><p>1</p><p><br/></p><p><br/></p><p>dfs.namenode.name.dir</p><p>/home/wanye/softWare/hadoop-2.4.0/dfs/name</p><p><br/></p><p><br/></p><p>dfs.datanode.data.dir</p><p>/home/wanye/softWare/hadoop-2.4.0/dfs/data</p><p><br/></p><p><br/></p><p><br/></p><p>o/*mapred-site.xml,做如下配置：</p><p><br/></p><p>o &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;mapreduce.jobtracker.address&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;localhost:9001&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>o这里2.4.0中没有这个文件，可以新建一个</p><p>o*/</p><p>o</p><p>o或者直接修改mapred-site.xml.template</p><p><br/></p><p><br/></p><p>mapreduce.framework.name</p><p>&nbsp; &nbsp;yarn</p><p><br/></p><p><br/></p><p><br/></p><p>yarn-site.xml，如下配置：</p><p><br/></p><p>mapreduce.framework.name</p><p>yarn</p><p><br/></p><p><br/></p><p>yarn.nodemanager.aux-services</p><p>mapreduce_shuffle</p><p><br/></p><p>o</p><p>o</p><p>o三.ssh免密码 登陆 ( 并没有设置)</p><p>o四.开始测试</p><p>o$HADOOP_HOME/bin/hadoop namenode –format格式化结点信息</p><p>最后一句出现shutting down什么玩意，中间没有warn或者fatal error应该就对了。</p><p>第二步：然后，开始$HADOOP_HOME/sbin/start-all.sh.</p><p>o</p><p>http://localhost:50070/</p><p>o出现页面即为成功。</p><p>o</p><p>o</p><p>o(1)执行命令jps会有5个进程，分别是NameNode、</p><p>oDataNode、SecondaryNameNode、JobTracker,</p><p>oTaskTracker</p><p>但我只看到两个进程，查看log文件</p><p><br/></p><p>报错和解决方案</p><p><br/></p><p>o2016-04-24 19:02:33,942 WARN org.apache.hadoop.util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable</p><p>odatanode.log:</p><p>ojava.lang.VerifyError: class org.apache.hadoop.hdfs.protocol.proto.ClientDatanodeProtocolProtos$RefreshNamenodesResponseProto overrides final method getUnknownFields.()Lcom/google/protobuf/UnknownFieldSet;</p><p>at java.lang.ClassLoader.defineClass1(Native Method)</p><p>at java.lang.ClassLoader.defineClass(ClassLoader.java:763)</p><p>at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)</p><p>at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)</p><p>at java.net.URLClassLoader.access$100(URLClassLoader.java:73)</p><p>at java.net.URLClassLoader$1.run(URLClassLoader.java:368)</p><p>at java.net.URLClassLoader$1.run(URLClassLoader.java:362)</p><p>at java.security.AccessController.doPrivileged(Native Method)</p><p>at java.net.URLClassLoader.findClass(URLClassLoader.java:361)</p><p>at java.lang.ClassLoader.loadClass(ClassLoader.java:424)</p><p>at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)</p><p>at java.lang.ClassLoader.loadClass(ClassLoader.java:357)</p><p>at org.apache.hadoop.hdfs.protocolPB.ClientDatanodeProtocolServerSideTranslatorPB.(ClientDatanodeProtocolServerSideTranslatorPB.java:63)</p><p>at org.apache.hadoop.hdfs.server.datanode.DataNode.initIpcServer(DataNode.java:411)</p><p>at org.apache.hadoop.hdfs.server.datanode.DataNode.startDataNode(DataNode.java:743)</p><p>at org.apache.hadoop.hdfs.server.datanode.DataNode.(DataNode.java:281)</p><p>at org.apache.hadoop.hdfs.server.datanode.DataNode.makeInstance(DataNode.java:1878)</p><p>at org.apache.hadoop.hdfs.server.datanode.DataNode.instantiateDataNode(DataNode.java:1772)</p><p>at org.apache.hadoop.hdfs.server.datanode.DataNode.createDataNode(DataNode.java:1812)</p><p>at org.apache.hadoop.hdfs.server.datanode.DataNode.secureMain(DataNode.java:1988)</p><p>at org.apache.hadoop.hdfs.server.datanode.DataNode.main(DataNode.java:2012)</p><p>o然而并没解决！</p><p><br/></p>','',0),(126,0,'<p style=\"white-space: normal;\">官网的文档 貌似更新到15 年，一开始装有些问题．</p><p style=\"white-space: normal;\">ubuntu: 14.04</p><p style=\"white-space: normal;\">openjdk-7-jdk&nbsp;apt-get install</p><p style=\"white-space: normal;\">gradle-1.12 binary-release</p><p style=\"white-space: normal;\">hadoop: 2.4.1 binary-release</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">git clone ../impati</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">cd&nbsp;Impatiant</p><p style=\"white-space: normal;\">gradle&nbsp;clean jar</p><p style=\"white-space: normal;\">cd part1</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">Anatomy:</p><p style=\"white-space: normal;\">&nbsp; source taps &nbsp; &nbsp; &nbsp; SQL &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;J2EE &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;SAS for prediction model &nbsp; &nbsp; &nbsp; sink taps</p><p style=\"white-space: normal;\">data sources --&gt; ETL --&gt; data prep --&gt; prediction model ----------------&gt; end uses.</p><p style=\"white-space: normal;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;SQLPlanner &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; PMMLPlanner</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">java sample code:</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">word count - conceptual flow diagram</p><p style=\"white-space: normal;\">&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; Map &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; Reduce</p><p style=\"white-space: normal;\">Document Collection ------------&gt; Tokenize ---------&gt;Groupby token---------------&gt;Count--------&gt;word count</p><p style=\"white-space: normal;\">&nbsp;1 map 1 reduce 18 lines &nbsp;code</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">sql&nbsp;in cascading</p><p style=\"white-space: normal;\">PMML in cascading with&nbsp;R ?</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">首要概念：</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">Tap:数据源&nbsp;mongodb&nbsp;hbase&nbsp;jdbc</p><p style=\"white-space: normal;\">Pipe</p><p style=\"white-space: normal;\">Fields</p><p style=\"white-space: normal;\">Each</p><p style=\"white-space: normal;\">Every</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p><br/></p>','',0),(127,0,'<p><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 13px;  background-color: rgb(255, 255, 255);\">This test will be a&nbsp;</span><span class=\"op_dict3_highlight\" style=\"color: rgb(204, 0, 0); font-family: arial; font-size: 13px;  background-color: rgb(255, 255, 255);\">no</span><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 13px;  background-color: rgb(255, 255, 255);\">&nbsp;</span><span class=\"op_dict3_inlineblock\" style=\"color: rgb(51, 51, 51); display: inline-block; font-family: arial; font-size: 13px;  background-color: rgb(255, 255, 255);\"><span class=\"op_dict3_highlight\" style=\"color: rgb(204, 0, 0);\">brainer</span></span>&nbsp;</p><p><span style=\"color: rgb(34, 34, 34); font-family: Helvetica, Arial, sans-serif; font-size: 14px;  background-color: rgb(255, 255, 255);\">it&#39;s a no-brainer</span></p>','',0),(37,0,'<ul style=\"border: 0px; margin-bottom: 20px; padding: 0px; font-size: 15px; list-style-position: outside; color: rgb(46, 46, 46); font-family: &#39;Microsoft YaHei&#39;, 宋体, &#39;Myriad Pro&#39;, Lato, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; line-height: 24px; white-space: normal; background-color: rgb(255, 255, 255);\" class=\" list-paddingleft-2\"><li><p><strong><span style=\"font-size: 16px;\">构建</span></strong><span style=\"font-size: 16px;\">：</span><strong style=\"border: 0px; margin: 0px; padding: 0px;\">每一次Gradle的构建都包含一个或多个项目</strong>。</p></li><li><p><strong style=\"border: 0px; margin: 0px; padding: 0px;\">项目：</strong>是指我们的构建产物（比如Jar包）或实施产物（将应用程序部署到生产环境）。<strong style=\"border: 0px; margin: 0px; padding: 0px;\">一个项目包含一个或多个任务。</strong></p></li><li><p><strong style=\"border: 0px; margin: 0px; padding: 0px;\">任务：</strong>是指不可分的最小工作单元，执行构建工作（比如编译项目或执行测试）。</p></li></ul><ul style=\"border: 0px; margin-bottom: 20px; padding: 0px; font-size: 15px; list-style-position: outside; color: rgb(46, 46, 46); font-family: &#39;Microsoft YaHei&#39;, 宋体, &#39;Myriad Pro&#39;, Lato, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; line-height: 24px; white-space: normal; background-color: rgb(255, 255, 255);\" class=\" list-paddingleft-2\"><li><p>Gradle构建脚本（build.gradle）指定了一个项目和它的任务。</p></li><li><p><a href=\"http://www.gradle.org/docs/current/userguide/build_environment.html#sec:gradle_configuration_properties\" style=\"border: 0px; margin: 0px; padding: 0px; text-decoration: none; color: rgb(0, 153, 204);\">Gradle属性文件（gradle.properties）</a>用来配置构建属性。</p></li><li><p><a href=\"http://www.gradle.org/docs/current/userguide/build_lifecycle.html#sec:settings_file\" style=\"border: 0px; margin: 0px; padding: 0px; text-decoration: none; color: rgb(0, 153, 204);\">Gradle设置文件（gradle.settings）</a>对于只有一个项目的构建而言是可选的，如果我们的构建中包含多于一个项目，那么它就是必须的，因为它描述了哪一个项目参与构建。每一个多项目的构建都必须在项目结构的根目录中加入一个设置文件。</p></li></ul><p style=\"border: 0px; margin-top: 0px; margin-bottom: 20px; padding: 0px; font-size: 15px; color: rgb(46, 46, 46); font-family: &#39;Microsoft YaHei&#39;, 宋体, &#39;Myriad Pro&#39;, Lato, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; line-height: 24px; white-space: normal; background-color: rgb(255, 255, 255);\"><a href=\"http://www.gradle.org/docs/current/userguide/java_plugin.html#N12119\" style=\"border: 0px; margin: 0px; padding: 0px; text-decoration: none; color: rgb(0, 153, 204);\">默认的项目结构</a>如下：</p><ul style=\"border: 0px; margin-bottom: 20px; padding: 0px; font-size: 15px; list-style-position: outside; color: rgb(46, 46, 46); font-family: &#39;Microsoft YaHei&#39;, 宋体, &#39;Myriad Pro&#39;, Lato, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; line-height: 24px; white-space: normal; background-color: rgb(255, 255, 255);\" class=\" list-paddingleft-2\"><li><p><em style=\"border: 0px; margin: 0px; padding: 0px;\">src/main/java</em>目录包含了项目的源代码。</p></li><li><p><em style=\"border: 0px; margin: 0px; padding: 0px;\">src/main/resources</em>目录包含了项目的资源（如属性文件）。</p></li><li><p><em style=\"border: 0px; margin: 0px; padding: 0px;\">src/test/java</em>目录包含了测试类。</p></li><li><p><em style=\"border: 0px; margin: 0px; padding: 0px;\">src/test/resources</em>目录包含了测试资源。所有我们构建生成的文件都会在<em style=\"border: 0px; margin: 0px; padding: 0px;\">build</em>目录下被创建，这个目录涵盖了以下的子目录，这些子目录我们会在这篇教程中提到，另外还有一些子目录我们会放在以后讲解。</p></li><li><p><em style=\"border: 0px; margin: 0px; padding: 0px;\">classes</em>目录包含编译过的<em style=\"border: 0px; margin: 0px; padding: 0px;\">.class</em>文件。</p></li><li><p><em style=\"border: 0px; margin: 0px; padding: 0px;\">libs</em>目录包含构建生成的<em style=\"border: 0px; margin: 0px; padding: 0px;\">jar</em>或<em style=\"border: 0px; margin: 0px; padding: 0px;\">war</em>文件。</p></li></ul><p>一：构建项目<br/></p><ul style=\"border: 0px; margin-bottom: 20px; padding: 0px; font-size: 15px; list-style-position: outside; color: rgb(46, 46, 46); font-family: &#39;Microsoft YaHei&#39;, 宋体, &#39;Myriad Pro&#39;, Lato, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; line-height: 24px; white-space: normal; background-color: rgb(255, 255, 255);\" class=\" list-paddingleft-2\"><li><p><span style=\"font-family: sans-serif; font-size: 16px;\">gradle 没有自动生成目录的命令，但是 gradle 标准目录和maven 相同&nbsp;</span></p></li><li><p><span style=\"font-family: sans-serif; font-size: 16px;\">可以在build.gradle 里 增加一个task</span></p></li></ul><p><span style=\"font-family: sans-serif; font-size: 16px;\"></span></p><pre class=\"groovy\" name=\"code\" style=\"white-space: pre-wrap; word-wrap: break-word; color: rgb(51, 51, 51); font-size: 10px; line-height: 18px; margin-top: 0px; min-height: 1.5em; font-family: &#39;Courier 10 Pitch&#39;, Courier, monospace !important; margin-bottom: 1.5em !important; border: 1px solid rgb(204, 204, 204) !important; padding: 0.3em 0.5em !important; background-color: rgb(244, 244, 244) !important;\">task&nbsp;&quot;create-dirs&quot;&nbsp;&lt;&lt;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;sourceSets*.java.srcDirs*.each&nbsp;{&nbsp;it.mkdirs()&nbsp;}\r\n&nbsp;&nbsp;&nbsp;sourceSets*.resources.srcDirs*.each&nbsp;{&nbsp;it.mkdirs()&nbsp;}\r\n}</pre><p><span style=\"font-family: sans-serif; font-size: 16px;\">执行 task&nbsp;</span><br/></p><p><span style=\"font-family: sans-serif; font-size: 16px;\">gradle create-dirs</span></p><p><span style=\"font-family: sans-serif; font-size: 16px;\"><br/></span></p><p>&nbsp;在&nbsp;<em style=\"border: 0px; margin: 0px; padding: 0px; font-size: 15px; color: rgb(46, 46, 46); font-family: &#39;Microsoft YaHei&#39;, 宋体, &#39;Myriad Pro&#39;, Lato, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; line-height: 24px; background-color: rgb(255, 255, 255);\">src/main/java/net/petrikainulainen/gradle 下 创建文件</em></p><p><em style=\"border: 0px; margin: 0px; padding: 0px; font-size: 15px; color: rgb(46, 46, 46); font-family: &#39;Microsoft YaHei&#39;, 宋体, &#39;Myriad Pro&#39;, Lato, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif; line-height: 24px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></em></p><p>HelloWorld.java</p><pre class=\"brush:java;toolbar:false\">package&nbsp;com.cmu.gradle;\r\n\r\npublic&nbsp;class&nbsp;HelloWorld&nbsp;{\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;Hello&nbsp;World!&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p><span class=\"crayon-e\" style=\"border: 0px; margin: 0px; padding: 0px; font-size: inherit !important; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: teal !important;\"></span><br/></p><p><span style=\"color:#008080\">在项目根目录下：</span></p><p><span class=\"crayon-e\" style=\"border: 0px; margin: 0px; padding: 0px; font-size: inherit !important; font-family: inherit; height: inherit; line-height: inherit !important; font-weight: inherit !important; color: teal !important;\">build.gradle：</span></p><pre class=\"brush:groovy;toolbar:false\">apply&nbsp;plugin:&nbsp;&#39;java&#39;\r\n&nbsp;\r\njar&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;manifest&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attributes&nbsp;&#39;Main-Class&#39;:&nbsp;&#39;com.cmu.gradle.HelloWorld&#39;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p><br/></p><p>gradle build &nbsp;生成可执行文件 jar</p><p>gradle assemble 生成可执行文件 ,并打包依赖</p><p><br/></p><p>二：打包依赖：</p><p><br/></p><p>去maven 仓库&nbsp;</p><p>http://mvnrepository.com/</p><p>找到包</p><p><br/></p><pre class=\"lang-java prettyprint prettyprinted\" style=\"margin-top: 0px; margin-bottom: 1em; padding: 5px; border: 0px; font-size: 13px; width: auto; max-height: 600px; overflow: auto; font-family: Consolas, Menlo, Monaco, &#39;Lucida Console&#39;, &#39;Liberation Mono&#39;, &#39;DejaVu Sans Mono&#39;, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, monospace, sans-serif; color: rgb(57, 51, 24); word-wrap: normal; background-color: rgb(239, 240, 241);\">repositories&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;mavenCentral()\r\n}\r\n\r\ndependencies&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;compile&nbsp;&#39;org.xerial:sqlite-jdbc:3.7.2&#39;\r\n\r\n}</pre><p><code style=\"margin: 0px; padding: 0px; border: 0px; font-family: Consolas, Menlo, Monaco, &#39;Lucida Console&#39;, &#39;Liberation Mono&#39;, &#39;DejaVu Sans Mono&#39;, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, monospace, sans-serif; white-space: inherit;\"><span class=\"pun\" style=\"margin: 0px; padding: 0px; border: 0px; color: rgb(48, 51, 54);\"></span></code></p><p><br/></p><p><code style=\"margin: 0px; padding: 0px; border: 0px; font-family: Consolas, Menlo, Monaco, &#39;Lucida Console&#39;, &#39;Liberation Mono&#39;, &#39;DejaVu Sans Mono&#39;, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, monospace, sans-serif; white-space: inherit;\"><span class=\"pun\" style=\"margin: 0px; padding: 0px; border: 0px; color: rgb(48, 51, 54);\">依赖打包；将运行时的依赖打成完整的一个包，而不是放在jre/lib/ext目录下</span></code></p><p><code style=\"margin: 0px; padding: 0px; border: 0px; font-family: Consolas, Menlo, Monaco, &#39;Lucida Console&#39;, &#39;Liberation Mono&#39;, &#39;DejaVu Sans Mono&#39;, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, monospace, sans-serif; white-space: inherit;\"><span class=\"pun\" style=\"margin: 0px; padding: 0px; border: 0px; color: rgb(48, 51, 54);\"><br/></span></code></p><pre class=\"brush:groovy;toolbar:false\">apply&nbsp;plugin:&nbsp;&#39;java&#39;\r\n&nbsp;\r\nrepositories&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;mavenCentral()\r\n}\r\n&nbsp;\r\ndependencies&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;compile&nbsp;&#39;log4j:log4j:1.2.17&#39;\r\n&nbsp;&nbsp;&nbsp;&nbsp;testCompile&nbsp;&#39;junit:junit:4.11&#39;\r\n}\r\n&nbsp;\r\njar&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;{&nbsp;configurations.compile.collect&nbsp;{&nbsp;it.isDirectory()&nbsp;?&nbsp;it&nbsp;:&nbsp;zipTree(it)&nbsp;}&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;manifest&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attributes&nbsp;&#39;Main-Class&#39;:&nbsp;&#39;net.petrikainulainen.gradle.HelloWorld&#39;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n}</pre><p><code style=\"margin: 0px; padding: 0px; border: 0px; font-family: Consolas, Menlo, Monaco, &#39;Lucida Console&#39;, &#39;Liberation Mono&#39;, &#39;DejaVu Sans Mono&#39;, &#39;Bitstream Vera Sans Mono&#39;, &#39;Courier New&#39;, monospace, sans-serif; white-space: inherit;\"><span class=\"pun\" style=\"margin: 0px; padding: 0px; border: 0px; color: rgb(48, 51, 54);\"></span></code>&nbsp;</p><p>据说可以这样 但是，报错</p><p><br/></p><p>Cannot convert the provided notation to a File or URI: [ZIP &#39;/home/wanye/Desktop/java/jdbc-sqlite/libs/sqlite-jdbc-3.8.11.2.jar&#39;].</p><p>The following types/formats are supported:</p><p>&nbsp; - A String or CharSequence path, for example &#39;src/main/java&#39; or &#39;/usr/include&#39;.</p><p>&nbsp; - A String or CharSequence URI, for example &#39;file:/usr/include&#39;.</p><p>&nbsp; - A File instance.</p><p>&nbsp; - A URI or URL instance.</p><p><br/></p>','',0),(26,0,'<p><span style=\"font-size:14px;\">今天一时手贱 运行了 apt-get autoremove.</span></p><p><span style=\"font-size:14px;line-height:21px;\">然后系统把能删的安装包全删了。。欲哭无泪啊。</span></p>','',0),(29,0,'<p><span style=\"font-size:16px;\">step 1&nbsp;</span> </p><p><span style=\"font-size:16px;line-height:24px;\">在github 上创建一个空的仓库 点击 new repository。起名 Test（随便起个就好），选public。</span> </p><p><span style=\"font-size:16px;line-height:24px;\">复制仓库链接&nbsp;例如：<a href=\"https://github.com/Beyond1993/AWSweb.git\" target=\"_blank\">https://github.com/Beyond1993/AWSweb.git</a></span><img src=\"/Uploads/Editor/2016-04-25/571e047171678.png\" alt=\"\"/></p><p><span style=\"font-size:16px;line-height:24px;\">step2&nbsp;</span></p><p><span style=\"font-size:16px;line-height:24px;\">进入 要上传文件的目录</span> </p><p><span style=\"font-size:16px;line-height:24px;\">git init</span> </p><p><span style=\"font-size:16px;line-height:24px;\">git remote add origin&nbsp;<a href=\"https://github.com/Beyond1993/AWSweb.git\" target=\"_blank\">https://github.com/Beyond1993/AWSweb.git</a></span> </p><p><span style=\"font-size:16px;line-height:24px;\">git push origin master.</span> </p><p><br/></p><p>git status</p><p><br/></p><p>git stash 先把冲突文件存好</p><p>git pull --rebase origin master</p><p>git stash pop 再还原。</p><p><br/></p><p>git reset --hard HEAD</p><p>git pull</p>','',0),(30,0,'<p><span style=\"color:#323232;font-family:&#39;Century Gothic&#39;, &#39;Microsoft yahei&#39;;font-size:16px;line-height:25.6px;background-color:#FFFFFF;\"><span style=\"color:#323232;font-family:&#39;Century Gothic&#39;, &#39;Microsoft yahei&#39;;font-size:16px;line-height:28.8px;background-color:#FFFFFF;\">提示 “上传根目录不存在！请尝试手动创建:./Uploads/Editor</span></span> </p><p><span style=\"color:#323232;font-family:&#39;Century Gothic&#39;, &#39;Microsoft yahei&#39;;font-size:16px;line-height:25.6px;background-color:#FFFFFF;\">确实是文件夹权限的问题，给他一个EveryOne权限获取其他的操作权限，</span></p><p><span style=\"color:#323232;font-family:&#39;Century Gothic&#39;, &#39;Microsoft yahei&#39;;font-size:16px;line-height:25.6px;background-color:#FFFFFF;\"><br/></span></p><p><span style=\"font-size:16px;line-height:25.6px;background-color:#FFFFFF;\">不能插入代码：使用Ueditor（百度编辑器)&nbsp;</span></p><p><span style=\"font-size:16px;line-height:25.6px;background-color:#FFFFFF;\"><br/></span></p><p><span style=\"line-height: 25.6px; background-color: rgb(255, 255, 255);\">站点被关闭 ： 登陆一次后台</span></p>','',0),(31,0,'<p>\r\no<span style=\"font-size:16px;\">之前用hadoop 搭建伪分布模式，一直起不来5个进程，报错。</span> \r\n</p>\r\n<p>\r\no<span style=\"font-size:16px;\">今天用hadoop 跑 涛哥的PCA，又报错！相同的错，怒了，没办法，只有少侠重新来过了。</span> \r\n</p>\r\n<p>\r\no<span style=\"font-size:16px;\"><br />\r\n</span> \r\n</p>\r\n<p>\r\no<span style=\"font-size:16px;\">下载，解压：</span> \r\n</p>\r\n<p>\r\no<span style=\"font-size:16px;\">$ cd ~/softWare/<br />\r\n</span> \r\n</p>\r\n<p>\r\no<span style=\"font-size:16px;\">$ wget https://archive.apache.org/dist/hadoop/core/hadoop-2.4.0/hadoop-2.4.0.tar.gz</span> \r\n</p>\r\n<p>\r\no<span style=\"font-size:16px;\">$ tar xzvf hadoop­2.4.0.tar.gz<br />\r\n</span> \r\n</p>\r\n<p>\r\no<span style=\"font-size:16px;\">直接下载特别慢，但是可以用aws作为文件中转 共133M</span> \r\n</p>\r\n<p>\r\no<span style=\"font-size:16px;\"><br />\r\n</span> \r\n</p>\r\n<p>\r\no<span style=\"font-size:16px;line-height:24px;\">导入环境变量（要设好jdk)：</span> \r\n</p>\r\n<p>\r\no<span style=\"font-size:16px;line-height:24px;\"><br />\r\n</span> \r\n</p>\r\n<p>\r\no<span style=\"font-size:16px;\">export HADOOP_HOME=/home/wanye/softWare/hadoop-2.4.0</span><br />\r\n<span style=\"font-size:16px;\">export PATH=$PATH:$HADOOP_HOME/bin</span><br />\r\n<span style=\"font-size:16px;\"></span> \r\n</p>\r\n<p>\r\no<span style=\"font-size:16px;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\no<br />\r\n</p>\r\n<p>\r\no<span style=\"font-size:16px;\"><br />\r\n</span>\r\n</p>\r\n<p>\r\no<span style=\"font-size:16px;\">最后别忘了 source ~/.bashrc 使配置生效<br />\r\n</span> \r\n</p>\r\n<p>\r\no<span style=\"font-size:16px;\">\r\n<pre class=\"prettyprint lang-cpp\">\r\n</pre>\r\n最后我把/jre/lib/ext 里关于 mahout 的包全部拿出来了，就好了！ 所以在配置java 项目时，不要图方便把需要的包放入系统里，可能会有冲突。要单独配置，加环境变量</span>\r\n</p>','',0),(14,0,'自己用onethink 框架搭建了一个博客，自己的网站，自己掌握着代码。希望可以坚持下去吧！','',0),(15,0,'<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;月夜<br/></p><p><span style=\"font-size:16px;\">今夜鄜州月⑴，闺中只独看⑵。</span></p><p><br/></p><p><span style=\"font-size:16px;\">遥怜小儿女⑶，未解忆长安⑷。</span></p><p><br/></p><p><span style=\"font-size:16px;\">香雾云鬟湿⑸，清辉玉臂寒⑹．</span></p><p><br/></p><p><span style=\"font-size:16px;\">何时倚虚幌⑺，双照泪痕干⑻。</span></p><p><br/></p><p><br/></p><p><span style=\"font-size:16px;\">每次提到杜子美，杜工部，要么就是一副很忙的样子，要么就是忧国忧民的老头。可是这首《月夜》 让我们又认识到了，杜甫的另一面。</span></p><p><br/></p><p>写诗，写情诗，从诗经，到徐志摩，爱情，永远是诗歌的主题。见过那么多情诗，但这首诗，是那么的质朴，那么的纯真又令人感动，一语天然万古新，豪华落尽见真淳。<br/></p><p><br/></p><p><span style=\"font-size:16px;line-height:1.5;\">王步高先生曾说，这是天下第一等情诗。</span></p><p><br/></p><p><span style=\"font-size:16px;line-height:24px;\">难得之处在于写的 既忧思难忘，又心怀感动，幸福甜蜜。</span></p><p><br/></p><p><span style=\"font-size:16px;\"><br/></span><br/></p><p><br/></p><p><span style=\"font-size:16px;\">第一句：<span style=\"color:#333333;font-family:arial, 宋体, sans-serif;background-color:#FFFFFF;\">今夜鄜(<span style=\"font-size:14px;\">fū</span>)州月，闺中只独看。</span> 明明我思恋着我的妻子，确写成了妻子在思恋着我。</span></p><p><br/></p><p><br/></p>','',0),(69,0,'<p>回溯法．很多题都能通过回溯法至少给出一个解．</p><p>很喜欢九章回溯法的模板．</p><p>在for 循环里递归调用</p><p><br/></p><p>模板：</p><p>private void dfs() {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;if (condition) {<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result.add(new List);<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;retrun;<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;for (condition) {<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (conditions) {<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//去重<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list.add(＊＊)；<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dfs();</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list.remove(list.size() - 1);<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;}</p><p><br/></p><p>}</p><p><br/></p><p><br/></p><p>暴力搜索一个矩阵模板：</p><p><br/></p><p><br/></p><p><br/></p><p><br/></p>','',0),(70,0,'<p style=\"white-space: normal;\">19. Remove Nth Node From End of List.</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">24. Swap Node in Pairs&nbsp;</p><p style=\"white-space: normal;\">1-&gt;2-&gt;3-&gt;4 ==&gt; 2-&gt;1-&gt;4-&gt;3</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">这题简单又易错，和反转的题目类似．</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">在循环的一开始，就要保存next.</p><p style=\"white-space: normal;\"><img src=\"http://www.beyondfw.com/Uploads/Editor/2017-07-12/59659de2734eb.png\" title=\"link.png\"/></p><pre class=\"brush:java;toolbar:false\">while&nbsp;(&nbsp;cur&nbsp;!=&nbsp;null&nbsp;&amp;&amp;&nbsp;cur.next&nbsp;!=&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;next&nbsp;=&nbsp;cur.next;\r\n&nbsp;&nbsp;&nbsp;&nbsp;cur.next&nbsp;=&nbsp;next.next;&nbsp;//step1\r\n&nbsp;&nbsp;&nbsp;&nbsp;next.next&nbsp;=&nbsp;cur;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//step2\r\n&nbsp;&nbsp;&nbsp;&nbsp;prev.next&nbsp;=&nbsp;next;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//step3\r\n&nbsp;&nbsp;&nbsp;&nbsp;prev&nbsp;=&nbsp;cur;\r\n&nbsp;&nbsp;&nbsp;&nbsp;cur&nbsp;=&nbsp;cur.next;\r\n}</pre><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p><br/></p>','',0),(17,0,'<p>\r\no我想把aws上的数据 备份，以便之后快速恢复网站，用最简单的方法备份mysql数据：\r\n</p>\r\n<p>\r\no<br />\r\n</p>\r\n<p>\r\no<p style=\"font-family:verdana, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\no<strong>使用mysqldump备份一个数据库</strong>\r\no</p>\r\no<p style=\"font-family:verdana, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\no　　mysqldump 语法\r\no</p>\r\no<p style=\"font-family:verdana, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\no　　mysqldump -u username -p dbname table1 table2 ...-&gt; BackupName.sql\r\no</p>\r\no<p style=\"font-family:verdana, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\no<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\no</p>\r\no<p style=\"font-family:verdana, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\no<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dbname参数表示数据库的名称；</span>\r\no</p>\r\no<p style=\"font-family:verdana, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\no<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;table1和table2参数表示需要备份的表的名称，为空则整个数据库备份；</span>\r\no</p>\r\no<p style=\"font-family:verdana, sans-serif;font-size:13px;background-color:#FFFFFF;\">\r\no<span style=\"line-height:1.5;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BackupName.sql参数表设计备份文件的名称，文件名前面可以加上一个绝对路径。通常将数据库被分成一个后缀名为sql的文件；</span>\r\no</p>\r\n<pre>mysqldump -u root -p blog &gt; ./blogbackup.sql</pre>\r\n</p>','',0),(20,0,'<span style=\"color:#333333;font-family:arial;font-size:13px;line-height:20.02px;background-color:#FFFFFF;\">01<br />\r\n—– BEGIN LICENSE —–<br />\r\nAndrew Weber<br />\r\nSingle User License<br />\r\nEA7E-855605<br />\r\n813A03DD 5E4AD9E6 6C0EEB94 BC99798F<br />\r\n942194A6 02396E98 E62C9979 4BB979FE<br />\r\n91424C9D A45400BF F6747D88 2FB88078<br />\r\n90F5CC94 1CDC92DC 8457107A F151657B<br />\r\n1D22E383 A997F016 42397640 33F41CFC<br />\r\nE1D0AE85 A0BBD039 0E9C8D55 E1B89D5D<br />\r\n5CDB7036 E56DE1C0 EFCC0840 650CD3A6<br />\r\nB98FC99C 8FAC73EE D2B95564 DF450523<br />\r\n—— END LICENSE ——<br />\r\n<br />\r\n02<br />\r\n—– BEGIN LICENSE —–<br />\r\nK-20<br />\r\nSingle User License<br />\r\nEA7E-940129<br />\r\n3A099EC1 C0B5C7C5 33EBF0CF BE82FE3B<br />\r\nEAC2164A 4F8EC954 4E87F1E5 7E4E85D6<br />\r\nC5605DE6 DAB003B4 D60CA4D0 77CB1533<br />\r\n3C47F579 FB3E8476 EB3AA9A7 68C43CD9<br />\r\n8C60B563 80FE367D 8CAD14B3 54FB7A9F<br />\r\n4123FFC4 D63312BA 141AF702 F6BBA254<br />\r\nB094B9C0 FAA4B04C 06CC9AFC FD412671<br />\r\n82E3AEE0 0F0FAAA7 8FA773C9 383A9E18<br />\r\n—— END LICENSE ——<br />\r\n<br />\r\n03<br />\r\n—– BEGIN LICENSE —–<br />\r\nJ2TeaM<br />\r\n2 User License<br />\r\nEA7E-940282<br />\r\n45CB0D8F 09100037 7D1056EB A1DDC1A2<br />\r\n39C102C5 DF8D0BF0 FC3B1A94 4F2892B4<br />\r\n0AEE61BA 65758D3B 2EED551F A3E3478C<br />\r\nC1C0E04E CA4E4541 1FC1A2C1 3F5FB6DB<br />\r\nCFDA1551 51B05B5D 2D3C8CFE FA8B4285<br />\r\n051750E3 22D1422A 7AE3A8A1 3B4188AC<br />\r\n346372DA 37AA8ABA 6EB30E41 781BC81F<br />\r\nB5CA66E3 A09DBD3A 3FE85BBD 69893DBD<br />\r\n—— END LICENSE ——<br />\r\n</span>','',0),(32,0,'<p>这次跑我涛的PCA，用到了mahout 这个机器学习工具。</p><p>但每次跑必须要</p><p>mahout hadoop jar newPCA-team022-0.1-latest.jar &nbsp;originalMatrixData/testdatas.txt output tmpdir</p><p>可是 mahout 并没有hadoop 这个算法。所以觉的很奇怪。<br/></p><p><br/></p><p>运行：</p><p>$ hadoop jar newPCA-team022-0.1-latest.jar &nbsp;originalMatrixData/testdatas.txt output tmpdir</p><p>报错：Exception in thread &quot;main&quot; java.lang.NoClassDefFoundError: org/apache/mahout/math/Matrix</p><p><br/></p><p>编译通过，运行找不到类，应该是动态加载类找不到的问题。</p><p><br/></p><p>对于hadoop 来说，有以下解决方法：</p><p>一。直接把类扔到<span id=\"_baidu_bookmark_start_4\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_start_6\" style=\"display: none; line-height: 0px;\">‍</span>&nbsp;hadoophome/share/hadoop/common/lib 文件下，此方法有效，但要是每个节点都这样放就很麻烦。<span style=\"color: rgb(51, 51, 51); font-family: Helvetica, Tahoma, Arial, sans-serif; font-size: 14px; line-height: 24px;  background-color: rgb(245, 245, 245);\"><span id=\"_baidu_bookmark_end_5\" style=\"display: none; line-height: 0px;\">‍</span></span></p><p>二。</p><p>（1） 在运行脚本中添加classpath.</p><p>在$HADOOP_HOME/conf/hadoop_env.sh 或者$HADOOP_HOME/bin/hadoop-config.sh中添加：</p><p>export HADOOP_CLASSPATH=$HADOOP_HOME/my_jars</p><p>然后将你自己的jar包和第三方jar包分发到各个TaskTracker的HADOOP_CLASSPATH目录下（别忘了所有TaskTracker上的hadoop_env.sh和hadoop-config.sh均按以上方法添加HADOOP_CLASSPATH环境变量）</p><p>【注】hadoop_env.sh和hadoop-config.sh是所有hadoop运行脚本（start-all.sh, start-dfs.sh等）一定会引用的配置脚本，可以将一些最基本的环境变量或者配置参数加到这两个文件中。</p><p>三。</p><p>&nbsp;使用“-libjars“参数，支持这个功能，需要按照如下方式编写Hadoop程序：</p><p>public class MyHadoopJob extends Configured implements Tool {<br/></p><p>&nbsp;</p><p>&nbsp; &nbsp;public static class &nbsp;MapClass</p><p>&nbsp;</p><p>&nbsp; &nbsp; &nbsp; extends Mapper<longwritable, intwritable=\"\">{</longwritable,></p><p>&nbsp;</p><p>&nbsp; &nbsp; &nbsp; //your mapper</p><p>&nbsp;</p><p>&nbsp; &nbsp;}</p><p>&nbsp;</p><p>&nbsp; &nbsp;public static class &nbsp;Reduce</p><p>&nbsp;</p><p>&nbsp; &nbsp; &nbsp; extends &nbsp;Reducer<intpair, intwritable=\"\">{</intpair,></p><p>&nbsp;</p><p>&nbsp; &nbsp; &nbsp; //your reducer</p><p>&nbsp;</p><p>&nbsp; &nbsp;}</p><p>&nbsp;</p><p>//设定并读取应用程序相关的，自己定义的一些参数</p><p>&nbsp;</p><p>&nbsp; &nbsp;public int run(String[] args) &nbsp;throws Exception {</p><p>&nbsp;</p><p>&nbsp; &nbsp; &nbsp; if(args.length &lt; 2) {</p><p>&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;printUsage();</p><p>&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; return 2;</p><p>&nbsp;</p><p>&nbsp; &nbsp; }</p><p>&nbsp;</p><p>&nbsp; &nbsp;Job job = new Job(getConf());</p><p>&nbsp;</p><p>&nbsp; &nbsp;…......</p><p>&nbsp;</p><p>&nbsp; &nbsp;}</p><p>&nbsp;</p><p>&nbsp; &nbsp;//真正的main函数</p><p>&nbsp;</p><p>&nbsp; &nbsp;public static void main(String[] args) throws &nbsp;Exception{</p><p>&nbsp;</p><p>&nbsp; &nbsp; &nbsp; int &nbsp;res = ToolRunner.run(new Configuration(), new SleepJob(), args);</p><p>&nbsp;</p><p>&nbsp; &nbsp; &nbsp; System.exit(res);</p><p>&nbsp;</p><p>&nbsp; &nbsp;}</p><p>&nbsp;</p><p>}</p><p>运行作业：</p><p>#run_myjob.sh</p><p>bin/hadoop jar myjob.jar MyHadoopJob \\</p><p>-D mapred.job.name=MyHadoopJob \\</p><p>-D mapred.map.tasks=24 \\</p><p>-D mapred.mreduce.tasks=12 \\</p><p>-D mapred.input.dir=/test/input1,test/input2 \\</p><p>-D mapred.output.dir=/test/output \\</p><p>-libjars myjob.jar,third-party.jar</p><p>-my1 5 \\</p><p>-my2 china</p><p>运行./run_myjob.sh</p><p>其中 “-libjars“指定本地两个jar文件，Hadoop自动会把这两个文件分发到各个TaskTracker的临时工作目录下，用完后自动删除。</p><p>3. 解决方案比较</p><p>第一种方法过于笨拙，每次都要人工地将jar包分发到各个TaskTracker上，如果集群很大，非常耗时；第二种方法利用了Hadoop内部机制进行jar包分发，非常方便。实际上，在Hadoop example中，除了WordCount例子外，其他所有例子均采用了方案2的设计方法。</p><p><br/></p><p>四。可以尝试这段代码</p><ol start=\"1\" class=\"dp-j list-paddingleft-2\" style=\"font-size: 12px; line-height: 1.4em; margin-bottom: 1px; padding: 2px 0px; border: 1px solid rgb(209, 215, 220); color: rgb(43, 145, 175); font-family: Monaco, &#39;DejaVu Sans Mono&#39;, &#39;Bitstream Vera Sans Mono&#39;, Consolas, &#39;Courier New&#39;, monospace; white-space: normal; background-color: rgb(255, 255, 255);\"><li><p><span style=\"color: black;\"><span class=\"keyword\" style=\"color: rgb(127, 0, 85); font-weight: bold;\">if</span>&nbsp;(line.hasOption(<span class=\"string\" style=\"color: blue;\">&quot;libjars&quot;</span>))&nbsp;{&nbsp;&nbsp;</span></p></li><li><p><span style=\"color: black;\">&nbsp;&nbsp;conf.set(<span class=\"string\" style=\"color: blue;\">&quot;tmpjars&quot;</span>,&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;validateFiles(line.getOptionValue(<span class=\"string\" style=\"color: blue;\">&quot;libjars&quot;</span>),&nbsp;conf));&nbsp;&nbsp;</span></p></li><li><p><span style=\"color: black;\">&nbsp;&nbsp;<span class=\"comment\" style=\"color: rgb(0, 130, 0); padding: 0px; margin: 0px; width: auto; border: 0px;\">//setting&nbsp;libjars&nbsp;in&nbsp;client&nbsp;classpath</span>&nbsp;&nbsp;</span></p></li><li><p><span style=\"color: black;\">&nbsp;&nbsp;URL[]&nbsp;libjars&nbsp;=&nbsp;getLibJars(conf);&nbsp;&nbsp;</span></p></li><li><p><span style=\"color: black;\">&nbsp;&nbsp;<span class=\"keyword\" style=\"color: rgb(127, 0, 85); font-weight: bold;\">if</span>(libjars!=<span class=\"keyword\" style=\"color: rgb(127, 0, 85); font-weight: bold;\">null</span>&nbsp;&amp;&amp;&nbsp;libjars.length&gt;<span class=\"number\" style=\"color: rgb(192, 0, 0);\">0</span>)&nbsp;{&nbsp;&nbsp;</span></p></li><li><p><span style=\"color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;conf.setClassLoader(<span class=\"keyword\" style=\"color: rgb(127, 0, 85); font-weight: bold;\">new</span>&nbsp;URLClassLoader(libjars,&nbsp;conf.getClassLoader()));&nbsp;&nbsp;</span></p></li><li><p><span style=\"color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;Thread.currentThread().setContextClassLoader(&nbsp;&nbsp;</span></p></li><li><p><span style=\"color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class=\"keyword\" style=\"color: rgb(127, 0, 85); font-weight: bold;\">new</span>&nbsp;URLClassLoader(libjars,&nbsp;&nbsp;&nbsp;</span></p></li><li><p><span style=\"color: black;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Thread.currentThread().getContextClassLoader()));&nbsp;&nbsp;</span></p></li><li><p><span style=\"color: black;\">&nbsp;&nbsp;}&nbsp;&nbsp;</span></p></li><li><p><span style=\"color: black;\">}</span></p></li></ol><p>参考链接：<a href=\"http://dongxicheng.org/mapreduce/run-hadoop-job-problems/\" target=\"_self\" title=\"\">http://dongxicheng.org/mapreduce/run-hadoop-job-problems/</a></p>','',0),(33,0,'<p>java 在运行时找不到类</p><p><br/></p><p>我之前都是直接把缺失的类放到 /jre/lib/ext 目录下。但这并不是一个好的解决方案</p><p><br/></p><p>-classpath&nbsp;</p><p>&nbsp;</p><p>javac &nbsp;-classpath 参数 和写环境 变量 $CLASSPATH 时 ，要写出path/XXX.jar 全名，只写路径还是找不到。</p><p>因为 -classpath 和 $CLASSPATH 都是 找的 .class 文件 ，而 .jar 可以看做是一个文件夹。</p>','',0),(34,0,'<p>aws</p>','',0),(35,0,'<p>ubuntu 16.04</p><p><br/></p><p>一. 查看maven 版本</p><p>$ mvn --version</p><p><br/></p><p>sudo apt-get install maven<br/></p><p><br/></p><p>maven 要求是 3.0以上</p><p><br/></p><p>二. 创建标准化java项目</p><p><br/></p><p><span style=\"color: rgb(77, 77, 79); word-wrap: break-word; font-size: 9.75pt;\"><span id=\"_baidu_bookmark_start_1\" style=\"display: none; line-height: 0px;\">‍</span></span><span id=\"_baidu_bookmark_start_3\" style=\"display: none; line-height: 0px;\">‍</span>1). 用Maven创建一个标准化的Java项目</p><p><span style=\"font-size: 16px;\">$ cd workSpace</span></p><p><span style=\"font-family: Calibri; word-wrap: break-word; font-size: 16px;\">$ mvn archetype:generate -DarchetypeGroupId=org.apache.maven.archetypes -DgroupId=org.pca -DartifactId=myMahout -DpackageName=org.conan.mymahout -Dversion=1.0-SNAPSHOT &nbsp;-DinteractiveMode=false</span></p><p><span style=\"font-family: Calibri; word-wrap: break-word; font-size: 16px;\">$ cd myMahout</span></p><p><span style=\"font-family: Calibri; word-wrap: break-word; font-size: 16px;\">$ mvn clean install</span></p><p><span id=\"_baidu_bookmark_end_4\" style=\"display: none; line-height: 0px;\">‍</span><span id=\"_baidu_bookmark_end_2\" style=\"display: none; line-height: 0px;\">‍</span><br/></p><p>archetype:</p><p><span style=\"font-family: Calibri;\">-DarchetypeGroupId:</span></p><p><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\">-DgroupId:</span></span><span style=\"color: rgb(102, 102, 102); font-family: Arial, Helvetica, sans-serif; font-size: 14px; line-height: 35px; background-color: rgb(255, 255, 255);\">&quot;groupId”属性是一个组织或者项目（比如开源项目）的唯一ID。大多数情况下，你会使用项目的java包的根名称作为group ID。例如，对于我自己的Java网络爬虫项目，我会使用com.jenkov作为group ID。如果这个项目是一个由很多独立的贡献者组成的开源项目，也许选择与项目相关的名称作为group ID，比选择与我的公司相关的名称名作为group ID要合理地多。因此，选择com.javawebcrawler作为group ID</span></p><p><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\">-DartifactId:<span style=\"color: rgb(102, 102, 102); font-family: Arial, Helvetica, sans-serif; font-size: 14px; line-height: 35px;  background-color: rgb(255, 255, 255);\">包含你正在构建的项目的名称.</span></span></span></span></p><p><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\">-DpackageName:</span></span></span></span></p><p><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\">-Dversion:</span></span></span></span></span></p><p><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\">-DinteractiveMode:</span></span></span></span></span></span></p><p><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\"><br/></span></span></span></span></span></span></p><pre class=\"brush:xml;toolbar:false\">&nbsp;&nbsp;4.0.0&nbsp;&nbsp;org.conan.mymahout&nbsp;&nbsp;myMahout&nbsp;&nbsp;jar&nbsp;&nbsp;1.0-SNAPSHOT&nbsp;&nbsp;myMahout&nbsp;&nbsp;http://maven.apache.org&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;UTF-8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0.10.0&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;junit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;junit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.8.1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;test&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;org.apache.mahout&nbsp;&nbsp;&nbsp;&nbsp;mahout-math&nbsp;&nbsp;&nbsp;&nbsp;${mahout.version}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;org.apache.mahout&nbsp;&nbsp;&nbsp;&nbsp;mahout-core&nbsp;&nbsp;&nbsp;&nbsp;0.9&nbsp;&nbsp;&nbsp;&nbsp;org.apache.mahout&nbsp;&nbsp;&nbsp;&nbsp;mahout-hdfs&nbsp;&nbsp;&nbsp;&nbsp;${mahout.version}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;org.apache.hadoop&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hadoop-client&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.6.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;org.apache.hadoop&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hadoop-common&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.6.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;org.apache.hadoop&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hadoop-hdfs&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.6.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;org.apache.maven.plugins&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maven-compiler-plugin&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.7</pre><p><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\"><span style=\"font-family: Calibri;\"></span></span></span></span></span></span><br/></p><p>$ mvn clean install</p><p>$ mvn compile</p><p><br/></p><p><br/></p><p>mvn clean package -pl hadoop -DskipTests</p>','',0),(36,0,'<p>1.</p><p>ls -lh filename 以 K M G 查看文件大小</p>','',0),(38,0,'<p>如果写日记比较难以坚持的话，那就坚持每周写一个周记好了。</p><p>事情越多的时候，越要有个计划。但也要适当的放空自己。提高效率。</p><p><br/></p><p>https://healthservices.andrew.cmu.edu/login_directory.aspx</p><p>wodeboke@123</p>','',0),(39,0,'<p>无符号数（unsigned）基于传统二进制表示，表示大于等于0的数字</p><p>补码（two’s-complement）编码是表示有符号整数的最常见方式，可以为正或负</p><p>浮点数（float-point）编码是表示实数的科学计数法的以二进制为基数的版本。</p><p>注：原码，反码，补码，移码 简单求解</p><p>原码：</p><p>如果机器字长为n，那么一个数的原码就是一个n位的二进制数有符号数，其中最高位为符号位：正数为0，负数为1。剩下的n-1位为数值位，表示真值的绝对值。凡不足n-1位的，小数在最低位右边加零；整数则在最高位左边加零来补足n-1位。</p><p>例如：X = +101011，[X]原 = 0010 1011；X = -101011，[X]原 = 1010 1011。注意：正数的原、反、补码都一样。0的原码跟反码都有两个，因为这里0被分为+0和-0。</p><p>反码：知道了原码，那么你只需要具备区分0跟1的能力就可以轻松求出反码。因为</p><p>反码就是在原码的基础上，符号位不变，其他位按位取反（就是0变1，1变0）就可以了。 例如：X = -101011，[X]原 = 1010 1011，[X]反 = 1101 0100。</p><p>补码：补码也非常简单，就是在反码的基础上，按照正常的加法运算加1。 例如：X = -101011，[X]原 = 1010 1011 ，[X]反 = 1101 0100，[X]补 = 1101 0101。 也可以在原码的基础上，符号位不变，从右至左遇到第一个1以前（包括这个1）什么都不变，以后按位取反即可。</p><p>[X]原 = 1000 0110，[X]补 = 1111 1010 注意：0的补码是唯一的，如果机器字长为8，那么[0]补=0000 0000。</p><p>补码和原码的互相转换都是 符号位不变，其他位取反，末位加一。 因为是互补的，补码的补码就是原码</p><p>移码：移码最简单了，不管正负数，只要将其补码的符号位取反即可。 例如：X = -101011，[X]原 = 1010 1011，[X]反 = 1101 0100，[X]补 = 1101 0101，[X]移 = 0101 0101</p><p>Int 会溢出但结果保持一致。</p><p>Float 不会溢出，但结果不一致。</p><p>书上两个列子并没有理解。</p><p>2.1信息存储</p><p>一个byte 有 8 bit作为最小可寻址的存储器单位。每个字节都有唯一数字表示称为地址。</p><p>2.1.1 十六进制表示法（hexadecimal,简写为hex）</p><p>在C语言中，以0x 或 0X 开头的数字常量表示16进制的值，字符’A’~’F’可大写，可小写，可大小写混合.</p><p>小技巧：当值x是2的非负整数n次幂时，x=2^n, 可以将n = i+4j, 0&lt;= i&lt;=3,则该十六进制数的最高位是2^i, 后面跟j个0。 如 512 = 2^9， 9 = 1+4*2，十六进制为 0x200.</p><p>2.1.2字(word)</p><p>字长（word size） 指明整数和指针数据的nominal size.</p><p>每一个虚拟地址都是以字来编码的，字长决定了虚拟地址空间的最大大小。</p><p>字长为w, 虚拟地址寻址范围 0~2^w-1, 一次最多访问2^w个字节。</p><p>32位机字长为4, 64位机字长为8</p><p>(字长是地址的长度，决定了地址所能寻址的范围)</p><p>2.1.3 数据大小</p><p>Long int 是全字长，所以32位机为 4 byte， 64位机是 8 byte</p><p>Long long int 是 64位， 所以都是 8 byte.</p><p>一个指针的长度 = 字长 （因为指针就是用来寻址的）</p><p>当程序员声明int类型对象存储指针时，在32位机能正常工作，在64位机可能会出问题（因为int 是 4 byte, 指针变成了 8byte）</p><p>2.1.4 寻址和字节顺序</p><p>大端，小端</p><p>2.1.5 表示字符串</p><p>ASCII 码 America Standard Code for Information Interchange，</p><p>ASCII码有7位码和8位码两种形式。ASCII码划分为两个集合：128个字符的标准ASCII码（7位）和附加的128个字符的扩充和ASCII码（8位）。</p><p>Unicode 使用32位表示字符，4 byte 过于浪费空间</p><p>所以有些代替编码 将常用字符编码为1或2个byte,不常用的多一些字节</p><p>但是UTF-8 每个字符编码为一个字节，和ASCII码保持了一致</p><p>UTF-8：</p><p>UTF-8 使用一至四个字节为每个字符编码。128 个 ASCII 字符（Unicode 范围由 U+0000 至 U+007F）只需一个字节，带有变音符号的拉丁文、希腊文、西里尔字母、亚美尼亚语、希伯来文、阿拉伯文、叙利亚文及马尔代夫语（Unicode 范围由 U+0080 至 U+07FF）需要二个字节，其他基本多文种平面（BMP）中的字符（CJK属于此类-Qieqie注）使用三个字节，其他 Unicode 辅助平面的字符使用四字节编码。</p><p>常规来看，中文汉字在utf-8中到底占几个字节，一般是3个字节，最常见的编码方式是1110xxxx 10xxxxxx 10xxxxxx</p><p>GB2312 中每个字符由两个字节表示，然后发现GB2312 不够用，又推出了GBK，全称《汉字内码扩展规范》</p><p>2.1.6 表示代码</p><p>同样代码不同机器有二进制机器码</p><p>二进制机器码一般很少兼容</p><p>2.1.7 布尔代数简介</p><p>布尔运算 基本操作 与或非</p><p>布尔运算 &amp; | ~ ^</p><p>逻辑运算 AND OR NOT XOR</p><p>命题逻辑 ∧ ∨ ┐</p><p>布尔运算的数律</p><p>结合律：</p><p>交换律：</p><p>分布律：</p><p>异或（对称差）</p><p>A⊕B=A&#39;B + AB&#39;</p><p>具体见笔记本数学</p><p>此处有题目一 bitXor()</p><p>运用德摩根定律 &nbsp;可以 将 与 非 互相转换</p><p>a^b = (a|b)&amp;(~a|~b)= ~(~a&amp;~b)&amp;~(a&amp;b) = (a&amp;~b)|(~a&amp;b)</p><p>2.1.8 C语言中的位级运算</p><p>&amp;|～^ 按位 与，或，非，异或，四种布尔运算能运用在任何整型变量</p><p>位级运算的以个常见用法就是实现掩码运算.</p><p>异或 相同为0，不同为1</p><p>简单理解就是不进位加法，如1+1=0，,0+0=0,1+0=1。</p><p>性质</p><p>1、交换律 x^y = y^x</p><p>2、结合律（即(x^y)^z == x^(y^z)）</p><p>3、对于任何数x，都有x^x=0，x^0=x</p><p>4、自反性 x^ y ^ y = x ^ &nbsp;0 = x</p><p>注：程序员面试宝典上有一题，仅适用异或操作交换两个int变量的值,不使用额外空间, 运用x^x = 0 这一特性</p><p>void swap(int *x, int *y){</p><p>&nbsp; &nbsp; *y = *x ^ *y;</p><p>&nbsp; &nbsp; *x = *x ^ *y;// = *x^(*x^*y) = (*x^*x)^*y = 0^*y = *y</p><p>&nbsp; &nbsp; *y = *x ^ *y;// = *y^(*x^*y) = (*y^*y)^*x = 0^*x = *x</p><p>}</p><p>2.1.9 C语言中的逻辑运算</p><p>逻辑运算符 || &amp;&amp; ! 和命题逻辑里OR,AND，NOT 对应，很容易与位级运算符混淆</p><p>逻辑运算认为所有非零参数true,参数0 为false,结果只返回1和0</p><p>位级运算只有在参数被限值成1或0时，才与逻辑运算符有相同功能</p><p>逻辑运算符 第一参数能确定表达式的值时，就不会判断后面的参数了，所有条件判断里的条件顺序也是有讲究的。</p><p>2.1.10 C语言中的移位运算</p><p>左移 &lt;&lt; 丢弃高位，右端补零。 又结合律 x&lt;&lt;j&lt;&lt;k &lt;=&gt; (x&lt;&lt;j)&lt;&lt;k</p><p>右移 &gt;&gt;</p><p>|---逻辑右移，丢弃高位，空位补零，</p><p>|---算数右移，丢弃高位，空位补操作数最高位。</p><p>2.2 整数表示</p><p>2.2.1 整数数据类型</p><p>有符号整数的取值范围 -2^(bits-1) ~ （2^bits ）-1</p><p>符号位占了一位，0占了一位，所以正数的取值的绝对值比负数少一位。</p><p>无符号 0 ~ （2^bits）-1</p><p>2,2,2 无符号数的编码</p><p>双射</p><p>2,2,3 补码编码</p><p>我擦。。。。补码直接对应于10进制数，不用把他转为原码！！</p><p>补码，原码，反码都是表示有符号数的一种方式。</p><p>但是原码和补码都有一种奇怪的属性，[00…0] 都为 +0，</p><p>-0 在原码中[10…0],在反码中[11…1]</p><p>但在补码中 +0,-0 均为[00…0]</p><p>几乎现代所有机器均使用补码，反码几乎不用，在浮点数中有使用原码编码。</p><p>此处有题，是否是最小的补码 isTmin [10…0]</p><p>tmin : 1&lt;&lt;31</p><p>isTmin: !(x+x)&amp;!!(x)</p><p>编程小技巧:使用双感叹号!!，将非0值转为1,0继续保持为0。</p><p>http://www.cnblogs.com/organic/archive/2015/12/06/5023038.html</p><p>http://www.zybang.com/question/23ea81821a0ff434453509053fb75458.html</p><p>http://zhidao.baidu.com/link?url=IIRtgeHXW-oj8FyFxQVYwy_cQ00Rui3yuKwXnF7KKny8DDTBFElUicKs058GRUIJJg4F4jWQbgfJnXoojQug7_</p><p>http://blog.csdn.net/tzh476/article/details/51284938</p><p>http://blog.csdn.net/kqzxcmh/article/details/11845165&nbsp;</p><p><br/></p>','',0),(52,0,'<p>字符串： 是一个一种数据类型，也是刷题的一个大类，难度从easy 到 hard 不等。</p><p>其中包含了，链表，数组，回溯，递归，动态规划等等数据结构和算法，包罗万象，变化复杂。</p><p style=\"white-space: normal;\">字符串在面试题中，大部分会涉及到整个串和小串。</p><p style=\"white-space: normal;\">这时候的子串窗口的方法就格外有用。</p><p>其中窗口的概念是解题的关键。<br/></p><p><br/></p><p>此类题的通解：</p><p style=\"white-space: normal;\">第一步：先取到这样第一个窗口<br/></p><p style=\"white-space: normal;\">第二步：在对窗口里的内容操作。</p><p><br/></p><p>3&nbsp;<span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>Longest Substring Without Repeating Characters<span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>22.5%&nbsp;<span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>Medium</p><p>最长不重复字符的子串：</p><p><br/></p><p>这题的标签是：string , two point, &nbsp;hash table</p><p><br/></p><p><br/></p><p>这里的双指针法，其实叫窗口法更为贴切，这里取相邻两个字符间的字符串为一个窗口。</p><p><br/></p><p>以&quot;<span style=\"font-family:&#39;Microsoft YaHei&#39;, simsun, &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;font-size:14px;\">tmabmzuxt&quot; 为例：</span></p><p><span style=\"font-family:&#39;Microsoft YaHei&#39;, simsun, &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;font-size:14px;\"><br/></span></p><p><span style=\"font-family:&#39;Microsoft YaHei&#39;, simsun, &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;font-size:14px;\">第一个取到的窗口应是mabm,</span></p><p><font face=\"Microsoft YaHei, simsun, Helvetica Neue, Arial, Helvetica, sans-serif\"><span style=\"font-size: 14px;\">再这个窗口里，begin 到第一个m 就停止，所以长度是3.</span></font></p><p><br/></p><p>口诀：</p><p>&nbsp; &nbsp; &nbsp;最长不重复子串长度</p><p>end &nbsp; 向前进 ，一直到尽头。</p><p>一路设成true. length步步有，</p><p>遇上同字符， &nbsp; Begin向前走，</p><p>相同就停手， &nbsp; 路上还原否。</p><p><br/></p>','',0),(40,0,'<p>刷leetCode，不能只刷一遍accepted 就 可以，最重要的是思路，思路。</p><p>网上的解析过于零散，也没啥针对性，很多甚至就是copy了事。</p><p>下定决心，将leetCode作为我技术笔记的开始。</p><p><br/></p><p>接下来的日子里，我以50题，100题，150题作为一小阶段。主要记录解题思路，按知识点串讲。</p><p><br/></p><p><br/></p>','',0),(41,0,'<p>leetCode 回溯小结<br clear=\"none\"/>关于回溯。在leetCode前150题里出现了21题<br clear=\"none\"/>前100题里出现了18题<br clear=\"none\"/>前50题里出现了9题 10 17 22 37 39 40 44 46 47</p><p>47	Permutations II &nbsp;28.5%	Medium<br/>46	Permutations 36.6%	Medium<br/>44	Wildcard Matching	17.8%	Hard<br/>40	Combination Sum II	28.2%	Medium<br/>39	Combination Sum	31.7%	Medium<br/>37	Sudoku Solver	25.5%	Hard<br/>22	Generate Parentheses	37.9%	Medium<br/>17	Letter Combinations of a Phone Number 29.4%	Medium<br/>10	Regular Expression Matching 22.3%	Hard<br data-mce-bogus=\"1\"/></p><p><br clear=\"none\"/>几乎占了20%，说明了此题型的重要程度。而且难度全部是medium和hard。<br clear=\"none\"/><br clear=\"none\"/>最经典的就是51，52题N-Queen问题了。（分析详见印象笔记）<br clear=\"none\"/><br clear=\"none\"/>回溯法，试用于遍历整个数据集来获得正确答案。<br clear=\"none\"/>一般先构造一个数据集，再往前探索，符合就可以继续往前走，不符合条件立即回退，或者到最后一层回退。<br clear=\"none\"/>其中向前走就是把下一层的所有可能性全部扫一遍。<br clear=\"none\"/><br clear=\"none\"/>回溯一般有两种解法。迭代和递归。<br clear=\"none\"/>（迭代和递归的转化桥梁，一般是栈，其实递归不也就是内部的栈实现的嘛）<br clear=\"none\"/><br clear=\"none\"/>先掌握递归的吧，因为递归简单。<br clear=\"none\"/>最典型的例子就是：排列组合46 Permutations<br clear=\"none\"/>void perm(vector&lt;int&gt; &amp;num, int level){<br clear=\"none\"/>if( level == N-1){<br clear=\"none\"/>ret.push_back(num);<br clear=\"none\"/>}<br clear=\"none\"/><br clear=\"none\"/>for(int j = level; j &lt; N; j++){<br clear=\"none\"/>swap(num[level], num[j]);// 交换<br clear=\"none\"/>perm(num, level + 1); //向前一步探索<br clear=\"none\"/>swap(num[j], num[level]);//回来<br clear=\"none\"/>}<br clear=\"none\"/>}<br clear=\"none\"/><br clear=\"none\"/>Now we study 39. Combination Sum<br clear=\"none\"/>There is a array, and a target, find all solutions whose sum is target.<br clear=\"none\"/>For example, given candidate set [2, 3, 6, 7] and target 7,&nbsp;<br clear=\"none\"/>All numbers and target are positive<br clear=\"none\"/>Recursive:<br clear=\"none\"/>同样是递归，判断条件千差万别。<br clear=\"none\"/><br clear=\"none\"/><br clear=\"none\"/>仔细思考回溯，迭代，递归，和二叉树DFS(深度优先搜索)的关系<br clear=\"none\"/><br clear=\"none\"/>https://leetcode.com/submissions/detail/64962974/<br clear=\"none\"/>这个答案超时了。。<br clear=\"none\"/>主要为了去重，对中间结果使用了sort, find 。其实那个level 变量是无用的。<br clear=\"none\"/><br clear=\"none\"/>仔细思考这个问题：比如 2,3,6,7 求 7<br clear=\"none\"/>2 的下一层遍历 2,3,6,7<br clear=\"none\"/>其实3的下一层，只要遍历3,6,7 就可以去重了，此时3可以是重复的<br clear=\"none\"/><br clear=\"none\"/>AC：<br clear=\"none\"/>https://leetcode.com/submissions/detail/64966153/<br clear=\"none\"/>但是才打败了4%的，需要改进<br clear=\"none\"/>回溯法，结合剪枝，结合二叉树<br clear=\"none\"/>回溯，剪枝，是一种编程思想。<br clear=\"none\"/>二叉树是具体的数据结构<br clear=\"none\"/></p><p><br/></p>','',0),(56,0,'<p>1<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>Two Sum &nbsp; <span class=\"Apple-tab-span\" style=\"white-space: pre;\">		</span>33.8%<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span></p><p>找出两个和为target的，下标组合</p><p>解法一:用一个map, key 是元素值, value 是下标．</p><p>解法二：先排序，再通过前后两指针来找出下标．</p><p><br/></p><p>2<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Add Two Numbers &nbsp; <span class=\"Apple-tab-span\" style=\"white-space: pre;\">		</span>27.5%<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span></p><p>两个链表相加．</p><p>int sum = ((l2 == null) ? 0 : l2.val ) + ((l1 == null) ? 0 : l1.val) + carry;</p><p></p><p>3 &nbsp; &nbsp;Longest Substring Without Repeating Characters &nbsp; <span class=\"Apple-tab-span\" style=\"white-space: pre;\">		</span>24.2%<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span></p><p>不包含重复字符的最长子串．</p><p>窗口指针．一前一后往后走．<br/></p><p><br/></p><p>窗口指针模板：</p><p><br/></p><p>4<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Median of Two Sorted Arrays &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>21.5%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>5<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Longest Palindromic Substring &nbsp; &nbsp;<span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>25.1%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>6<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>ZigZag Conversion &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>26.6%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>7<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Reverse Integer &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>24.3%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>8<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>String to Integer (atoi) &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>14.0%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>9<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Palindrome Number &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>35.1%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>10<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Regular Expression Matching &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>24.0%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>11<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Container With Most Water &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>36.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>12<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Integer to Roman &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>44.3%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>13<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Roman to Integer &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>45.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>14<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Longest Common Prefix &nbsp; &nbsp;<span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>31.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>15<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>3Sum &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>21.6%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>16<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>3Sum Closest &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>31.0%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>17<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Letter Combinations of a Phone Number &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>34.1%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>18<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>4Sum &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>26.5%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>19<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Remove Nth Node From End of List &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>33.2%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>20<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Valid Parentheses &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>33.2%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>21<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Merge Two Sorted Lists &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>39.0%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>22<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Generate Parentheses &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>44.3%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>23<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Merge k Sorted Lists &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>27.0%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>24<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Swap Nodes in Pairs &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>38.1%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>25<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Reverse Nodes in k-Group &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>30.5%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>26<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Remove Duplicates from Sorted Array &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>35.5%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>27<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Remove Element &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>38.7%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>28<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Implement strStr() &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>27.9%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>29<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Divide Two Integers &nbsp; &nbsp;<span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>16.0%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>30<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Substring with Concatenation of All Words &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>21.9%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>31<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Next Permutation &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>28.7%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>32<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Longest Valid Parentheses &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>23.0%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>33<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Search in Rotated Sorted Array &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>32.1%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>34<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Search for a Range &nbsp; &nbsp;<span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>31.3%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>35<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Search Insert Position &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>39.6%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>36<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Valid Sudoku &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>35.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>37<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Sudoku Solver &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>29.8%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>38<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Count and Say &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>34.2%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>39<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Combination Sum &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>38.0%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>40<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Combination Sum II &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>33.3%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>41<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>First Missing Positive &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>25.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>42<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Trapping Rain Water &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>36.5%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>43<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Multiply Strings &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>26.9%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>44<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Wildcard Matching &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>19.9%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>45<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Jump Game II &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>26.1%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>46<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Permutations &nbsp; &nbsp;<span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>43.1%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>47<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Permutations II &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>32.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>48<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Rotate Image &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>38.3%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>49<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Group Anagrams &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>34.1%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>50<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Pow(x, n) &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>26.5%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>51<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>N-Queens &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>30.6%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>52<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>N-Queens II &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>44.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>53<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Maximum Subarray &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>39.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>54<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Spiral Matrix &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>25.7%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>55<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Jump Game &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>29.5%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>56<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Merge Intervals &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>29.7%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>57<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Insert Interval &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>27.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>58<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Length of Last Word &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>31.7%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>59<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Spiral Matrix II &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>39.3%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>60<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Permutation Sequence &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>28.2%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>61<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Rotate List &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>24.3%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>62<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Unique Paths &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>40.7%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>63<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Unique Paths II &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>31.5%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>64<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Minimum Path Sum &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>38.2%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>65<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Valid Number &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>12.7%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>66<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Plus One &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>38.3%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>67<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Add Binary &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>32.1%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>68<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Text Justification &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>18.9%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>69<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Sqrt(x) &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>27.7%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>70<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Climbing Stairs &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>39.7%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>71<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Simplify Path &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>25.0%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>72<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Edit Distance &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>31.5%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>73<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Set Matrix Zeroes &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>35.8%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>74<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Search a 2D Matrix &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>35.2%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>75<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Sort Colors &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>37.7%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>76<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Minimum Window Substring &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>25.0%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>77<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Combinations &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>39.3%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>78<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Subsets &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>39.8%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>79<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Word Search &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>26.5%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>80<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Remove Duplicates from Sorted Array II &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>35.8%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>81<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Search in Rotated Sorted Array II &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>32.8%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>82<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Remove Duplicates from Sorted List II &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>29.3%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>83<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Remove Duplicates from Sorted List &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>39.7%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>84<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Largest Rectangle in Histogram &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>26.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>85<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Maximal Rectangle &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>27.5%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>86<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Partition List &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>32.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>87<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Scramble String &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>28.9%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>88<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Merge Sorted Array &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>31.9%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>89<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Gray Code &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>40.8%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>90<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Subsets II &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>35.7%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>91<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Decode Ways &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>19.5%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>92<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Reverse Linked List II &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>30.5%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>93<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Restore IP Addresses &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>27.0%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>94<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Binary Tree Inorder Traversal &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>46.1%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>95<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Unique Binary Search Trees II &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>31.2%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>96<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Unique Binary Search Trees &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>40.7%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>97<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Interleaving String &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>24.5%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>98<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Validate Binary Search Tree &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>23.1%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>99<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Recover Binary Search Tree &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>29.7%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>100<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Same Tree &nbsp; <span class=\"Apple-tab-span\" style=\"white-space: pre;\">		</span>46.3%<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span></p><p><br/></p>','',0),(57,0,'<p>动态规划问题之所以难，是因为他的抽象性，其更接近于计算机思维，而不是直观的逻辑思维．</p><p><br/></p><p>１.1 动态规划入门 01 背包问题．</p><p><br/></p><p><a href=\"http://blog.csdn.net/mu399/article/details/7722810\" target=\"_self\" title=\"01背包\">http://blog.csdn.net/mu399/article/details/7722810</a></p><p><br/></p><p><br/></p><p>01 背包是最基础也是最重要的背包问题，完全背包和多重背包问题都能转化成０，１背包来解决．</p><p><br/></p><p>有Ｎ件物品，总承重为W的背包, 第ｉ件物品的重量是Wi, 价值是Vi. 求怎么放这些物品价值最大．<br/></p><p><br/></p><p>基本思路：二维数组 F[i][w]&nbsp;</p><p>表示前ｉ个物品，放入背包总承重为w的最大价值．</p><p>本质：第i 个物品放不放的问题</p><p><br/></p><p>放： 价值为 f[i-1][w - Wi] + Vi， 往回找到w-Wi 列的值．</p><p>不放: 价值为 f[i-1][w]</p><p><br/></p><p><br/></p><p>状态转移方程：</p><p>f[i][w] = max{ f[i-1][w], f[i-1][ w - Wi] + Vi;</p><p><br/></p><p>空间复杂度优化到O(w)， 用一维数组．</p><p><br/></p><p>恰好装满背包： F[0] &nbsp;初始化为 0, 其他 F[1..V] 初始化为 −∞</p><p>不要求装满背包： 全部初始化为０</p><p>&nbsp;</p><p>1.2 完全背包问题</p><p>每种物品的数量是限的．</p><p>最简单思路： 转化为每种物品取⌊V /Ci⌋个．</p><p><br/></p><p>1.3 多重背包问题．</p><p>多重背包问题是每个物品个数限制是Mi 个， 同样可以拆分成 Mi 个等重，等值的物品，这样就可以转换成0,1 背包问题．</p><p><br/></p><p>1.4 组合背包问题</p><p>这是我自己想出来的背包问题．使得拿出的物品价值刚好为一个目标值．共有多少种解法．</p><p><br/></p><p><br/></p><p>变种题：找零钱． target sum, leetcode&nbsp;416</p><p><br/></p><p>其实大多数情况下，动态规划的问题都能通过回溯法来解决．面试中可以先提出回溯的解法,再通过动态规划来优化. 但是递归的时间复杂度往往是指数级别的．</p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><br/></p>','',0),(54,0,'<p>实习期自我总结，从实习培养目标，计划及完成情况进行总结。</p><p><br/></p><p>不知不觉两个月很快就过去了，感学华为公司给我了这次宝贵的第一份实习经历，如同初恋一般紧张又甜蜜。</p><p><br/></p><p>本次实习我主要 学习mongoDB 分布式数据库的处理，</p><p>我看完了mongoDB 的官方文档。实现了spring ＋　mongoDB 小型系统。<br/></p><p><br/></p><p>模拟实现了二阶段提交。但是并没有将其运用在实际的工程中。</p><p><br/></p><p>对分布式数据的事务，有了更深刻的理解，更深刻理解面向对象思想在编程中的运用。</p><p><br/></p><p><br/></p><p><br/></p><p style=\"margin-top: 8px; margin-bottom: 8px; padding: 0px; border: 0px; list-style: none; word-wrap: break-word; word-break: break-all; line-height: 22.5px; white-space: normal; letter-spacing: 0.5px; font-size: 12.5px; color: rgb(51, 51, 51); font-family: Verdana, sans-serif, 宋体; text-indent: 2em; background-color: rgb(255, 255, 255);\">1，协调者出错，参与者也出错；（二阶段提交的唯一弊端）</p><p style=\"margin-top: 8px; margin-bottom: 8px; padding: 0px; border: 0px; list-style: none; word-wrap: break-word; word-break: break-all; line-height: 22.5px; white-space: normal; letter-spacing: 0.5px; font-size: 12.5px; color: rgb(51, 51, 51); font-family: Verdana, sans-serif, 宋体; text-indent: 2em; background-color: rgb(255, 255, 255);\">2，协调者出错，参与者不出错；（new 一个新协调者）</p><p style=\"margin-top: 8px; margin-bottom: 8px; padding: 0px; border: 0px; list-style: none; word-wrap: break-word; word-break: break-all; line-height: 22.5px; white-space: normal; letter-spacing: 0.5px; font-size: 12.5px; color: rgb(51, 51, 51); font-family: Verdana, sans-serif, 宋体; text-indent: 2em; background-color: rgb(255, 255, 255);\">3，协调者不出错，参与者出错；（二阶段解决，参与者返回失败）</p><p><br/></p><p>mongoDB 性能优化，单文档，二阶段， 三阶段提交， 工作队列，日志系统，版本控制。</p><p><br/></p><p>二阶段：协调者向参与者询问是否能执行操作，若参与节点同意则协调者发送commit， 完成事务，若参与节点返回失败，则协调者发送回滚信息。</p><p>缺点：</p><p style=\"border: 0px; margin-top: 0px; margin-bottom: 20px; padding: 0px; font-size: 15px; color: rgb(94, 94, 94); font-family: \" microsoft=\"\" myriad=\"\" helvetica=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">1、<strong style=\"border: 0px; margin: 0px; padding: 0px;\">同步阻塞问题</strong>。执行过程中，所有参与节点都是事务阻塞型的。当参与者占有公共资源时，其他第三方节点访问公共资源不得不处于阻塞状态。</p><p style=\"border: 0px; margin-top: 0px; margin-bottom: 20px; padding: 0px; font-size: 15px; color: rgb(94, 94, 94); font-family: \" microsoft=\"\" myriad=\"\" helvetica=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">2、<strong style=\"border: 0px; margin: 0px; padding: 0px;\">单点故障</strong>。由于协调者的重要性，一旦协调者发生故障。参与者会一直阻塞下去。尤其在第二阶段，协调者发生故障，那么所有的参与者还都处于锁定事务资源的状态中，而无法继续完成事务操作。（如果是协调者挂掉，可以重新选举一个协调者，但是无法解决因为协调者宕机导致的参与者处于阻塞状态的问题）</p><p style=\"border: 0px; margin-top: 0px; margin-bottom: 20px; padding: 0px; font-size: 15px; color: rgb(94, 94, 94); font-family: \" microsoft=\"\" myriad=\"\" helvetica=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">3、<strong style=\"border: 0px; margin: 0px; padding: 0px;\">数据不一致</strong>。在二阶段提交的阶段二中，当协调者向参与者发送commit请求之后，发生了局部网络异常或者在发送commit请求过程中协调者发生了故障，这回导致只有一部分参与者接受到了commit请求。而在这部分参与者接到commit请求之后就会执行commit操作。但是其他部分未接到commit请求的机器则无法执行事务提交。于是整个分布式系统便出现了数据部一致性的现象。</p><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 15px; color: rgb(94, 94, 94); font-family: \" microsoft=\"\" myriad=\"\" helvetica=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">4、二阶段无法解决的问题：协调者再发出commit消息之后宕机，而唯一接收到这条消息的参与者同时也宕机了。那么即使协调者通过选举协议产生了新的协调者，这条事务的状态也是不确定的，没人知道事务是否被已经提交。</p><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 15px; color: rgb(94, 94, 94); font-family: \" microsoft=\"\" myriad=\"\" helvetica=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><br/></p><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 15px; color: rgb(94, 94, 94); font-family: \" microsoft=\"\" myriad=\"\" helvetica=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><br/></p><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 15px; color: rgb(94, 94, 94); font-family: \" microsoft=\"\" myriad=\"\" helvetica=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">//ppt 里就不写了</p><p style=\"border: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 15px; color: rgb(94, 94, 94); font-family: \" microsoft=\"\" myriad=\"\" helvetica=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">三阶段提交：</p><p style=\"border: 0px; margin-top: 0px; margin-bottom: 20px; padding: 0px; font-size: 15px; color: rgb(46, 46, 46); font-family: \" microsoft=\"\" myriad=\"\" helvetica=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">与两阶段提交不同的是，三阶段提交有两个改动点。</p><p style=\"border: 0px; margin-top: 0px; margin-bottom: 20px; padding: 0px; font-size: 15px; color: rgb(46, 46, 46); font-family: \" microsoft=\"\" myriad=\"\" helvetica=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">1、引入超时机制。同时在协调者和参与者中都引入超时机制。<br/>2、在第一阶段和第二阶段中插入一个准备阶段。保证了在最后提交阶段之前各参与节点的状态是一致的。</p><p style=\"border: 0px; margin-top: 0px; margin-bottom: 20px; padding: 0px; font-size: 15px; color: rgb(46, 46, 46); font-family: \" microsoft=\"\" myriad=\"\" helvetica=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">也就是说，除了引入超时机制之外，3PC把2PC的准备阶段再次一分为二，这样三阶段提交就有<code style=\"border: 0px; margin: 0px; padding: 0px; font-family: Monaco, Consolas, \" andale=\"\" dejavu=\"\" sans=\"\">CanCommit</code>、<code style=\"border: 0px; margin: 0px; padding: 0px; font-family: Monaco, Consolas, \" andale=\"\" dejavu=\"\" sans=\"\">PreCommit</code>、<code style=\"border: 0px; margin: 0px; padding: 0px; font-family: Monaco, Consolas, \" andale=\"\" dejavu=\"\" sans=\"\">DoCommit</code>三个阶段。</p><p style=\"border: 0px; margin-top: 0px; margin-bottom: 20px; padding: 0px; font-size: 15px; color: rgb(46, 46, 46); font-family: \" microsoft=\"\" myriad=\"\" helvetica=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><br/></p><p style=\"border: 0px; margin-top: 0px; margin-bottom: 20px; padding: 0px; font-size: 15px; color: rgb(46, 46, 46); font-family: \" microsoft=\"\" myriad=\"\" helvetica=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">在DoCommit阶段，不响应的，</p><p style=\"border: 0px; margin-top: 0px; margin-bottom: 20px; padding: 0px; font-size: 15px; color: rgb(46, 46, 46); font-family: \" microsoft=\"\" myriad=\"\" helvetica=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><br/></p><p style=\"border: 0px; margin-top: 0px; margin-bottom: 20px; padding: 0px; font-size: 15px; color: rgb(46, 46, 46); font-family: \" microsoft=\"\" myriad=\"\" helvetica=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"color: rgb(46, 46, 46); font-family: \" microsoft=\"\" myriad=\"\" helvetica=\"\" font-size:=\"\" line-height:=\"\" background-color:=\"\">三阶段提交就是，而不会一直持有事务资源并处于阻塞状态。　能提交阶段－－&gt; 预提交阶段　－－&gt; 最终提交，　已经预提交了　然而没有得到最终提交的指令，还是会提交，从而解决了阻塞。</span></p><p>下一步提升计划。</p><p><br/></p>','',0),(55,0,'<p>1<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>Two Sum &nbsp; <span class=\"Apple-tab-span\" style=\"white-space: pre;\">		</span>33.4%<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span></p><p>经典入门题</p><p>Given nums = [2, 7,11,15] target = 9, &nbsp;nums[0] + nums[1] = 2 + 7 = 9; return [0, 1]</p><p><br/></p><p>&lt;K, V&gt; &nbsp;&lt;=&gt; &lt;Index, Value&gt;</p><p><br/></p><p>class Solution {</p><p>public:</p><p>&nbsp; &nbsp; vector&lt;int&gt; twoSum(vector&lt;int&gt;&amp; nums, int target) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; vector&lt;int&gt; result;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; map&lt;int, int&gt; m;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; for (int i = 0; i &lt; nums.size(); i++) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (m.find(target - nums[i]) != m.end()) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; result.push_back(m[target - nums[i]]);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; result.push_back(i);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return result; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m[nums[i]] = i;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; return result;</p><p>&nbsp; &nbsp; }</p><p>};</p><p>&nbsp;</p><p>2<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Add Two Numbers &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>27.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>3<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Longest Substring Without Repeating Characters &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>24.2%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>4<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Median of Two Sorted Arrays &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>21.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>5<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Longest Palindromic Substring &nbsp; &nbsp;<span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>25.1%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>6<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>ZigZag Conversion &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>26.6%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>7<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Reverse Integer &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>24.2%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>8<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>String to Integer (atoi) &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>13.9%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>9<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Palindrome Number &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>34.9%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>10<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Regular Expression Matching &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>24.0%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>11<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Container With Most Water &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>36.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>12<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Integer to Roman &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>44.2%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>13<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Roman to Integer &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>45.1%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>14<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Longest Common Prefix &nbsp; &nbsp;<span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>31.3%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>15<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>3Sum &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>21.5%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>16<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>3Sum Closest &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>30.9%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>17<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Letter Combinations of a Phone Number &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>34.0%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>18<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>4Sum &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>26.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>19<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Remove Nth Node From End of List &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>33.1%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>20<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Valid Parentheses &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>33.1%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>21<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Merge Two Sorted Lists &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>38.9%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>22<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Generate Parentheses &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>44.0%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>23<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Merge k Sorted Lists &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>26.9%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>24<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Swap Nodes in Pairs &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>38.0%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>25<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Reverse Nodes in k-Group &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>30.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>26<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Remove Duplicates from Sorted Array &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>35.6%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>27<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Remove Element &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>38.5%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>28<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Implement strStr() &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>27.8%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>29<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Divide Two Integers &nbsp; &nbsp;<span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>16.0%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>30<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Substring with Concatenation of All Words &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>21.8%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>31<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Next Permutation &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>28.6%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>32<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Longest Valid Parentheses &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>23.0%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>33<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Search in Rotated Sorted Array &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>32.1%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>34<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Search for a Range &nbsp; &nbsp;<span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>31.2%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>35<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Search Insert Position &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>39.5%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>36<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Valid Sudoku &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>35.2%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>37<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Sudoku Solver &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>29.6%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>38<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Count and Say &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>34.0%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>39<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Combination Sum &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>37.8%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>40<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Combination Sum II &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>33.0%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>41<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>First Missing Positive &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>25.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>42<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Trapping Rain Water &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>36.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>43<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Multiply Strings &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>26.8%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>44<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Wildcard Matching &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>19.8%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>45<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Jump Game II &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>26.1%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>46<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Permutations &nbsp; &nbsp;<span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>42.8%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>47<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Permutations II &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>32.2%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>48<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Rotate Image &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>38.1%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>49<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Group Anagrams &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>33.8%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>50<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Pow(x, n) &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>26.5%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>51<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>N-Queens &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>30.3%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>52<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>N-Queens II &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>44.2%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>53<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Maximum Subarray &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>39.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>54<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Spiral Matrix &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>25.6%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>55<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Jump Game &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>29.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>56<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Merge Intervals &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>29.5%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>57<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Insert Interval &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>27.2%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>58<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Length of Last Word &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>31.7%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>59<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Spiral Matrix II &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>39.1%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>60<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Permutation Sequence &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>28.1%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>61<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Rotate List &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>24.3%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>62<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Unique Paths &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>40.5%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>63<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Unique Paths II &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>31.5%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>64<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Minimum Path Sum &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>38.1%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>65<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Valid Number &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>12.7%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>66<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Plus One &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>38.2%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>67<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Add Binary &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>31.9%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>68<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Text Justification &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>18.8%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>69<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Sqrt(x) &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>27.6%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>70<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Climbing Stairs &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>39.6%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>71<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Simplify Path &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>24.9%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>72<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Edit Distance &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>31.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>73<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Set Matrix Zeroes &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>35.7%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>74<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Search a 2D Matrix &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>35.2%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>75<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Sort Colors &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>37.6%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>76<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Minimum Window Substring &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>24.8%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>77<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Combinations &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>39.1%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>78<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Subsets &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>39.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>79<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Word Search &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>26.3%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>80<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Remove Duplicates from Sorted Array II &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>35.6%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>81<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Search in Rotated Sorted Array II &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>32.8%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>82<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Remove Duplicates from Sorted List II &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>29.2%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>83<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Remove Duplicates from Sorted List &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>39.6%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>84<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Largest Rectangle in Histogram &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>26.3%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>85<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Maximal Rectangle &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>27.3%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>86<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Partition List &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>32.3%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>87<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Scramble String &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>28.8%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>88<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Merge Sorted Array &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>31.9%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>89<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Gray Code &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>40.6%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>90<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Subsets II &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>35.5%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>91<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Decode Ways &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>19.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>92<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Reverse Linked List II &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>30.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>93<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Restore IP Addresses &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>26.9%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>94<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Binary Tree Inorder Traversal &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>45.9%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>95<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Unique Binary Search Trees II &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>31.1%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>96<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Unique Binary Search Trees &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>40.6%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>97<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Interleaving String &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>24.4%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>98<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Validate Binary Search Tree &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>23.0%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Medium<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>99<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Recover Binary Search Tree &nbsp; <span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>29.6%<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Hard<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>100<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></p><p>Same Tree &nbsp; <span class=\"Apple-tab-span\" style=\"white-space: pre;\">		</span>46.2%<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span>Easy<span class=\"Apple-tab-span\" style=\"white-space: pre;\">	</span></p><p><br/></p>','',0),(44,0,'<p><strong><span style=\"font-family: &#39;Times New Roman&#39;;font-size: 14px\">Abstract&nbsp;</span></strong></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">With&nbsp;the&nbsp;development&nbsp;of&nbsp;computer&nbsp;science,&nbsp;intelligent&nbsp;educational&nbsp;system&nbsp;become&nbsp;more&nbsp;and&nbsp;more&nbsp;popular.&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">There&nbsp;are&nbsp;many&nbsp;famous&nbsp;project&nbsp;in&nbsp;this&nbsp;area,&nbsp;such&nbsp;as&nbsp;MOOC,&nbsp;Courser,&nbsp;Anki,&nbsp;Mnemosyne.&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">However,&nbsp;most&nbsp;of&nbsp;current&nbsp;project&nbsp;is&nbsp;base&nbsp;on&nbsp;basic&nbsp;algorithm&nbsp;and&nbsp;not&nbsp;personal&nbsp;for&nbsp;every&nbsp;student.&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">Therefore,&nbsp;it’s&nbsp;necessary&nbsp;to&nbsp;select&nbsp;different&nbsp;strategy&nbsp;for&nbsp;individuals.&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">Reinforcement&nbsp;learning&nbsp;is&nbsp;a&nbsp;branch&nbsp;of&nbsp;machine&nbsp;learning,&nbsp;which&nbsp;is&nbsp;efficient&nbsp;to&nbsp;get&nbsp;a&nbsp;good&nbsp;policy&nbsp;by&nbsp;sequence&nbsp;actions.&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">RL&nbsp;can&nbsp;create&nbsp;a&nbsp;personal&nbsp;schedule&nbsp;for&nbsp;every&nbsp;students,</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">Moreover,&nbsp;it&nbsp;breaks&nbsp;through&nbsp;the&nbsp;restriction&nbsp;of&nbsp;teachers,&nbsp;classroom&nbsp;and&nbsp;platform.</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">Traditional&nbsp;algorithms&nbsp;in&nbsp;intelligent&nbsp;educational&nbsp;area&nbsp;focus&nbsp;on&nbsp;machine&nbsp;learning,&nbsp;or&nbsp;online&nbsp;method&nbsp;of&nbsp;reinforcement&nbsp;learning.&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">In&nbsp;this&nbsp;thesis&nbsp;we&nbsp;use&nbsp;offline&nbsp;method&nbsp;in&nbsp;reinforcement&nbsp;learning&nbsp;to&nbsp;analysis&nbsp;the&nbsp;log&nbsp;data&nbsp;from&nbsp;Mnenosyne.&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">Moreover,&nbsp;we&nbsp;try&nbsp;use&nbsp;reinforcement&nbsp;learning&nbsp;algorithm&nbsp;with&nbsp;Chinese&nbsp;learning&nbsp;which&nbsp;is&nbsp;a&nbsp;new&nbsp;idea&nbsp;for&nbsp;Chinese&nbsp;learning.&nbsp;In&nbsp;this&nbsp;thesis,&nbsp;we&nbsp;use&nbsp;Fitted&nbsp;Q&nbsp;iteration.&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">Perhaps&nbsp;the&nbsp;most&nbsp;popular&nbsp;algorithm&nbsp;in&nbsp;batch&nbsp;RL&nbsp;which&nbsp;is&nbsp;introduced&nbsp;by&nbsp;Damien&nbsp;Ernst.&nbsp;(FQI,&nbsp;Ernst&nbsp;et&nbsp;al&nbsp;(2005a)).</span><span style=\"font-family: \" times=\"\" new=\"\" font-size:=\"\">&nbsp;</span></p><p><span style=\"font-family: \" times=\"\" new=\"\" font-size:=\"\"><br/></span></p><p><span style=\"font-family: \" times=\"\" new=\"\" font-size:=\"\">It&nbsp;can&nbsp;be&nbsp;seen&nbsp;as&nbsp;the&nbsp;‘Q-Learning&nbsp;of&nbsp;batch&nbsp;RL’,as&nbsp;it&nbsp;is&nbsp;actually&nbsp;a&nbsp;straight-forward&nbsp;transfer&nbsp;of&nbsp;the&nbsp;basic&nbsp;Q-learning&nbsp;update-rule&nbsp;to&nbsp;the&nbsp;batch&nbsp;case.</span></p><p><br/></p>','',0),(45,0,'<p><strong><span style=\"font-family: &#39;Times New Roman&#39;;font-size: 14px\">Introduction</span></strong></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">With&nbsp;the&nbsp;development&nbsp;of&nbsp;the&nbsp;Internet,&nbsp;the&nbsp;online&nbsp;courses&nbsp;are&nbsp;becoming&nbsp;increasingly&nbsp;popular.&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">There&nbsp;are&nbsp;several&nbsp;types&nbsp;of&nbsp;online&nbsp;course&nbsp;platform,&nbsp;which&nbsp;include&nbsp;online&nbsp;video,&nbsp;online&nbsp;quiz,&nbsp;distance&nbsp;course.</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">For&nbsp;online&nbsp;video,&nbsp;which&nbsp;is&nbsp;usually&nbsp;recorded&nbsp;by&nbsp;teachers,&nbsp;is&nbsp;content-rich,&nbsp;easy&nbsp;to&nbsp;understand,&nbsp;but&nbsp;the&nbsp;interaction&nbsp;is&nbsp;poor.&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">Therefore&nbsp;it&nbsp;is&nbsp;suitable&nbsp;for&nbsp;simple&nbsp;introductory&nbsp;courses&nbsp;or&nbsp;lectures.&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">However,&nbsp;it&nbsp;is&nbsp;not&nbsp;helpful&nbsp;for&nbsp;students&nbsp;to&nbsp;understanding&nbsp;some&nbsp;difficult&nbsp;knowledge,&nbsp;and&nbsp;apply&nbsp;theory&nbsp;into&nbsp;practice&nbsp;process.</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">For&nbsp;online&nbsp;quiz,&nbsp;students&nbsp;can&nbsp;learn&nbsp;knowledge&nbsp;by&nbsp;practice.&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">However,&nbsp;most&nbsp;of&nbsp;the&nbsp;traditional&nbsp;online&nbsp;exam&nbsp;only&nbsp;provide&nbsp;some&nbsp;single,&nbsp;simple&nbsp;questions&nbsp;and&nbsp;strategy,&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">so&nbsp;it&nbsp;is&nbsp;not&nbsp;enough&nbsp;for&nbsp;students&nbsp;in&nbsp;different&nbsp;learning&nbsp;levels.&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">Moreover,&nbsp;in&nbsp;most&nbsp;of&nbsp;cases,&nbsp;the&nbsp;online&nbsp;quiz&nbsp;only&nbsp;use&nbsp;the&nbsp;standard&nbsp;answer&nbsp;for&nbsp;detecting&nbsp;whether&nbsp;the&nbsp;solution&nbsp;is&nbsp;correct,&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">all&nbsp;of&nbsp;these&nbsp;disadvantages&nbsp;limit&nbsp;students&#39;&nbsp;learning&nbsp;efficiency&nbsp;greatly.&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">For&nbsp;distance&nbsp;courses,&nbsp;teachers&nbsp;and&nbsp;students&nbsp;can&nbsp;interact&nbsp;online,&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">and&nbsp;the&nbsp;teacher&nbsp;can&nbsp;be&nbsp;able&nbsp;to&nbsp;find&nbsp;the&nbsp;lack&nbsp;of&nbsp;students&nbsp;knowledge&nbsp;and&nbsp;answer&nbsp;the&nbsp;question&nbsp;of&nbsp;students&nbsp;immediately.</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">It&nbsp;is&nbsp;also&nbsp;efficient&nbsp;to&nbsp;provide&nbsp;online&nbsp;testing,&nbsp;evaluation,&nbsp;feedback.&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">But&nbsp;the&nbsp;human&nbsp;cost&nbsp;is&nbsp;very&nbsp;large&nbsp;in&nbsp;this&nbsp;form,&nbsp;it&nbsp;is&nbsp;not&nbsp;easy&nbsp;to&nbsp;copy&nbsp;extensively.</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">The&nbsp;Intelligent&nbsp;Teaching&nbsp;System(ITS)&nbsp;become&nbsp;more&nbsp;and&nbsp;more&nbsp;import,&nbsp;it&nbsp;provides&nbsp;thousands&nbsp;of&nbsp;education&nbsp;opportunities&nbsp;to&nbsp;people,&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">but&nbsp;it&nbsp;still&nbsp;has&nbsp;far&nbsp;to&nbsp;go.</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">One&nbsp;key&nbsp;to&nbsp;improve&nbsp;the&nbsp;ITS&nbsp;is&nbsp;to&nbsp;improve&nbsp;the&nbsp;Artificial&nbsp;Intelligent(&nbsp;AI)&nbsp;algorithm.&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">Current&nbsp;algorithms&nbsp;are&nbsp;really&nbsp;simple,&nbsp;usually&nbsp;just&nbsp;&nbsp;records&nbsp;the&nbsp;number&nbsp;of&nbsp;correct&nbsp;or&nbsp;wrong&nbsp;answer,&nbsp;use&nbsp;basic&nbsp;regression&nbsp;methods&nbsp;of&nbsp;marching&nbsp;learning&nbsp;.</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">In&nbsp;this&nbsp;thesis,&nbsp;we&nbsp;will&nbsp;discuss&nbsp;how&nbsp;to&nbsp;develop&nbsp;appropriate&nbsp;learning&nbsp;strategies&nbsp;for&nbsp;every&nbsp;student&nbsp;though&nbsp;history&nbsp;information&nbsp;of&nbsp;students&nbsp;with&nbsp;reinforcement&nbsp;learning&nbsp;method.</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">There&nbsp;are&nbsp;7&nbsp;parts&nbsp;of&nbsp;this&nbsp;thesis:&nbsp;part&nbsp;one&nbsp;is&nbsp;the&nbsp;introduction,&nbsp;part&nbsp;2&nbsp;explain&nbsp;the&nbsp;reinforcement&nbsp;learning&nbsp;algorithm&nbsp;and&nbsp;batch&nbsp;reinforcement&nbsp;learning,&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">in&nbsp;part3,&nbsp;we&nbsp;apply&nbsp;the&nbsp;batch&nbsp;RL&nbsp;algorithm&nbsp;into&nbsp;a&nbsp;classical&nbsp;simple&nbsp;example&nbsp;(grid&nbsp;word),&nbsp;in&nbsp;part4,&nbsp;we&nbsp;apply&nbsp;the&nbsp;batch&nbsp;RL&nbsp;algorithm&nbsp;into&nbsp;real&nbsp;project,&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">part&nbsp;5&nbsp;is&nbsp;we&nbsp;analysis&nbsp;the&nbsp;result,&nbsp;and&nbsp;give&nbsp;the&nbsp;conclusion,&nbsp;part&nbsp;6&nbsp;we&nbsp;discuss&nbsp;the&nbsp;disadvantage&nbsp;and&nbsp;wok&nbsp;we&nbsp;will&nbsp;do&nbsp;in&nbsp;the&nbsp;future,&nbsp;part&nbsp;7&nbsp;is&nbsp;the&nbsp;reference.</span></p><p><br/></p>','',0),(46,0,'<p><strong><span style=\"font-family: &#39;Times New Roman&#39;;font-size: 14px\">2,</span></strong><strong><span style=\"font-family: &#39;Times New Roman&#39;;font-size: 14px\">Reinforcement&nbsp;Learning&nbsp;</span></strong><strong><span style=\"font-family: &#39;Times New Roman&#39;;font-size: 14px\">Algorithm&nbsp;2500</span></strong></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">According&nbsp;to&nbsp;traditional&nbsp;machine&nbsp;learning&nbsp;classification,&nbsp;there&nbsp;is&nbsp;no&nbsp;mention&nbsp;of&nbsp;reinforcement&nbsp;learning,&nbsp;and&nbsp;in&nbsp;the&nbsp;connectivism&nbsp;learning,&nbsp;the&nbsp;learning&nbsp;algorithm&nbsp;is&nbsp;divided&nbsp;into&nbsp;three&nbsp;types,&nbsp;unsupervised&nbsp;learning,&nbsp;supervised&nbsp;learning&nbsp;and&nbsp;reinforcement&nbsp;learning.&nbsp;Reinforcement&nbsp;learning&nbsp;is&nbsp;a&nbsp;kind&nbsp;of&nbsp;important&nbsp;machine&nbsp;learning&nbsp;method.&nbsp;It&nbsp;has&nbsp;many&nbsp;applications&nbsp;in&nbsp;the&nbsp;area&nbsp;of&nbsp;intelligent&nbsp;control&nbsp;robot&nbsp;and&nbsp;analysis&nbsp;and&nbsp;prediction.&nbsp;The&nbsp;key&nbsp;of&nbsp;reinforcement&nbsp;learning&nbsp;is&nbsp;that&nbsp;the&nbsp;intelligent&nbsp;system&nbsp;can&nbsp;learn&nbsp;from&nbsp;the&nbsp;environment&nbsp;directly&nbsp;and&nbsp;then&nbsp;choose&nbsp;a&nbsp;action,&nbsp;in&nbsp;order&nbsp;to&nbsp;get&nbsp;the&nbsp;maximum&nbsp;cumulative&nbsp;value&nbsp;of&nbsp;reward&nbsp;signal&nbsp;from&nbsp;the&nbsp;long&nbsp;term.&nbsp;The&nbsp;reinforcement&nbsp;learning&nbsp;is&nbsp;different&nbsp;from&nbsp;the&nbsp;supervision&nbsp;learning,&nbsp;mainly&nbsp;in&nbsp;the&nbsp;agent&nbsp;signal.&nbsp;In&nbsp;reinforcement&nbsp;learning,&nbsp;the&nbsp;agent&nbsp;signal&nbsp;provided&nbsp;by&nbsp;the&nbsp;environment&nbsp;is&nbsp;a&nbsp;kind&nbsp;of&nbsp;evaluation&nbsp;on&nbsp;actions’&nbsp;quality&nbsp;(usually&nbsp;is&nbsp;a&nbsp;scalar&nbsp;signal),&nbsp;but&nbsp;not&nbsp;to&nbsp;tell&nbsp;reinforcement&nbsp;learning&nbsp;system&nbsp;(RLS)&nbsp;how&nbsp;to&nbsp;produce&nbsp;a&nbsp;correct&nbsp;action.&nbsp;Because&nbsp;the&nbsp;information&nbsp;provided&nbsp;by&nbsp;the&nbsp;external&nbsp;environment&nbsp;is&nbsp;limited,&nbsp;RLS&nbsp;has&nbsp;to&nbsp;learn&nbsp;from&nbsp;own&nbsp;experience.&nbsp;In&nbsp;this&nbsp;way,&nbsp;RLS&nbsp;obtains&nbsp;knowledge&nbsp;in&nbsp;an&nbsp;action-evaluation&nbsp;environment,&nbsp;and&nbsp;improves&nbsp;the&nbsp;action&nbsp;plan,&nbsp;to&nbsp;adapt&nbsp;to&nbsp;the&nbsp;environment.&nbsp;The&nbsp;main&nbsp;research&nbsp;of&nbsp;reinforcement&nbsp;learning&nbsp;is&nbsp;to&nbsp;make&nbsp;the&nbsp;agent&nbsp;to&nbsp;calculate&nbsp;the&nbsp;best&nbsp;policy&nbsp;from&nbsp;the&nbsp;environment.</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">In&nbsp;supervised&nbsp;learning&nbsp;or&nbsp;unsupervised&nbsp;learning,&nbsp;we&nbsp;always&nbsp;give&nbsp;a&nbsp;sample&nbsp;x,&nbsp;and&nbsp;then&nbsp;give&nbsp;or&nbsp;not&nbsp;to&nbsp;y&nbsp;label.&nbsp;And&nbsp;then&nbsp;apply&nbsp;this&nbsp;sample&nbsp;for&nbsp;fitting,&nbsp;classification,&nbsp;clustering&nbsp;or&nbsp;dimensionality&nbsp;reduction&nbsp;and&nbsp;other&nbsp;operations.&nbsp;However,&nbsp;for&nbsp;a&nbsp;lot&nbsp;of&nbsp;sequence&nbsp;decision&nbsp;or&nbsp;control&nbsp;problems,&nbsp;it&nbsp;is&nbsp;difficult&nbsp;to&nbsp;have&nbsp;such&nbsp;a&nbsp;regular&nbsp;sample.&nbsp;For&nbsp;example,&nbsp;the&nbsp;control&nbsp;problem&nbsp;of&nbsp;a&nbsp;robot,&nbsp;the&nbsp;robot&nbsp;even&nbsp;doesn’t&nbsp;know&nbsp;which&nbsp;action&nbsp;it&nbsp;should&nbsp;move&nbsp;at&nbsp;the&nbsp;beginning,&nbsp;and&nbsp;does&nbsp;not&nbsp;know&nbsp;how&nbsp;to&nbsp;find&nbsp;the&nbsp;right&nbsp;direction&nbsp;automatically&nbsp;in&nbsp;the&nbsp;process&nbsp;of&nbsp;moving.&nbsp;In&nbsp;addition&nbsp;to&nbsp;a&nbsp;chess&nbsp;AI&nbsp;design,&nbsp;every&nbsp;step&nbsp;is&nbsp;actually&nbsp;a&nbsp;decision&nbsp;making&nbsp;process.&nbsp;Although&nbsp;there&nbsp;are&nbsp;some&nbsp;AI&nbsp;heuristic&nbsp;methods&nbsp;in&nbsp;the&nbsp;simple&nbsp;chess,&nbsp;but&nbsp;in&nbsp;the&nbsp;complex&nbsp;situation,&nbsp;it&nbsp;is&nbsp;import&nbsp;to&nbsp;let&nbsp;the&nbsp;machine&nbsp;to&nbsp;consider&nbsp;a&nbsp;few&nbsp;back&nbsp;steps&nbsp;before&nbsp;deciding&nbsp;where&nbsp;to&nbsp;go&nbsp;in&nbsp;order&nbsp;to&nbsp;get&nbsp;good&nbsp;result.&nbsp;Therefore,&nbsp;it&nbsp;is&nbsp;necessary&nbsp;to&nbsp;use&nbsp;a&nbsp;better&nbsp;decision-making&nbsp;method.&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">There&nbsp;is&nbsp;a&nbsp;solution&nbsp;to&nbsp;this&nbsp;kind&nbsp;of&nbsp;decision&nbsp;problem.&nbsp;We&nbsp;design&nbsp;a&nbsp;reward&nbsp;function,&nbsp;if&nbsp;the&nbsp;learning&nbsp;agent&nbsp;(such&nbsp;as&nbsp;the&nbsp;robot&nbsp;program,&nbsp;chess&nbsp;AI&nbsp;program)&nbsp;obtains&nbsp;the&nbsp;results&nbsp;after&nbsp;a&nbsp;decisive&nbsp;step,&nbsp;then&nbsp;we&nbsp;return&nbsp;some&nbsp;reward&nbsp;to&nbsp;agent&nbsp;(for&nbsp;example,&nbsp;if&nbsp;the&nbsp;result&nbsp;is&nbsp;good,&nbsp;the&nbsp;reward&nbsp;of&nbsp;return&nbsp;function&nbsp;positive,&nbsp;if&nbsp;the&nbsp;result&nbsp;is&nbsp;poor,&nbsp;the&nbsp;reward&nbsp;of&nbsp;return&nbsp;function&nbsp;is&nbsp;negative).&nbsp;As&nbsp;for&nbsp;the&nbsp;robot,&nbsp;if&nbsp;it&nbsp;took&nbsp;a&nbsp;forward&nbsp;or&nbsp;close&nbsp;step&nbsp;to&nbsp;the&nbsp;goal,&nbsp;then&nbsp;the&nbsp;return&nbsp;function&nbsp;is&nbsp;positive,&nbsp;if&nbsp;it&nbsp;took&nbsp;a&nbsp;back&nbsp;or&nbsp;far&nbsp;step&nbsp;to&nbsp;the&nbsp;goal,&nbsp;the&nbsp;return&nbsp;function&nbsp;is&nbsp;negative.&nbsp;If&nbsp;we&nbsp;can&nbsp;evaluate&nbsp;for&nbsp;each&nbsp;step&nbsp;and&nbsp;get&nbsp;the&nbsp;corresponding&nbsp;reward&nbsp;function,&nbsp;it&nbsp;would&nbsp;be&nbsp;easy&nbsp;to&nbsp;deal&nbsp;with&nbsp;this&nbsp;problem.&nbsp;we&nbsp;just&nbsp;need&nbsp;to&nbsp;find&nbsp;a&nbsp;path&nbsp;whose&nbsp;sum&nbsp;of&nbsp;return&nbsp;value&nbsp;is&nbsp;maximum,&nbsp;which&nbsp;is&nbsp;the&nbsp;best&nbsp;path.&nbsp;Reinforcement&nbsp;learning&nbsp;has&nbsp;been&nbsp;successfully&nbsp;applied&nbsp;in&nbsp;many&nbsp;fields,&nbsp;such&nbsp;as&nbsp;automatic&nbsp;helicopter,&nbsp;robot&nbsp;control,&nbsp;mobile&nbsp;network&nbsp;routing,&nbsp;market&nbsp;decision,&nbsp;industrial&nbsp;control,&nbsp;high&nbsp;performance&nbsp;web&nbsp;page&nbsp;index,&nbsp;etc.&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">Next,&nbsp;we&nbsp;will&nbsp;introduce&nbsp;the&nbsp;Markov&nbsp;decision&nbsp;process&nbsp;(Markov,&nbsp;decision&nbsp;processes&nbsp;MDP)&nbsp;first.</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">First&nbsp;,&nbsp;we&nbsp;give&nbsp;the&nbsp;definition&nbsp;of&nbsp;Markov&nbsp;property.&nbsp;A&nbsp;state&nbsp;signal&nbsp;that&nbsp;succeeds&nbsp;in&nbsp;retaining&nbsp;all&nbsp;relevant&nbsp;information&nbsp;is&nbsp;said&nbsp;to&nbsp;be&nbsp;Markov,&nbsp;or&nbsp;to&nbsp;have&nbsp;the&nbsp;Markov&nbsp;property.[book].&nbsp;For&nbsp;example,&nbsp;in&nbsp;the&nbsp;decision&nbsp;processes&nbsp;of&nbsp;chess,&nbsp;we&nbsp;define&nbsp;the&nbsp;state&nbsp;as&nbsp;the&nbsp;location&nbsp;of&nbsp;every&nbsp;chessman,&nbsp;the&nbsp;current&nbsp;state&nbsp;include&nbsp;all&nbsp;of&nbsp;the&nbsp;history&nbsp;information,&nbsp;the&nbsp;next&nbsp;station&nbsp;depends&nbsp;on&nbsp;the&nbsp;current&nbsp;state,&nbsp;but&nbsp;not&nbsp;relates&nbsp;to&nbsp;the&nbsp;state&nbsp;before&nbsp;current&nbsp;state.</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">A&nbsp;reinforcement&nbsp;learning&nbsp;task&nbsp;that&nbsp;satisfies&nbsp;the&nbsp;Markov&nbsp;property&nbsp;is&nbsp;called&nbsp;a</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">Markov&nbsp;decision&nbsp;process,&nbsp;or&nbsp;MDP.&nbsp;If&nbsp;the&nbsp;state&nbsp;and&nbsp;action&nbsp;spaces&nbsp;are&nbsp;finite,</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">then&nbsp;it&nbsp;is&nbsp;called&nbsp;a&nbsp;finite&nbsp;Markov&nbsp;decision&nbsp;process&nbsp;(finite&nbsp;MDP).&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">A&nbsp;Markov&nbsp;decision&nbsp;process&nbsp;is&nbsp;composed&nbsp;of&nbsp;a&nbsp;group&nbsp;of&nbsp;5-tuple.</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">*&nbsp;S&nbsp;representation&nbsp;of&nbsp;states.&nbsp;&nbsp;(For&nbsp;example,&nbsp;in&nbsp;an&nbsp;automated&nbsp;helicopter&nbsp;system,&nbsp;the&nbsp;current&nbsp;position&nbsp;consists&nbsp;of&nbsp;a&nbsp;set&nbsp;of&nbsp;coordinates)</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">*&nbsp;A&nbsp;represents&nbsp;a&nbsp;set&nbsp;of&nbsp;actions&nbsp;(actions).&nbsp;&nbsp;(For&nbsp;example,&nbsp;using&nbsp;a&nbsp;joystick&nbsp;to&nbsp;control&nbsp;helicopter’s&nbsp;direction,&nbsp;&nbsp;let&nbsp;it&nbsp;forward,&nbsp;backward,&nbsp;etc.)</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">*&nbsp;&nbsp;represents&nbsp;the&nbsp;state&nbsp;transition&nbsp;probability.&nbsp;&nbsp;A&nbsp;state&nbsp;in&nbsp;S&nbsp;will&nbsp;change&nbsp;to&nbsp;another&nbsp;state&nbsp;of&nbsp;S&nbsp;according&nbsp;to&nbsp;the&nbsp;action&nbsp;of&nbsp;A.&nbsp;Therefore&nbsp;the&nbsp;transition&nbsp;probability&nbsp;is&nbsp;the&nbsp;probability&nbsp;distribution&nbsp;from&nbsp;current&nbsp;state&nbsp;to&nbsp;next&nbsp;state&nbsp;with&nbsp;a&nbsp;kind&nbsp;of&nbsp;action&nbsp;of&nbsp;A.&nbsp;(the&nbsp;current&nbsp;state&nbsp;may&nbsp;jump&nbsp;to&nbsp;a&nbsp;lot&nbsp;of&nbsp;state&nbsp;with&nbsp;the&nbsp;same&nbsp;action).</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;&nbsp;is&nbsp;the&nbsp;discount&nbsp;factor.</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">*&nbsp;,&nbsp;R&nbsp;is&nbsp;a&nbsp;return&nbsp;function&nbsp;(reward&nbsp;function),&nbsp;the&nbsp;return&nbsp;function&nbsp;often&nbsp;writing&nbsp;S&nbsp;function&nbsp;(only&nbsp;related&nbsp;to&nbsp;S),&nbsp;so&nbsp;the&nbsp;words,&nbsp;R&nbsp;rewriting&nbsp;to&nbsp;like&nbsp;this:&nbsp;&nbsp;.</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">MDP&nbsp;dynamic&nbsp;process&nbsp;is&nbsp;as&nbsp;follows:&nbsp;the&nbsp;initial&nbsp;state&nbsp;of&nbsp;a&nbsp;agent,&nbsp;and&nbsp;then&nbsp;from&nbsp;the&nbsp;A&nbsp;to&nbsp;select&nbsp;an&nbsp;action&nbsp;to&nbsp;perform,&nbsp;after&nbsp;the&nbsp;implementation,&nbsp;agent&nbsp;random&nbsp;transfer&nbsp;to&nbsp;the&nbsp;next&nbsp;state,.&nbsp;And&nbsp;then&nbsp;perform&nbsp;an&nbsp;action,&nbsp;it&nbsp;is&nbsp;transferred&nbsp;to&nbsp;the&nbsp;next,&nbsp;and&nbsp;then&nbsp;the&nbsp;implementation&nbsp;of...&nbsp;,&nbsp;we&nbsp;can&nbsp;use&nbsp;the&nbsp;following&nbsp;diagram&nbsp;to&nbsp;show&nbsp;the&nbsp;whole&nbsp;process</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">We&nbsp;define&nbsp;the&nbsp;following&nbsp;after&nbsp;the&nbsp;transfer&nbsp;path,&nbsp;the&nbsp;sum&nbsp;of&nbsp;the&nbsp;payoff&nbsp;function&nbsp;is&nbsp;as&nbsp;follows</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">If&nbsp;S&nbsp;is&nbsp;only&nbsp;related&nbsp;to&nbsp;R,&nbsp;then&nbsp;the&nbsp;type&nbsp;can&nbsp;be&nbsp;written</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">Our&nbsp;goal&nbsp;is&nbsp;to&nbsp;select&nbsp;a&nbsp;group&nbsp;of&nbsp;the&nbsp;best&nbsp;action,&nbsp;which&nbsp;makes&nbsp;all&nbsp;the&nbsp;returns&nbsp;weighted&nbsp;and&nbsp;the&nbsp;expectation&nbsp;maximum.</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">From&nbsp;the&nbsp;above&nbsp;formula,&nbsp;we&nbsp;can&nbsp;find&nbsp;the&nbsp;return&nbsp;value&nbsp;decrease&nbsp;gradually&nbsp;after&nbsp;time&nbsp;t&nbsp;due&nbsp;to&nbsp;the&nbsp;discount&nbsp;factor&nbsp;y,&nbsp;which&nbsp;means&nbsp;the&nbsp;behind&nbsp;states&nbsp;will&nbsp;return&nbsp;the&nbsp;smaller&nbsp;reward&nbsp;and&nbsp;the&nbsp;impact&nbsp;is&nbsp;smaller.&nbsp;In&nbsp;order&nbsp;to&nbsp;maximize&nbsp;the&nbsp;expected&nbsp;value,&nbsp;it&nbsp;is&nbsp;better&nbsp;to&nbsp;put&nbsp;the&nbsp;big&nbsp;value&nbsp;of&nbsp;&nbsp;&nbsp;as&nbsp;high&nbsp;as&nbsp;possible,&nbsp;put&nbsp;small&nbsp;value&nbsp;of&nbsp;&nbsp;&nbsp;&nbsp;as&nbsp;far&nbsp;as&nbsp;possible.</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">There&nbsp;is&nbsp;a&nbsp;state&nbsp;s,&nbsp;the&nbsp;process&nbsp;will&nbsp;use&nbsp;a&nbsp;certain&nbsp;strategy&nbsp;to&nbsp;select&nbsp;the&nbsp;next&nbsp;action&nbsp;a,&nbsp;and&nbsp;then&nbsp;switch&nbsp;to&nbsp;another&nbsp;state&nbsp;s&#39;.&nbsp;We&nbsp;call&nbsp;this&nbsp;strategy&nbsp;Policy,&nbsp;each&nbsp;policy&nbsp;is&nbsp;actually&nbsp;a&nbsp;mapping&nbsp;function:&nbsp;&nbsp;,&nbsp;from&nbsp;a&nbsp;state&nbsp;to&nbsp;action.&nbsp;When&nbsp;state&nbsp;is&nbsp;given,&nbsp;the&nbsp;action&nbsp;is&nbsp;known&nbsp;&nbsp;,&nbsp;which&nbsp;means&nbsp;if&nbsp;the&nbsp;process&nbsp;know&nbsp;the&nbsp;policy,&nbsp;it&nbsp;can&nbsp;get&nbsp;every&nbsp;action&nbsp;from&nbsp;every&nbsp;state&nbsp;in&nbsp;each&nbsp;step.</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">In&nbsp;order&nbsp;to&nbsp;judge&nbsp;the&nbsp;different&nbsp;quality&nbsp;of&nbsp;a&nbsp;policy,&nbsp;it&nbsp;is&nbsp;necessary&nbsp;to&nbsp;define&nbsp;a&nbsp;value&nbsp;function,&nbsp;the&nbsp;value&nbsp;function&nbsp;is&nbsp;also&nbsp;called&nbsp;the&nbsp;discounted&nbsp;cumulative&nbsp;reward.</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">In&nbsp;the&nbsp;current&nbsp;state&nbsp;of&nbsp;S,&nbsp;after&nbsp;selecting&nbsp;a&nbsp;good&nbsp;policy,&nbsp;the&nbsp;value&nbsp;function&nbsp;will&nbsp;return&nbsp;the&nbsp;weighted&nbsp;sum&nbsp;of&nbsp;expectations.&nbsp;It&nbsp;is&nbsp;actually&nbsp;very&nbsp;easy&nbsp;to&nbsp;understand,&nbsp;given&nbsp;a&nbsp;future&nbsp;plan&nbsp;of&nbsp;action,&nbsp;this&nbsp;action&nbsp;plan&nbsp;will&nbsp;be&nbsp;through&nbsp;one&nbsp;action&nbsp;by&nbsp;one&nbsp;action,&nbsp;and&nbsp;then&nbsp;each&nbsp;state&nbsp;will&nbsp;return&nbsp;a&nbsp;value&nbsp;while&nbsp;it&nbsp;arrives.&nbsp;The&nbsp;future&nbsp;state&nbsp;is&nbsp;closer&nbsp;to&nbsp;the&nbsp;current&nbsp;state,&nbsp;the&nbsp;weight&nbsp;is&nbsp;higher.&nbsp;This&nbsp;is&nbsp;similar&nbsp;with&nbsp;playing&nbsp;chess,&nbsp;during&nbsp;the&nbsp;game,&nbsp;we&nbsp;might&nbsp;consider&nbsp;several&nbsp;steps,&nbsp;and&nbsp;select&nbsp;the&nbsp;best&nbsp;plan,&nbsp;the&nbsp;next&nbsp;step&nbsp;is&nbsp;most&nbsp;import&nbsp;to&nbsp;current&nbsp;game,&nbsp;so&nbsp;the&nbsp;weight&nbsp;is&nbsp;highest.&nbsp;The&nbsp;step&nbsp;after&nbsp;next&nbsp;step&nbsp;is&nbsp;less&nbsp;import,&nbsp;the&nbsp;weight&nbsp;is&nbsp;lower&nbsp;than&nbsp;first&nbsp;step,&nbsp;but&nbsp;it&nbsp;is&nbsp;still&nbsp;higher&nbsp;than&nbsp;third&nbsp;step.</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">Change&nbsp;above&nbsp;formula&nbsp;into&nbsp;Bellman&nbsp;equation:</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">The&nbsp;first&nbsp;item&nbsp;has&nbsp;nothing&nbsp;to&nbsp;do&nbsp;with&nbsp;,&nbsp;The&nbsp;second&nbsp;item&nbsp;is&nbsp;the&nbsp;maximum&nbsp;reward&nbsp;expected&nbsp;value&nbsp;of&nbsp;new&nbsp;state&nbsp;s’.</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">After&nbsp;defining&nbsp;the&nbsp;optimal&nbsp;value&nbsp;function&nbsp;V*,&nbsp;then&nbsp;we&nbsp;define&nbsp;the&nbsp;optimal&nbsp;policy&nbsp;as&nbsp;follows:</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">The&nbsp;next&nbsp;optimal&nbsp;action&nbsp;of&nbsp;each&nbsp;state&nbsp;is&nbsp;determined&nbsp;by&nbsp;the&nbsp;optimal&nbsp;policy.</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">According&nbsp;to&nbsp;the&nbsp;above&nbsp;formula,&nbsp;we&nbsp;can&nbsp;know&nbsp;that</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">The&nbsp;optimal&nbsp;value&nbsp;function&nbsp;V*,&nbsp;is&nbsp;derived&nbsp;from&nbsp;the&nbsp;optimal&nbsp;policy,&nbsp;therefore&nbsp;the&nbsp;reward&nbsp;is&nbsp;better&nbsp;than&nbsp;the&nbsp;other&nbsp;policies..</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">3.&nbsp;Value&nbsp;Function&nbsp;(V&nbsp;function)</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">According&nbsp;to&nbsp;the&nbsp;statement&nbsp;above,&nbsp;the&nbsp;reinforcement&nbsp;learning&nbsp;to&nbsp;learn&nbsp;is&nbsp;a&nbsp;mapping&nbsp;from&nbsp;the&nbsp;environmental&nbsp;state&nbsp;to&nbsp;action,&nbsp;called&nbsp;policy&nbsp;PI:&nbsp;S&nbsp;-&nbsp;&gt;&nbsp;a.&nbsp;However,&nbsp;the&nbsp;reward&nbsp;in&nbsp;reinforcement&nbsp;learning&nbsp;will&nbsp;delay,&nbsp;if&nbsp;you&nbsp;lose&nbsp;the&nbsp;game&nbsp;in&nbsp;the&nbsp;first&nbsp;n,&nbsp;then&nbsp;only&nbsp;the&nbsp;state&nbsp;Sn&nbsp;and&nbsp;action&nbsp;An&nbsp;received&nbsp;an&nbsp;immediate&nbsp;reward&nbsp;R&nbsp;(Sn,&nbsp;An)&nbsp;=-1,&nbsp;all&nbsp;States&nbsp;in&nbsp;front&nbsp;of&nbsp;Sn&nbsp;received&nbsp;the&nbsp;reward&nbsp;as&nbsp;0.&nbsp;So&nbsp;for&nbsp;any&nbsp;state&nbsp;before&nbsp;the&nbsp;s&nbsp;and&nbsp;action&nbsp;a,&nbsp;immediately&nbsp;reward&nbsp;function&nbsp;R&nbsp;(s,&nbsp;a)&nbsp;cannot&nbsp;show&nbsp;weather&nbsp;the&nbsp;strategy&nbsp;is&nbsp;good&nbsp;or&nbsp;bad.&nbsp;So&nbsp;it&nbsp;is&nbsp;necessary&nbsp;to&nbsp;define&nbsp;the&nbsp;value&nbsp;function&nbsp;to&nbsp;show&nbsp;the&nbsp;long-term&nbsp;effects&nbsp;of&nbsp;current&nbsp;policy&nbsp;PI.</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">There&nbsp;are&nbsp;three&nbsp;kinds&nbsp;of&nbsp;value&nbsp;functions:</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">γ∈[0,1]&nbsp;is&nbsp;discount&nbsp;factor,&nbsp;indicating&nbsp;how&nbsp;important&nbsp;the&nbsp;future&nbsp;reward&nbsp;is&nbsp;to&nbsp;the&nbsp;current&nbsp;reward.&nbsp;In&nbsp;particular,&nbsp;γ=0&nbsp;means&nbsp;the&nbsp;process&nbsp;doesn’t&nbsp;consider&nbsp;the&nbsp;long-term&nbsp;reward,&nbsp;γ=1&nbsp;means&nbsp;long-term&nbsp;reward&nbsp;and&nbsp;immediate&nbsp;reward&nbsp;is&nbsp;equally&nbsp;important.</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">Now&nbsp;we&nbsp;expand&nbsp;the&nbsp;formula,&nbsp;ri&nbsp;&nbsp;is&nbsp;the&nbsp;reward&nbsp;in&nbsp;step&nbsp;i<span style=\"font-family:SimSun\">，</span><span style=\"font-family:Times New Roman\">s&#39;&nbsp;is&nbsp;the&nbsp;next&nbsp;state:&nbsp;&nbsp;</span></span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">Given&nbsp;policy&nbsp;π&nbsp;and&nbsp;initial&nbsp;state&nbsp;s,&nbsp;then&nbsp;action&nbsp;a=π(s),&nbsp;the&nbsp;state&nbsp;will&nbsp;change&nbsp;to&nbsp;next&nbsp;state&nbsp;s’&nbsp;with&nbsp;probability&nbsp;p(s&#39;|s,a)<span style=\"font-family:SimSun\">，</span><span style=\"font-family:Times New Roman\">then&nbsp;rewrite&nbsp;the&nbsp;formula:</span></span></p><p><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">action&nbsp;value&nbsp;function&nbsp;(Q&nbsp;function)</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">the&nbsp;definition&nbsp;of&nbsp;Q&nbsp;function<span style=\"font-family:SimSun\">：</span></span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">Given&nbsp;current&nbsp;state&nbsp;and&nbsp;current&nbsp;action,&nbsp;the&nbsp;state&nbsp;will&nbsp;change&nbsp;to&nbsp;next&nbsp;state&nbsp;s’&nbsp;with&nbsp;probability&nbsp;p(s&#39;|s,a)<span style=\"font-family:SimSun\">，</span><span style=\"font-family:Times New Roman\">then&nbsp;rewrite&nbsp;the&nbsp;formula:</span></span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">In&nbsp;Qπ(s,a)<span style=\"font-family:SimSun\">，</span><span style=\"font-family:Times New Roman\">not&nbsp;only&nbsp;the&nbsp;policy&nbsp;π&nbsp;and&nbsp;initial&nbsp;state&nbsp;sis&nbsp;given</span><span style=\"font-family:SimSun\">，</span><span style=\"font-family:Times New Roman\">but&nbsp;also&nbsp;the&nbsp;action&nbsp;a&nbsp;is&nbsp;given.&nbsp;This&nbsp;is&nbsp;the&nbsp;main&nbsp;difference&nbsp;between&nbsp;Qπ(s,a)&nbsp;and&nbsp;Vπ(s).</span></span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">And&nbsp;we&nbsp;can&nbsp;transform&nbsp;Vπ(s)&nbsp;to&nbsp;Qπ(s,a):</span></p><p><span style=\";font-family:&#39;Times New Roman&#39;;font-size:14px\">&nbsp;</span></p><p><br/></p>','',0),(47,0,'<p>3,Fitted Q iteration in Grid world 2500</p><p>&nbsp;</p><p>Grid world is a simple but useful example to explain the basic RL algorithm.</p><p>&nbsp;</p><p>[3,3,3,3,3;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 5,4,5,3,4;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 4,2,5,3,4;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 2,2,4,3,4;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; 2,2,4,2,1];</p><p>Figure 3.5a&nbsp;</p><p>Figure 3.5a uses a 5*5 matrix grid world to illustrate</p><p>value functions for a simple finite MDP. The agent starts from the start points ( the upper left corner), and stops at in the target location( the lower right corner), which is also called absorbing state. The immediate reward of absorbing state is 100.&nbsp;</p><p>What’s more, Sij means the state in ith row and jth column. There are four actions: up,down, left, right, denoted as Au, ad, Al, AR, SIJ, and the probability that the state is selected by the action of a is 1.</p><p>&nbsp;</p><p>Step1, build a grid world.</p><p>Initial a grid 5*5 world. The start point is [0,0], the end point is [5,5]</p><p>Step2, build reward function</p><p>[0,0,0,0,0;</p><p>-4,-3,-4,0,-3;</p><p>-3,1,-4,0,-3;</p><p>1,1,-3,0,-3;</p><p>1,1,-3,1,5];</p><p><br/></p><p>According to the reward function, it is obvious that the best policy is [1,1]-&gt;[1,2]-&gt;………</p><p><br/></p><p>Step3, build transition function</p><p>When move to right&nbsp;</p><p>Step4, Policy Iteration</p><p>Step4 result.</p><p>Step5 get trajectory</p><p><br/></p><p><br/></p><p>&nbsp;Batch Reinforcement Learning</p><p>As in the general reinforcement learning problem defined by Sutton and Barto</p><p>(1998), the task in the batch learning problem is to find a policy that maximizes</p><p>the sum of expected rewards in the familiar agent-environment loop. However, in the batch learning problem the agent itself is not allowed to interact with the system during learning.&nbsp;</p><p>Instead of observing a state s, trying an action a and adapting its policy according to the subsequent following state Batch Reinforcement Learning.</p><p><br/></p><p>As same as the general reinforcement learning problem, the goal in batch reinforcement learning algorithm is to find a policy that maximizes the sum of expected rewards from the long term. However, the agent of the batch reinforcement learning algorithm is not allowed to interact with the system during learning. In the online learning process, the agent in state s will take a action a, get the reward r and new state s’, and then adjust the policy. However, in batch reinforcement learning process, the agent receives a data set F = {(st,at,rt+1,st+1) | t=1,..p}, and then get the result from these data information with algorithm.</p><p><br/></p><p><br/></p><p>The problem in general RL and the solution in batch reinforcement learnning:</p><p>In small, discrete state spaces, model-free online learning methods like Q-learning work successful when applied to these problems. However, when state space becomes larger or continuous, these algorithms can’t work well with limitation. For example, there are three main &nbsp;independent problems:</p><p>1.<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>the ‘exploration overhead’, causing slow learning in practice</p><p><br/></p><p>2.<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>inefficiencies due to the stochastic approximation</p><p><br/></p><p><br/></p><p>3. stability issues when using function approximation</p><p><br/></p><p>Fitted Q iteration</p><p>&nbsp;</p><p>Damien Ernst’s ‘Fitted Q Iteration’ (FQI, Ernst et al (2005a)) is applied to Chinese learning problem in project. Actually it is a straight-forward transfer of the basic Q-learning update-rule to</p><p>the batch case, which is similar to ‘Q-learning’. &nbsp;</p><p>Given a fixed set F = { (st , at , rt+1, st+1) | t = 1…p} &nbsp;of p transitions</p><p>(s, a, r; s’) and an initial Q-value q¯0 (Ernst et al (2005a) used q¯ 0 = 0) the</p><p>algorithm starts by initializing an initial approximation Qˆ0 of the Q-function Q0</p><p>with Qˆ0(s, a) = ¯ q0 for all (s, a) &lt; SxA. It then iterates over the following two steps:</p><p>1. Start with an empty set Pi+1 of patterns (s, a; q¯ i+1 s, a ). Then, for each transition</p><p>(s, a; r; s0) &lt;F calculate a new target Q-value ¯ qi+1s,a according to</p><p>&nbsp;公式6</p><p>&nbsp;(similar to the update in equation (2)) and add a corresponding pattern (s,a; ¯ qi+1</p><p>s,a )to the pattern set; thus:</p><p>&nbsp;公式7</p><p>2. Use supervised learning to train a function approximator on the pattern set Pi+1.</p><p>The resulting function ˆQi+1 then is an approximation of the Q-function Qi+1 after</p><p>i+1 steps of dynamic programming.</p><p>Originally, Ernst proposed randomized trees for approximating the value function.</p><p>After fixing their structure, these trees can also be represented as kernel-based averagers,</p><p>thereby reducing step 2 to</p><p>&nbsp;(7)</p><p>with the weights k(_;s) determined by the structure of the tree. This variant of FQI</p><p>constructs an individual approximation ˆQi+1</p><p>a for each discrete action a 2 A which,</p><p>together, form the approximation ˆQi+1(s,a) = ˆQi+1</p><p>a (s) (Ernst et al, 2005a, section 3.4). Besides this variant of FQI, Ernst also proposed a variant with continuous</p><p>actions. We may refer the interested reader to Ernst et al (2005a) for a detailed</p><p>description of this.</p><p>&nbsp;</p><p>&nbsp;</p><p>In order to use Fitted Q iteration algorithm in the project, it is necessary to verify it, So we apply the algorithm in grid world first.</p><p>&nbsp;</p><p>Comparing with traditional reinforcement learning, the phase of training and learning is online. The agent doesn’t know the environment, the reward, and the policy, it is just like a baby, it will try some actions, and then get rewards, and learn a policy. However, there some disadvantages in this method, such as …</p><p>&nbsp;</p><p>If we already know the trajectory of the grid word. It is effective to utilize this information.&nbsp;</p><p>&nbsp;</p><p>In step1, build the data set.</p><p><br/></p><p>Neural Network</p><p><br/></p><p>Neural Network, which also called the artificial neural network, appeared after 1940s. It processes information by imitating the structure andfunction of biologic brain, has good self study ability and memory, is well used inparallel processing, distributing storage and clustering. &nbsp;</p><p>Back Propagation (BP) algorithm is also known as the error back propagation algorithm, which is a supervised learning algorithm in artificial neural network. BP neural network algorithm can approximate any function in theory,&nbsp;</p><p>and the basic structure is composed of nonlinear change unit, which has strong nonlinear mapping ability. And learning coefficients of intermediate layers, each layer of the processing unit and the number of network parameters can be set flexibility according to the specific circumstances. So it is widely used in many areas such as optimization, signal processing and pattern recognition, intelligent control, fault diagnosis and so on</p><p><br/></p><p>One direction of artificial intelligence research, is represented by the so-called &quot;expert system&quot;, with a large number of &quot;if -&quot; (Then - If) rules defined, top-down thinking.</p><p>Neural Network Artifical (artificial neural network), marking the other kind of bottom-up ideas.</p><p>&nbsp;http://n.sinaimg.cn/tech/transform/20160223/tpiF-fxprucs6391728.png</p><p>A computational model, which is divided into a neural network, usually requires a large number of nodes connected to each other (also known as&#39; neurons&#39;), and has two characteristics:</p><p>1,Each neuron uses a activation function to receive the weighted input values from other neurons and calculate the output value.</p><p>2,The weight between neurons , the algorithm will continue to learn and adjust the weight value</p><p>3,The cost function evaluates the quality of the output results, the similarity between output value and the correct value.</p><p>4,Learning algorithm is self-taught based on the results of the cost function, it finds the optimal weights between neurons quickly.</p><p><br/></p><p>In this thesis,&nbsp;</p><p>Therefore, the neural network computing model requires a large number of data to train.</p><p><br/></p><p>In grid world:</p><p><br/></p><p>1.<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>produce the data set</p><p>It is easy to produce the trajectory with (s,a,r,s’)</p><p>2.<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>build the data set</p><p>3.<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>use neural network</p><p>algotithm</p><p>4 &nbsp;result</p><p>The fitted Q iteration get the same result with the Q-learning, which means this method works well with the trajectory.</p><p><br/></p>','',0),(49,0,'<p style=\"white-space: normal;\">1．<span style=\"font-stretch: normal; font-size: 9px; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;</span><span style=\"font-family: Verdana, sans-serif; color: rgb(46, 46, 46); background: white;\">Mnemosyne</span></p><p style=\"white-space: normal;\"><span style=\"font-family: Verdana, sans-serif; color: rgb(46, 46, 46); background: white;\">Mnemosyne uses a sophisticated algorithm to schedule the besttime for a card to come up for review.&nbsp;</span></p><p style=\"white-space: normal;\"><span style=\"font-family: Verdana, sans-serif; color: rgb(46, 46, 46); background: white;\">Difficult cards that you tend to forgetquickly will be scheduled more often, while Mnemosyne won&#39;t waste your time onthings you remember well.</span></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">There are eleven feilds in the log: user_id, event, timestamp, object_id, grade, easiness, acq_reps, ret_reps,</p><p style=\"white-space: normal;\">lapses, acq_reps_since_lapse, ret_reps_since_lapse, scheduled_interval, actual_interval, thinking_time, next_rep.</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">The meaning of these fields are show in the follow tables:</p><p style=\"white-space: normal;\"><span style=\"color: rgb(34, 34, 34); font-family: Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);\"></span></p><p style=\"white-space: normal;\">user_id text,&nbsp;<span style=\"color: rgb(34, 34, 34); font-family: Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);\">autonomous user ID&nbsp;</span></p><p style=\"white-space: normal;\">event integer,&nbsp;<span style=\"color: rgb(34, 34, 34); font-family: Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);\">session #&nbsp;</span></p><p style=\"white-space: normal;\">timestamp integer,&nbsp;<span style=\"color: rgb(34, 34, 34); font-family: Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);\">timestamp&nbsp;</span></p><p style=\"white-space: normal;\">object_id text,&nbsp;<span style=\"color: rgb(34, 34, 34); font-family: Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);\">item hashed value (for card ID)&nbsp;</span></p><p style=\"white-space: normal;\">grade integer,&nbsp;<span style=\"color: rgb(34, 34, 34); font-family: Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);\">grade assignment&nbsp;</span></p><p style=\"white-space: normal;\">easiness real,&nbsp;<span style=\"color: rgb(34, 34, 34); font-family: Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);\">current easiness factor&nbsp;</span></p><p style=\"white-space: normal;\">acq_reps integer,&nbsp;<span style=\"color: rgb(34, 34, 34); font-family: Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);\">total # of times card has been viewed for acquistion&nbsp;</span></p><p style=\"white-space: normal;\">ret_reps integer,&nbsp;<span style=\"color: rgb(34, 34, 34); font-family: Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);\">total # of times card has been viewed for review&nbsp;</span></p><p style=\"white-space: normal;\">lapses integer,&nbsp;<span style=\"color: rgb(34, 34, 34); font-family: Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);\"># of &quot;lapses&quot; -- how many times card was forgotten</span></p><p style=\"white-space: normal;\">acq_reps_since_lapse integer,<span style=\"color: rgb(34, 34, 34); font-family: Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);\"># of times card has been viewed for acquistion since last lapse&nbsp;</span></p><p style=\"white-space: normal;\">ret_reps_since_lapse integer,<span style=\"color: rgb(34, 34, 34); font-family: Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);\"># of times card has been viewed for review since last lapse&nbsp;</span></p><p style=\"white-space: normal;\">scheduled_interval integer,<span style=\"color: rgb(34, 34, 34); font-family: Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);\"># of days for this scheduled review interval&nbsp;</span></p><p style=\"white-space: normal;\">actual_interval integer,<span style=\"color: rgb(34, 34, 34); font-family: Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);\"># of days for actual review interval&nbsp;</span></p><p style=\"white-space: normal;\">thinking_time integer,<span style=\"color: rgb(34, 34, 34); font-family: Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);\"># of days til next review interval&nbsp;</span></p><p style=\"white-space: normal;\">next_rep integer，<span style=\"color: rgb(34, 34, 34); font-family: Arial, Helvetica, sans-serif; font-size: 13px; background-color: rgb(255, 255, 255);\">study duration, or &quot;thinking time&quot;&nbsp;</span></p><p style=\"white-space: normal;\"><span style=\"color: rgb(34, 34, 34); font-family: Arial, Helvetica, sans-serif; background-color: rgb(255, 255, 255);\">&nbsp;</span><br/></p><p style=\"white-space: normal;\"><span style=\"font-family: Verdana, sans-serif; color: rgb(46, 46, 46); background: white;\"><br/></span></p><p style=\"white-space: normal;\">&nbsp;</p><p style=\"white-space: normal;\">2．<span style=\"font-stretch: normal; font-size: 9px; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;</span><span style=\"font-family: Verdana, sans-serif; color: rgb(46, 46, 46); background: white;\">Design</span></p><p style=\"white-space: normal;\"><span style=\"font-family: Verdana, sans-serif; color: rgb(46, 46, 46); background: white;\">There three parts of reinforcement learning method.</span></p><p style=\"white-space: normal;\"><span style=\"font-family: Verdana, sans-serif; color: rgb(46, 46, 46); background: white;\">State: In our project, some fields are chosen for state.</span></p><p style=\"white-space: normal;\"><span style=\"font-family: Verdana, sans-serif; color: rgb(46, 46, 46); background: white;\">Action: In our project, the easiness factor is defined as theaction.</span></p><p style=\"white-space: normal;\"><span style=\"font-family: Verdana, sans-serif; color: rgb(46, 46, 46); background: white;\">Reward:</span></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><span style=\"font-family: Verdana, sans-serif; color: rgb(46, 46, 46); background: white;\">3. &nbsp;algorithm implementation</span></p><p><span style=\"font-family: Verdana, sans-serif; color: rgb(46, 46, 46); background: white;\"><br/></span></p><p><br/></p>','',0),(50,0,'<p>待续</p>','',0),(51,0,'<p>链表是面试最常见的题目，因为链表一般思路简单，但是实现起来却有很多细节要考虑。一旦思路不对，就会陷入各种指针跳来跳去的尴尬。</p><p>链表的操作：</p><p>１，链表找中点：</p><p><br/></p><p>ListNode slow = head, fast = head.next;</p><p>while( fast != null &amp;&amp; fast.next != null) {</p><p>&nbsp;&nbsp;&nbsp;&nbsp; fast = fast.next.next;<br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp; slow = slow.next;<br/></p><p>}</p><p><br/></p><p>注意点1: fast 是从head.next 开始，而不是head 开始．因为如果从head 开始，那链表数是偶数时，会找到中点的后一点．</p><p>注意点2:终止条件 fast != null 针对于链表个数为奇数， fast.next != null 针对于链表个数是偶数．</p><p><br/></p><p>这和数组的中点, length / 2 的结果是一致的. &nbsp;</p><p><br/></p><p><br/></p><p><br/></p><p>２，反转 25. Reverse Nodes in K-Group.</p><p>之前以为链表反转很简单，谁知今天做了好长时间才做出来，主要还是思路不明确。痛定思痛，好好整理</p><p>其实反转所有的操作都是针对current 指针的，短短四行代码，浓缩的都是精华。</p><p>设置 last 和 cur 指针 分别指向链表的前两个节点（当然dumy节点不算),</p><p>第一步：把cur节点分离出来，把cur的下一个节点 用last 把链表连上 last-&gt;next = cur-&gt;next;</p><p>第二步和第三步是一个操作：把cur 节点插入dumy 和第一个节点之间 cur-&gt;next = pre-&gt;next; pre-&gt;next = cur;</p><p>第四步：将cur 指针后移一位， cur = last-&gt;next;</p><p>while(cur != NULL){</p><p>&nbsp; &nbsp; last-&gt;next = cur-&gt;next;</p><p>&nbsp; &nbsp; cur-&gt;next = pre-&gt;next;</p><p>&nbsp; &nbsp; pre-&gt;next = cur;</p><p>&nbsp; &nbsp; cur = last-&gt;next;</p><p>}</p><p>这是一个完美的圈。</p><p>注意：</p><p>1,不能用随便new一个节点 tmp 保存 cur-&gt;next, 不然会断链</p><p>2,pre 与 last 指针指向的节点是不变的， 变得只有cur 指向的节点，变与不变。</p><p>3,不能 用 cur 代替 cur-&gt;next = pre-&gt;next 里的 pre-&gt;next, 因为不是两个节点相互反转，而是不断的往前插入</p><p>以 0-&gt;1-&gt;2-&gt;3-&gt;4 为例：</p><p>一句话总结：current 插向前，0,1 永不变。</p><p>链表的问题：</p><p>1，dumy 节点</p><p>2，断链</p><p>3，空指针</p><p>4，迭代时的指针逻辑错误</p><p><br/></p><p>反转链表的迭代写法．</p><p><br/></p><p>２．Add Two Numbers</p><p><br/></p><p><br/></p>','',0),(60,0,'<p>二叉树题目简单，但是变化繁多．特此总结．</p><p><br/></p><p>类型一： 遍历二叉树．</p><p>遍历二叉树是很多题目的基础，重中之重．</p><p><br/></p><p>二叉树遍历分为深度，层次遍历．</p><p><br/></p><p>深度遍历又分为前序，中序，后序．三大遍历．</p><p><br/></p><p>三种遍历的递归写法比较简单，暂时不讨论．</p><p><br/></p><p>二叉树的非递归遍历：</p><p>基本思路，先将左子树不断压栈，左子树为空时，将从栈顶节点の右子树作为当前节点．<br/></p><p><br/></p><p>中序：</p><pre class=\"brush:java;toolbar:false\">Stack&nbsp;s&nbsp;=&nbsp;new&nbsp;Stack();\r\nTreeNode&nbsp;p&nbsp;=&nbsp;root;\r\nwhile(&nbsp;!s.isEmpty()&nbsp;||&nbsp;p&nbsp;!=&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;while(&nbsp;p&nbsp;!=&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.push(p);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;=&nbsp;p.left;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;TreeNode&nbsp;node&nbsp;=&nbsp;s.pop();\r\n&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(node.val);\r\n&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;=&nbsp;node.right;\r\n}</pre><p><br/></p><p>前序：</p><pre class=\"brush:java;toolbar:false\">Stack&nbsp;s&nbsp;=&nbsp;new&nbsp;Stack();\r\nTreeNode&nbsp;p&nbsp;=&nbsp;root;\r\nwhile(&nbsp;!s.isEmpty()&nbsp;||&nbsp;p&nbsp;!=&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;while(&nbsp;p&nbsp;!=&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(p.val);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;=&nbsp;p.left;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;TreeNode&nbsp;node&nbsp;=&nbsp;s.pop();\r\n&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;=&nbsp;node.right;\r\n}</pre><p><br/></p><p>前序，中序的思路一样，只是打印节点的位置不同．</p><p><br/></p><p>后序：还是前序，中序基本的思路，只不过节点第一次出栈时先压回栈顶，第二次出栈在打印出来,　可以在TreeNode 节点里加 flag 或者　用hashSet 记录是否第一次出现.</p><p><br/></p><pre class=\"brush:java;toolbar:false\">Stack&nbsp;s&nbsp;=&nbsp;new&nbsp;Stack();\r\nSet&nbsp;set&nbsp;=&nbsp;new&nbsp;HashSet();&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\nTreeNode&nbsp;p&nbsp;=&nbsp;root;\r\nwhile&nbsp;(!s.empty()&nbsp;||&nbsp;p&nbsp;!=&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;while(p&nbsp;!=&nbsp;null)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.push(p);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;=&nbsp;p.left;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;TreeNode&nbsp;node&nbsp;=&nbsp;s.pop();\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!set.contains(node))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set.add(node);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.push(node);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;=&nbsp;node.right;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list.add(node.val);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;\r\n}</pre><p><br/></p><p>类型二： 构造二叉树</p><p><br/></p>','',0),(76,0,'<p>线段树，索引树</p><p style=\"white-space: normal;\">303<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>Range Sum Query - Immutable &nbsp;&nbsp;<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>29.3%<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>Easy<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span></p><p style=\"white-space: normal;\">304<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>Range Sum Query 2D - Immutable &nbsp;&nbsp;<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>24.9%<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>Medium<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span></p><p style=\"white-space: normal;\">307<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>Range Sum Query - Mutable &nbsp;&nbsp;<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>20.4%<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>Medium<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span></p><p style=\"white-space: normal;\">308<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>Range Sum Query 2D - Mutable &nbsp;&nbsp;</p><p style=\"white-space: normal;\">这四道题是很好的一个系列题．从一维到二维，从矩阵到树 从0(n^2) 到 O(logn)， 正是计算机优化的方向．</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">303 一维数组</p><p style=\"white-space: normal;\">304 二维数组</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">307 segment tree</p><p helvetica=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\" style=\"margin-top: 0px; margin-bottom: 10px; white-space: normal; box-sizing: border-box; color: rgb(51, 51, 51);\">Given an integer array&nbsp;<em style=\"box-sizing: border-box;\">nums</em>, find the sum of the elements between indices&nbsp;<em style=\"box-sizing: border-box;\">i</em>&nbsp;and&nbsp;<em style=\"box-sizing: border-box;\">j</em>&nbsp;(<em style=\"box-sizing: border-box;\">i</em>&nbsp;≤&nbsp;<em style=\"box-sizing: border-box;\">j</em>), inclusive.</p><p style=\"white-space: normal;\"><span helvetica=\"\" font-size:=\"\" background-color:=\"\" style=\"color: rgb(51, 51, 51);\">The&nbsp;</span><em helvetica=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\" style=\"box-sizing: border-box; color: rgb(51, 51, 51);\">update(i,&nbsp;val)</em><span helvetica=\"\" font-size:=\"\" background-color:=\"\" style=\"color: rgb(51, 51, 51);\">&nbsp;function modifies&nbsp;</span><em helvetica=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\" style=\"box-sizing: border-box; color: rgb(51, 51, 51);\">nums</em><span helvetica=\"\" font-size:=\"\" background-color:=\"\" style=\"color: rgb(51, 51, 51);\">&nbsp;by updating the element at index&nbsp;</span><em helvetica=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\" style=\"box-sizing: border-box; color: rgb(51, 51, 51);\">i</em><span helvetica=\"\" font-size:=\"\" background-color:=\"\" style=\"color: rgb(51, 51, 51);\">&nbsp;to&nbsp;</span><em helvetica=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\" style=\"box-sizing: border-box; color: rgb(51, 51, 51);\">val</em><span helvetica=\"\" font-size:=\"\" background-color:=\"\" style=\"color: rgb(51, 51, 51);\">.</span></p><p helvetica=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\" style=\"margin-top: 0px; margin-bottom: 10px; white-space: normal; box-sizing: border-box; color: rgb(51, 51, 51);\"><span style=\"box-sizing: border-box; font-weight: 700;\">Example:</span><br style=\"box-sizing: border-box;\"/></p><pre courier=\"\" font-size:=\"\" padding:=\"\" margin-top:=\"\" margin-bottom:=\"\" line-height:=\"\" color:=\"\" word-break:=\"\" word-wrap:=\"\" background-color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" style=\"box-sizing: border-box; overflow: auto;\">Given&nbsp;nums&nbsp;=&nbsp;[1,&nbsp;3,&nbsp;5]\r\n\r\nsumRange(0,&nbsp;2)&nbsp;-&gt;&nbsp;9\r\nupdate(1,&nbsp;2)\r\nsumRange(0,&nbsp;2)&nbsp;-&gt;&nbsp;8</pre><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">reference:http://blog.csdn.net/metalseed/article/details/8039326</p><p style=\"white-space: normal;\">线段树，又称区间树， 在区间统计问题上，如区间动态查询，能达到较快速度。</p><p style=\"white-space: normal;\">节点中包含了 start end, 还有sum, max, min 等信息。</p><p style=\"white-space: normal;\">一般线段树空间是数组的四倍？？？</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><img src=\"http://www.wutianqi.com/wp-content/uploads/2010/08/segment1.png\" width=\"500\" height=\"275\"/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">308 二进制索引树（树状数组）</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">能用树状数组解决的题基本都能用segment tree 解决， 但是反之不行。</p><p style=\"white-space: normal;\">树状数组效率比线段树要高。</p><p><br/></p>','',0),(64,0,'<p>这题是pinterest 的面试题．</p><p>第一种类型：在海量数据中找中位数．</p><p><span style=\"color: rgb(51, 51, 51); font-family: Arial;  background-color: rgb(255, 255, 255);\">只有2G内存的pc机，在一个存有10G个整数的文件，从中找到中位数，写一个算法．</span></p><p><span style=\"color: rgb(51, 51, 51); font-family: Arial;  background-color: rgb(255, 255, 255);\"><br/></span></p><p>第二种类型：在分布式数据中找中位数</p><p><br/></p><p><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\">面试时经常被问</span><span style=\"margin: 0px; padding: 0px; max-width: 100%; color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255); word-break: break-word; box-sizing: border-box !important; word-wrap: break-word !important;\">到的一</span><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\">个问题：几万亿的数据分布到几千台网络连接的计算机中，怎么最少的数据交换，最快的速度找到这些数据的中位数？</span></p><p><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\"><br/></span></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\">估算这些数据要多少台机器.&nbsp;</span></span></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\">一万亿（10^12）个整数，按每个整数4个字节，4x10^12字节＝4x10^9KB=4x10^6MB=4x10^3GB，如果每个机器内存4GB的话，需要存放到1000台机器上。所以，不是简单的排序就好解决的问题.</span></span></span></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\"><br/></span></span></span></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\">我回答的是全排序，我想面试官肯定是一脸懵逼吧．</span></span></span></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\"></span></span></span></p><p><br/></p><p><br/></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\">１．快排的partition 思想</span></span></span></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\"><br/></span></span></span></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\">先了解下　顺序统计量</span></span></span></p><p><span style=\"background-color: rgb(255, 255, 238); color: rgb(51, 51, 51); font-family: zuoyeFont_mathFont, \" microsoft=\"\" font-size:=\"\"></span></p><p style=\"white-space: normal;\">在统计学中，样本的第k顺序统计量（英语：Order Statistics）即它从小到大排列时的第k个值，常用于非参数估计与推断中。常见的顺序统计量包括样本的最大值、最小值、中位数等。</p><p><span style=\"background-color: rgb(255, 255, 238); color: rgb(51, 51, 51); font-family: zuoyeFont_mathFont, \" microsoft=\"\" font-size:=\"\"></span><br/></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\">n个元素，第１顺序统计量就是最小元素，第n顺序统计量就是最大元素．对于 2n 的元素，　第n顺序统计量就是中位数．</span></span></span></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\"><br/></span></span></span></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\">这里仅仅是用了快排的思想，而并不需要真正的进行快排．</span></span></span></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\"><br/></span></span></span></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\">情况一：piovt 就是中位数</span></span></span></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\">例子　：　<span class=\"s1\" style=\"margin: 0px; padding: 0px; max-width: 100%; color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255); word-break: break-word; line-height: 1.7; box-sizing: border-box !important; word-wrap: break-word !important;\">［4 3 1 1 5&nbsp;</span><span style=\"margin: 0px; padding: 0px; max-width: 100%; color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255); text-decoration-line: underline; word-break: break-word; box-sizing: border-box !important; word-wrap: break-word !important;\"><span class=\"s2\" style=\"margin: 0px; padding: 0px; max-width: 100%; word-break: break-word; line-height: 1.7; box-sizing: border-box !important; word-wrap: break-word !important;\">9</span></span><span class=\"s1\" style=\"margin: 0px; padding: 0px; max-width: 100%; color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255); word-break: break-word; line-height: 1.7; box-sizing: border-box !important; word-wrap: break-word !important;\">&nbsp;2 6 5 3 5］中位数就是第６顺序统计量．</span></span></span></span></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\"><span class=\"s1\" style=\"margin: 0px; padding: 0px; max-width: 100%; color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255); word-break: break-word; line-height: 1.7; box-sizing: border-box !important; word-wrap: break-word !important;\">将第一个元素作为分区的<span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\">&nbsp;piovt</span></span></span></span></span></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\"><span class=\"s1\" style=\"margin: 0px; padding: 0px; max-width: 100%; color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255); word-break: break-word; line-height: 1.7; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\"><span class=\"s1\" style=\"margin: 0px; padding: 0px; max-width: 100%; color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255); word-break: break-word; line-height: 1.7; box-sizing: border-box !important; word-wrap: break-word !important;\">［<span style=\"margin: 0px; padding: 0px; max-width: 100%; color: rgb(255, 0, 0); word-break: break-word; box-sizing: border-box !important; word-wrap: break-word !important;\">3 1 1 2 3</span>&nbsp;</span><span style=\"margin: 0px; padding: 0px; max-width: 100%; color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255); text-decoration-line: underline; word-break: break-word; box-sizing: border-box !important; word-wrap: break-word !important;\"><span class=\"s2\" style=\"margin: 0px; padding: 0px; max-width: 100%; word-break: break-word; line-height: 1.7; box-sizing: border-box !important; word-wrap: break-word !important;\">4</span></span><span class=\"s1\" style=\"margin: 0px; padding: 0px; max-width: 100%; color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255); word-break: break-word; line-height: 1.7; box-sizing: border-box !important; word-wrap: break-word !important;\">&nbsp;</span><span class=\"s1\" style=\"margin: 0px; padding: 0px; max-width: 100%; color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255); word-break: break-word; line-height: 1.7; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 176, 80); word-break: break-word; box-sizing: border-box !important; word-wrap: break-word !important;\">5 9 6 5 5</span></span><span class=\"s1\" style=\"margin: 0px; padding: 0px; max-width: 100%; color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255); word-break: break-word; line-height: 1.7; box-sizing: border-box !important; word-wrap: break-word !important;\">］</span><br/></span></span></span></span></span></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\">刚好第６顺序统计量就是４，就刚好是中位数．</span></span></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\"><span class=\"s1\" style=\"margin: 0px; padding: 0px; max-width: 100%; color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255); word-break: break-word; line-height: 1.7; box-sizing: border-box !important; word-wrap: break-word !important;\"><br/></span></span></span></span></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\">情况二：piovt 在中位数右边</span></span></span></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\"></span></span></span></p><p class=\"p1\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 10px 0px; color: rgb(51, 51, 51); max-width: 100%; clear: both; min-height: 1em; white-space: normal; background-color: rgb(255, 255, 255); word-break: break-word; font-family: arial; font-size: 14px; line-height: 25px; box-sizing: border-box !important; word-wrap: break-word !important;\"><span class=\"s1\" style=\"margin: 0px; padding: 0px; max-width: 100%; word-break: break-word; box-sizing: border-box !important; word-wrap: break-word !important;\">考虑支点在中位数位置右边的情形</span></p><p class=\"p1\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 10px 0px; color: rgb(51, 51, 51); max-width: 100%; clear: both; min-height: 1em; white-space: normal; background-color: rgb(255, 255, 255); word-break: break-word; font-family: arial; font-size: 14px; line-height: 25px; box-sizing: border-box !important; word-wrap: break-word !important;\"><span class=\"s1\" style=\"margin: 0px; padding: 0px; max-width: 100%; word-break: break-word; box-sizing: border-box !important; word-wrap: break-word !important;\">L1 ＝ ［6 3 1 1 5&nbsp;<span style=\"margin: 0px; padding: 0px; max-width: 100%; word-break: break-word; text-decoration-line: underline; box-sizing: border-box !important; word-wrap: break-word !important;\">9</span>&nbsp;2 4 5 3 7］</span></p><p class=\"p1\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 10px 0px; color: rgb(51, 51, 51); max-width: 100%; clear: both; min-height: 1em; white-space: normal; background-color: rgb(255, 255, 255); word-break: break-word; font-family: arial; font-size: 14px; line-height: 25px; box-sizing: border-box !important; word-wrap: break-word !important;\"><span class=\"s1\" style=\"margin: 0px; padding: 0px; max-width: 100%; word-break: break-word; box-sizing: border-box !important; word-wrap: break-word !important;\">如果用第一个元素6来分区，我们得到</span></p><p class=\"p2\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 20px 0px; color: rgb(51, 51, 51); max-width: 100%; clear: both; min-height: 1em; white-space: normal; background-color: rgb(255, 255, 255); word-break: break-word; font-family: arial; font-size: 14px; line-height: 25px; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; word-break: break-word; line-height: 1.7; box-sizing: border-box !important; word-wrap: break-word !important;\">L1 ＝ ［<span style=\"margin: 0px; padding: 0px; max-width: 100%; color: rgb(255, 0, 0); word-break: break-word; box-sizing: border-box !important; word-wrap: break-word !important;\">3 1 1 5 5&nbsp;<span style=\"margin: 0px; padding: 0px; max-width: 100%; word-break: break-word; text-decoration-line: underline; box-sizing: border-box !important; word-wrap: break-word !important;\">2</span>&nbsp;4 3&nbsp;</span>6&nbsp;<span style=\"margin: 0px; padding: 0px; max-width: 100%; color: rgb(0, 176, 80); word-break: break-word; box-sizing: border-box !important; word-wrap: break-word !important;\">9 7</span>］</span><span class=\"s1\" style=\"margin: 0px; padding: 0px; max-width: 100%; word-break: break-word; box-sizing: border-box !important; word-wrap: break-word !important;\"></span></p><p class=\"p2\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 20px 0px; color: rgb(51, 51, 51); max-width: 100%; clear: both; min-height: 1em; white-space: normal; background-color: rgb(255, 255, 255); word-break: break-word; font-family: arial; font-size: 14px; line-height: 25px; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; word-break: break-word; line-height: 1.7; box-sizing: border-box !important; word-wrap: break-word !important;\">这次，6移到了第9顺序统计量。因为我们找寻的是第6顺序统计量，我们知道6不是中位数。更因为第9顺序统计量在第6顺序统计量的右边，所以我们知道中位数必须小于6。因此，我们不但知道6不是中位数，中位数也不可能是9或者7。这很重要，因为我们可以完全扔掉这些值。</span></p><p class=\"p1\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 10px 0px; color: rgb(51, 51, 51); max-width: 100%; clear: both; min-height: 1em; white-space: normal; background-color: rgb(255, 255, 255); word-break: break-word; font-family: arial; font-size: 14px; line-height: 25px; box-sizing: border-box !important; word-wrap: break-word !important;\"><span class=\"s1\" style=\"margin: 0px; padding: 0px; max-width: 100%; word-break: break-word; box-sizing: border-box !important; word-wrap: break-word !important;\">L2 ＝ L1 － ［6 9 7］</span></p><p class=\"p1\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 10px 0px; color: rgb(51, 51, 51); max-width: 100%; clear: both; min-height: 1em; white-space: normal; background-color: rgb(255, 255, 255); word-break: break-word; font-family: arial; font-size: 14px; line-height: 25px; box-sizing: border-box !important; word-wrap: break-word !important;\"><span class=\"s1\" style=\"margin: 0px; padding: 0px; max-width: 100%; word-break: break-word; box-sizing: border-box !important; word-wrap: break-word !important;\">L2 ＝ ［3 1 1 5 5&nbsp;<span style=\"margin: 0px; padding: 0px; max-width: 100%; word-break: break-word; text-decoration-line: underline; box-sizing: border-box !important; word-wrap: break-word !important;\">2</span>&nbsp;4 3］</span></p><p class=\"p1\" style=\"margin-top: 0px; margin-bottom: 0px; padding: 10px 0px; color: rgb(51, 51, 51); max-width: 100%; clear: both; min-height: 1em; white-space: normal; background-color: rgb(255, 255, 255); word-break: break-word; font-family: arial; font-size: 14px; line-height: 25px; box-sizing: border-box !important; word-wrap: break-word !important;\"><span class=\"s1\" style=\"margin: 0px; padding: 0px; max-width: 100%; word-break: break-word; box-sizing: border-box !important; word-wrap: break-word !important;\">L1的第6顺序统计量，也就是中位数，这时变成了L2的第6顺序统计量。因为我们扔掉了中间值之后的所有值，我们可以继续寻找同样的顺序统计量。注意了，L2的第6顺序统计量并不是L2的中位数。L2的中位数应该是第4顺序统计量。</span></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\">???</span></span></span></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\">http://blog.csdn.net/v_july_v/article/details/7382693</span></span></span></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\">???<br/></span></span></span><br/></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\">参考:</span></span></span></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\">http://songlee24.github.io/2014/06/22/Kth-Order-Statistic/</span></span></span></p><p><span style=\"color:#333333;font-family:arial\"><span style=\"font-size: 14px; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(51, 51, 51); font-family: arial; font-size: 14px;  background-color: rgb(255, 255, 255);\">http://chuansong.me/n/415438436839</span></span></span></p>','',0),(63,0,'<p>撒</p>','',0),(65,0,'<p>如何设计一个分布式文件系统</p>','',0),(66,0,'<p>(1) 要求设计一个DNS的Cache结构，要求能够满足每秒5000以上的查询，满足IP数据的快速插入，查询的速度要快。（题目还给出了一系列的数据，比如：站点数总共为5000万，IP地址有1000万，等等）</p><p>(2) 有N台机器，M个文件，文件可以以任意方式存放到任意机器上，文件可任意分割成若干块。假设这N台机器的宕机率小于1/3，想在宕机时可以从其他未宕机的机器中完整导出这M个文件，求最好的存放与分割策略。</p><p>(3) 假设有三十台服务器，每个上面都存有上百亿条数据（有可能重复），如何找出这三十台机器中，根据某关键字，重复出现次数最多的前100条？要求用Hadoop来做。</p><p>(4) 设计一个系统，要求写速度尽可能高，说明设计原理。</p><p>(5) 设计一个高并发系统，说明架构和关键技术要点。</p><p>(6) 有25T的log(query-&gt;queryinfo)，log在不段的增长，设计一个方案，给出一个query能快速反回queryinfo</p><p>以上所有问题中凡是不涉及高并发的，基本可以采用google的三个技术解决，分别为：GFS，MapReduce，Bigtable，这三个技术被称为“google三驾马车”，google只公开了论文而未开源代码，开源界对此非常有兴趣，仿照这三篇论文实现了一系列软件，如：Hadoop、HBase、HDFS、Cassandra等。</p><p>在google这些技术还未出现之前，企业界在设计大规模分布式系统时，采用的架构往往是database+sharding+cache，现在很多公司（比如taobao，weibo.com）仍采用这种架构。在这种架构中，仍有很多问题值得去探讨。如采用什么数据库，是SQL界的MySQL还是NoSQL界的Redis/TFS，两者有何优劣？ 采用什么方式sharding（数据分片），是水平分片还是垂直分片？据网上资料显示，weibo.com和taobao图片存储中曾采用的架构是Redis/MySQL/TFS+sharding+cache，该架构解释如下：前端cache是为了提高响应速度，后端数据库则用于数据永久存储，防止数据丢失，而sharding是为了在多台机器间分摊负载。最前端由大块大块的cache组成，要保证至少99%（该数据在weibo.com架构中的是自己猜的，而taobao图片存储模块是真实的）的访问数据落在cache中，这样可以保证用户访问速度，减少后端数据库的压力，此外，为了保证前端cache中数据与后端数据库中数据一致，需要有一个中间件异步更新（为啥异步？理由简单：同步代价太高。异步有缺定，如何弥补？）数据，这个有些人可能比较清楚，新浪有个开源软件叫memcachedb（整合了Berkeley DB和Memcached），正是完成此功能。另外，为了分摊负载压力和海量数据，会将用户微博信息经过片后存放到不同节点上（称为“sharding”）。</p><p>这种架构优点非常明显：简单，在数据量和用户量较小的时候完全可以胜任。但缺定早晚一天暴露出来，即：扩展性和容错性太差，维护成本非常高，尤其是数据量和用户量暴增之后，系统不能通过简单的增加机器解决该问题。</p><p>于是乎，新的架构便出现了。主要还是google的那一套东西，下面分别说一下：</p><p>GFS是一个可扩展的分布式文件系统，用于大型的、分布式的、对大量数据进行访问的应用。它运行于廉价的普通硬件上，提供容错功能。现在开源界有HDFS(Hadoop Distributed File System)，该文件系统虽然弥补了数据库+sharding的很多缺点，但自身仍存在一些问题，比如：由于采用master/slave架构，因而存在单点故障问题；元数据信息全部存放在master端的内存中，因而不适合存储小文件，或者说如果存储的大量小文件，那么存储的总数据量不会太大。</p><p>MapReduce是针对分布式并行计算的一套编程模型。他最大的优点是：编程接口简单，自动备份（数据默认情况下会自动备三份），自动容错和隐藏跨机器间的通信。在Hadoop中，MapReduce作为分布计算框架，而HDFS作为底层的分布式存储系统，但MapReduce不是与HDFS耦合在一起的，你完全可以使用自己的分布式文件系统替换掉HDFS。当前MapReduce有很多开源实现，如Java实现Hadoop MapReduce，C++实现Sector/sphere等，甚至有些数据库厂商将MapReduce集成到数据库中了。</p><p>BigTable俗称“大表”，是用来存储结构化数据的，个人觉得，BigTable在开源界最火爆，其开源实现最多，包括：HBase，Cassandra，levelDB等，使用也非常广泛。</p><p>除了google的这三家马车，还有其他一些技术：</p><p>Dynamo：亚马逊的key-value模式的存储平台，可用性和扩展性都很好，采用DHT（Distributed Hash Table）对数据分片，解决单点故障问题，在Cassandra中，也借鉴了该技术，在BT和电驴的中，也采用了类似算法。</p><p>虚拟节点技术：该技术常用于分布式数据分片中。具体应用场景是：有一大坨数据（maybe TB级或者PB级），我们需按照某个字段（key）分片存储到几十（或者更多）台机器上，同时想尽量负载均衡且容易扩展。传统的做法是：Hash(key) mod N，这种方法最大缺点是不容易扩展，即：增加或者减少机器均会导致数据全部重分布，代价忒大。于是乎，新技术诞生了，其中一种是上面提到的DHT，现在已经被很多大型系统采用，还有一种是对“Hash(key) mod N”的改进：假设我们要将数据分不到20台机器上，传统做法是hash(key) mod 20，而改进后，N取值要远大于20，比如是20000000，然后我们采用额外一张表记录每个节点存储的key的模值，比如：</p><p>node1：0~1000000</p><p>node2：1000001~2000000</p><p>。。。。。。</p><p>这样，当添加一个新的节点时，只需将每个节点上部分数据移动给新节点，同时修改一下这个表即可。</p><p>Thrift：Thrift是一个跨语言的RPC框架，分别解释一下“RPC”和“跨语言”，RPC是远程过程调用，其使用方式与调用一个普通函数一样，但执行体发生在远程机器上。跨语言是指不同语言之间进行通信，比如c/s架构中，server端采用C++编写，client端采用PHP编写，怎样让两者之间通信，thrift是一种很好的方式。</p><p>文章最前面的几道题均可以映射到以上几个系统中的某个模块中，如：</p><p>（1） 关于高并发系统设计。主要有以下几个关键技术点：缓存，索引，数据分片，锁粒度尽可能小。</p><p>（2） 问题2涉及到现在通用的分布式文件系统的副本存放策略。一般是将大文件切分成小的block（如64MB）后，以block为单位存放三份到不同的节点上，这三份数据的位置需根据网络拓扑结构配置，一般而言，如果不考虑跨数据中心，可以这样存放：两个副本存放在同一个机架的不同节点上，而另外一个副本存放在另一个机架上，这样从效率和可靠性上，都是最优的（这个google公布的文档中有专门的证明，有兴趣的可参阅一下。）。如果考虑跨数据中心，可将两份存在一个数据中心的不同机架上，另一份放到另一个数据中心。</p><p>（3）问题4涉及到BigTable的模型。主要思想是将随机写转化为顺序写，进而大大提高写速度。具体是：由于磁盘物理结构的独特设计，其并发的随机写（主要是因为磁盘寻道时间长）非常慢，考虑到这一点，在BigTable模型中，首先会将并发写的大批数据放到一个内存表（称为“memtable”）中，当该表大到一定程度后，会顺序写到一个磁盘表（称为“SSTable”）中，这种写是顺序写，效率极高。说到这，可能有读者问，随机读可不可以这样优化？答案是：看情况。通常而言，如果读并发度不高，则不可以这么做，因为如果将多个读重新排列组合后再执行，系统的响应时间太慢，用户可能接受不了，而如果读并发度极高，也许可以采用类似机制。</p><p><br/></p><p>参考：http://dongxicheng.org/search-engine/system-designing-in-finging-jobs/</p><p><br/></p>','',0),(67,0,'<p>时间复杂度一般分位 O(2^n) &nbsp;O(n^2) O(N log N) &nbsp;O(N) O(logN)</p><p><br/></p><p>一般认为复杂度大于等于　O(n^2) 　就算是非常高的了．</p><p><br/></p><p>递归算法的复杂度可能达到指数级．</p><p><br/></p><p>求最大公约数gcd 的时间复杂度是　log2(N) N是大的那个．</p>','',0),(68,0,'<p>明天就要onsite big stream了． C++ 面试，不管怎么样，都要淡定！沉着</p><p><br/></p><p>整理一下Ｃ＋＋面试题．</p><p><br/></p><p>指针和引用</p><p><br/></p><p>转换类型．</p><p><br/></p><p>先分为显式和隐式两种类型转换．显示又有四种．隐式转换是Ｃ语言的遗留，应该尽量避免．</p><p>四种显示类型转换：</p><p>static_cast 不安全</p><p>const_cast　去除变量的常量性(const) 和　易变性　(volatitle)</p><p>dynamic_cast 失败会返回NULL 或者　抛异常</p><p>reinterpret_cast 常用的一个用途是转换函数指针类型，即可以将一种类型的函数指针转换为另一种类型的函数指针，但这种转换可能会导致不正确的结果。总之，reinterpret_cast 只用于底层代码，一般我们都用不到它，如果你的代码中使用到这种转型，务必明白自己在干什么。</p><p><br/></p><p>references :&nbsp;http://www.cppblog.com/kesalin/archive/2012/10/28/type_cast.html</p><p><br/></p><p>虚函数列表：</p><p><br/></p><p>1 听说过C++<br/>常见的问题 什么是类，什么继承<br/>new和malloc有什么区别<br/>什么是虚函数，什么是虚继承<br/>之类的泛泛而谈的入门问题<br/>2 会C++<br/>new实际上执行了什么操作，可能在什么步骤出现异常<br/>怎么写一个class，禁止分配在栈上<br/>怎么突破private的限制访问变量<br/>虚继承的细节<br/>怎么自己模拟实现引用<br/>3 比较了解C++<br/>主要是一些边角的语法或者是不常见的问题<br/>逗号表达式，位域<br/>初始化列表的异常怎么捕获<br/>对于常见的主流编译器，写不写inline有什么影响<br/>完美转发<br/>怎么在编译器判断一个类中有没有定义某个特定的方法<br/>构造函数中调析构函数会有什么结果</p><p><br/><br/>作者：Zenzen<br/>链接：https://www.zhihu.com/question/20184857/answer/40666524<br/>来源：知乎<br/>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p><br/></p>','',0),(71,0,'<p>完美三角形．给出若干个矩形的左下和右上角坐标．判断这些矩形能不能刚好组成一个大的矩形．不能有重叠，不能有空隙．</p><p><br/></p><p>这题的思路是：</p><p>１．最外面的四个点只出现一次，　其余点均出现两个．</p><p>２．最外面四个点构成的矩形面积刚好是所有小矩形的面积之和．</p><pre class=\"brush:cpp;toolbar:false\">class&nbsp;Solution&nbsp;{\r\npublic:\r\n&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;isRectangleCover(vector&lt;vector&lt;int&gt;&gt;&amp;&nbsp;rectangles)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;len&nbsp;=&nbsp;rectangles.size();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;x1&nbsp;=&nbsp;INT_MAX;//left_buttom_x\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;x2&nbsp;=&nbsp;INT_MIN;//right_top_x\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;y1&nbsp;=&nbsp;INT_MAX;//left_button_y\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;y2&nbsp;=&nbsp;INT_MIN;//right_top_y\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set&lt;pair&lt;int,&nbsp;int&gt;&gt;&nbsp;points;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;area&nbsp;=&nbsp;0;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;len;&nbsp;i++)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vector&lt;int&gt;&nbsp;v&nbsp;=&nbsp;rectangles[i];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x1&nbsp;=&nbsp;min(x1,v[0]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y1&nbsp;=&nbsp;min(y1,v[1]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x2&nbsp;=&nbsp;max(x2,v[2]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y2&nbsp;=&nbsp;max(y2,v[3]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;area&nbsp;+=&nbsp;(v[2]&nbsp;-&nbsp;v[0])&nbsp;*&nbsp;(v[3]&nbsp;-&nbsp;v[1]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!points.insert(make_pair(v[0],v[1])).second&nbsp;==&nbsp;true)&nbsp;points.erase(make_pair(v[0],v[1]));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!points.insert(make_pair(v[0],v[3])).second)&nbsp;points.erase(make_pair(v[0],v[3]));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!points.insert(make_pair(v[2],v[3])).second)&nbsp;points.erase(make_pair(v[2],v[3]));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!points.insert(make_pair(v[2],v[1])).second)&nbsp;points.erase(make_pair(v[2],v[1]));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(points.size()!=&nbsp;4&nbsp;||&nbsp;!points.count(make_pair(x1,y1))&nbsp;||!points.count(make_pair(x1,y2))&nbsp;||&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;!points.count(make_pair(x2,y1))&nbsp;||&nbsp;!points.count(make_pair(x2,y1)))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;area&nbsp;==&nbsp;(x2&nbsp;-&nbsp;x1)&nbsp;*&nbsp;(y2&nbsp;-y1);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n};</pre><p><br/></p><p>在set insert 后，　返回一个pair&lt; set&lt;&gt;::iterator, bool&gt; 插入成功则为true, 插入失败则为false.</p><p><br/></p><p><br/></p><p><br/></p><p><br/></p>','',0),(72,0,'<p>2017 / 07 / 16</p><p>有一个新的开始，一年的时间，经历了太多．静下心来，踏踏实实．面试的时候连一个 map 都写不出来，这怎么也说不过去吧．</p><p>做你不想做的事，就能逆天改命！</p>','',0),(73,0,'<p>LFU 最近最少访问Cache.</p><p>　</p><p>这题还是双链表，加hash map.</p><p><br/></p><p><br/></p><p><br/></p>','',0),(74,0,'<p><span style=\"color: rgb(255, 0, 0);\">map 是红黑树,　unsorted_map 是hash表．</span></p>','',0),(77,0,'<p>索引树</p>','',0),(79,0,'<p><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: medium;  background-color: rgb(255, 255, 255);\">它的模板声明带有三个参数，priority_queue&lt;Type, Container, Functional&gt;　</span><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: medium;  background-color: rgb(255, 255, 255);\">Type 为数据类型， Container 为保存数据的容器，Functional 为元素比较方式。</span></p><p><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: medium;  background-color: rgb(255, 255, 255);\">Container 必须是用数组实现的容器，比如 vector, deque 但不能用 list.　</span></p><p><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: medium;  background-color: rgb(255, 255, 255);\"><br/></span></p><p><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: medium;  background-color: rgb(255, 255, 255);\">STL里面默认用的是 vector. 比较方式默认用 operator&lt; , 所以如果你把后面俩个</span><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: medium;  background-color: rgb(255, 255, 255);\">参数缺省的话，优先队列就是大顶堆，队头元素最大。</span></p><p><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: medium;  background-color: rgb(255, 255, 255);\"><br/></span></p><p>默认最大堆</p><p><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: medium;  background-color: rgb(255, 255, 255);\">priority_queue&lt;int&gt; qi;</span></p><p><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: medium;  background-color: rgb(255, 255, 255);\"><br/></span></p><p>最小堆</p><p><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: medium;  background-color: rgb(255, 255, 255);\">priority_queue&lt;int, vector&lt;int&gt;, greater&lt;int&gt; &gt;qi2;</span></p><p><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: medium;  background-color: rgb(255, 255, 255);\"><br/></span></p><p><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: medium;  background-color: rgb(255, 255, 255);\"><br/></span></p>','',0),(80,0,'<p>今天一大早就到pinterest 报道了，　其实我发现实在是太早了，八点半的话uber 还没涨价．</p><p><br/></p><p>接下来，就是拼尽全力的时候了，考托福，进硅谷．</p><p><br/></p><p>目标已经实现了3/4 再加把劲了．</p>','',0),(81,0,'<p>第一天上班pinterest.&nbsp;</p><p><br/></p><p>已经退无可退，只能拼尽全力了．<br/><br/></p>','',0),(82,0,'<p style=\"white-space: normal;\">Hive First day</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><strong>Data repository.</strong></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">Traditional relationship database like MySQL is transaction oriented, it is online and faster. &nbsp;reduce the redundancy.</p><p style=\"white-space: normal;\">The data repository is Theme oriented. &nbsp;It is used for data analysis, &nbsp;so the redundancy and latency might be high.&nbsp;</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">derby is an open source database built on java, the core of derby.jar is only 2M,&nbsp;</p><p style=\"white-space: normal;\">it can be used as single database or application embedded&nbsp;library</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">OLTP (online transaction processing) &nbsp;for database</p><p style=\"white-space: normal;\">OLAP (online analytical processing )for data repository</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">Three definitional characteristics of data repository:</p><ol class=\" list-paddingleft-2\" style=\"width: 958.547px; white-space: normal;\"><li><p>Theme Orient</p></li><li><p>Time Related</p></li><li><p>None Modify</p></li></ol><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">Three functional characteristics of data repository:</p><ol class=\" list-paddingleft-2\" style=\"width: 958.547px; white-space: normal;\"><li><p>Data acquisition</p></li><li><p>Data Storage</p></li><li><p>Data Access<br/></p></li></ol><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><strong>Metadata</strong></p><p style=\"white-space: normal;\">Hive store the meta data in the meta store, such as MySQL, Derby(default).</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">Two kinds of Metadata:</p><ol class=\" list-paddingleft-2\" style=\"width: 958.547px; white-space: normal;\"><li><p>Technology Metadata is created by developer</p></li><li><p>Commerical Metadata is described from the commercial view.</p><p><br/></p></li></ol><p><strong>Hive</strong></p><p>Hive is a data repository tool based on Hadoop.</p><p><br/></p><p>Database table name &nbsp;----&gt; HDFS folder or file<br/></p><p>Database table field &nbsp; &nbsp;----&gt; HDFS colum of file</p><p><br/></p><p>components:</p><p>HCatalog:</p><p>WebHcat: RestFul API</p><p><br/></p><p>Architecture:</p><p><img src=\"http://www.tianshouzhi.com/ueditor/upload/image/20160317/1458228438967063624.png\" width=\"400\" height=\"396\"/></p><p><br/></p><p>https://drive.google.com/open?id=0B43ctlqRX23kX2JNaGd1VXN0UFU</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">Three user interface:</p><p style=\"white-space: normal;\">CLI, Client (Beeline), WebUI</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">start-methods:</p><ol class=\" list-paddingleft-2\" style=\"list-style-type: decimal;\"><li><p style=\"white-space: normal;\">command: /hive/bin/hive or hive -service cli</p></li><li><p style=\"white-space: normal;\">hive web: hive -service hwi</p></li><li><p style=\"white-space: normal;\">remote port 10000 :&nbsp;nohup&nbsp;hive -service hiveserver&nbsp;&amp;<br/></p></li></ol><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><strong>Data in Hive</strong></p><p style=\"white-space: normal;\"><strong><br/></strong></p><p style=\"white-space: normal;\"><strong>Four types of the data model:</strong></p><p style=\"white-space: normal;\">Table: managed table.</p><p style=\"white-space: normal;\">External Table: a link to external data.</p><p style=\"white-space: normal;\">Partition: sub folder, according to one key decided by User.</p><p style=\"white-space: normal;\">Bucket: sub folder, according to the hash value of the specific field.&nbsp;</p><p style=\"white-space: normal;\"><strong><br/></strong></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">reference:</p><p style=\"white-space: normal;\">http://www.tianshouzhi.com/api/tutorials/hive</p><p style=\"white-space: normal;\">https://cwiki.apache.org/confluence/display/Hive</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">&nbsp;</p><p style=\"white-space: normal;\"><br/></p><p><br/></p>','',0),(83,0,'','',0),(84,0,'<p><span style=\"line-height: 0px;\">﻿</span>Hive Data Definition Language<br/></p><p><br/></p><p>Creating Hive Tables</p><p>hive&gt; create table pokes (foo INT, bar STRING);</p><p><br/></p><p>Creating table with Partition</p><p>hive&gt; create table invites (foo INT, bar STRING) partitioned by (ds STRING);</p><p>The partition column is a virtual column. It is not part of the data itself.</p><p><br/></p><p>Browing through tables</p><p>hive&gt; show tables;</p><p>hive&gt;show table &#39;*s&#39;; &nbsp;--table that end with &#39;s&#39;</p><p>hive&gt;DESCRIBE invites.</p><p><br/></p><p>Altering and Dropping Tables</p><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: ConfluenceInstalledFont, monospace; line-height: 1.3; color: rgb(51, 51, 51); font-size: 14px; background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;hive&gt;&nbsp;ALTER&nbsp;TABLE&nbsp;events&nbsp;RENAME&nbsp;TO&nbsp;3koobecaf;\r\n&nbsp;&nbsp;hive&gt;&nbsp;ALTER&nbsp;TABLE&nbsp;pokes&nbsp;ADD&nbsp;COLUMNS&nbsp;(new_col&nbsp;INT);\r\n&nbsp;&nbsp;hive&gt;&nbsp;ALTER&nbsp;TABLE&nbsp;invites&nbsp;ADD&nbsp;COLUMNS&nbsp;(new_col2&nbsp;INT&nbsp;COMMENT&nbsp;&#39;a&nbsp;comment&#39;);\r\n&nbsp;&nbsp;hive&gt;&nbsp;ALTER&nbsp;TABLE&nbsp;invites&nbsp;REPLACE&nbsp;COLUMNS&nbsp;(foo&nbsp;INT,&nbsp;bar&nbsp;STRING,&nbsp;baz&nbsp;INT&nbsp;COMMENT&nbsp;&#39;baz&nbsp;replaces&nbsp;new_col2&#39;)</pre><p><br/></p><p>metadata stored in the own server with the location, version, date.</p><p>the location link to s3,&nbsp;</p><p>in s3, the file stored as sequence file.<key, value=\"\"></key,></p><p><code class=\"cCode\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 12.6px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px; text-indent: 28px;\">SEQUENCEFILE</code><span style=\"color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-indent: 28px;  background-color: rgb(255, 255, 255);\">是Hadoop API 提供的一种二进制文件，它将数据以&lt;key,value&gt;的形式序列化到文件中。这种二进制文件内部使用Hadoop 的标准的Writable 接口实现序列化和反序列化。它与Hadoop API中的MapFile 是互相兼容的。Hive 中的SequenceFile 继承自Hadoop API 的SequenceFile，不过它的key为空，使用value 存放实际的值， 这样是为了避免MR 在运行map 阶段的排序过程。</span></p><p>&nbsp;</p><p><br/></p>','',0),(75,0,'<p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">C++ STL中的remove和erase函数曾经让我迷惑，同样都是删除，两者有什么区别呢？</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中的remove的作用是将等于value的元素放到vector的尾部，但并不减少vector的size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">vector中erase的作用是删除掉某个位置position或一段区域（begin, end)中的元素，减少其size</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">list容器中的remove 成员函数，原型是void remove (const value_type&amp; val);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">他的作用是删除list中值与val相同的节点，释放该节点的资源。<br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而list容器中的erase成员函数，原型是iterator erase (iterator position);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">作用是删除position位置的节点。这也是与remove不同的地方。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">考虑到list::erase是与位置有关，故erase还存在API: &nbsp;&nbsp;iterator erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">对于list 来说，什么时候用 remove 什么时候用 erase ?</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(255, 0, 0);\">erase 删除指定地址上的单个元素，remove 可以删除多个相同元素</span></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">对于set来说，只有erase API，没有remove API。 erase 的作用是把符合要求的元素都删掉。</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">(1) void erase (iterator position);<br/>(2) size_type erase (const value_type&amp; val);<br/>(3) void erase (iterator first, iterator last);</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">综上所述，erase一般是要释放资源，真正删除元素的，</p><p style=\"color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\">而remove主要用在vector中，用于将不符合要求的元素移到容器尾部，而并不删除不符合要求的元素</p><p><br/></p>','',0),(85,0,'<p>Hive Data Manipulation Language.</p><p><br/></p><p>Load Data<br/></p><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: ConfluenceInstalledFont, monospace; line-height: 1.3; color: rgb(51, 51, 51); font-size: 14px; background-color: rgb(255, 255, 255);\">hive&gt;&nbsp;LOAD&nbsp;DATA&nbsp;LOCAL&nbsp;INPATH&nbsp;&#39;./examples/files/kv1.txt&#39;&nbsp;OVERWRITE&nbsp;INTO&nbsp;TABLE&nbsp;pokes;</pre><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: ConfluenceInstalledFont, monospace; line-height: 1.3; color: rgb(51, 51, 51); font-size: 14px; background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;hive&gt;&nbsp;LOAD&nbsp;DATA&nbsp;LOCAL&nbsp;INPATH&nbsp;&#39;./examples/files/kv2.txt&#39;&nbsp;OVERWRITE&nbsp;INTO&nbsp;TABLE&nbsp;invites&nbsp;PARTITION&nbsp;(ds=&#39;2008-08-15&#39;);\r\n&nbsp;&nbsp;hive&gt;&nbsp;LOAD&nbsp;DATA&nbsp;LOCAL&nbsp;INPATH&nbsp;&#39;./examples/files/kv3.txt&#39;&nbsp;OVERWRITE&nbsp;INTO&nbsp;TABLE&nbsp;invites&nbsp;PARTITION&nbsp;(ds=&#39;2008-08-08&#39;);</pre><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: ConfluenceInstalledFont, monospace; line-height: 1.3; color: rgb(51, 51, 51); font-size: 14px; background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;hive&gt;&nbsp;LOAD&nbsp;DATA&nbsp;INPATH&nbsp;&#39;/user/myname/kv2.txt&#39;&nbsp;OVERWRITE&nbsp;INTO&nbsp;TABLE&nbsp;invites&nbsp;PARTITION&nbsp;(ds=&#39;2008-08-15&#39;);</pre><p><br/></p>','',0),(86,0,'<p>Create tables:</p><pre class=\"result notranslate\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, \" courier=\"\" padding:=\"\" margin-top:=\"\" margin-bottom:=\"\" border-radius:=\"\" width:=\"\" border:=\"\" 1px=\"\" solid=\"\" background-color:=\"\" font-size:=\"\" overflow:=\"\" color:=\"\">CREATE&nbsp;TABLE&nbsp;IF&nbsp;NOT&nbsp;EXISTS&nbsp;wfeng_test(&nbsp;age&nbsp;int,&nbsp;name&nbsp;String,\r\nsalary&nbsp;String,&nbsp;title&nbsp;String)&nbsp;COMMENT&nbsp;&#39;Wayne&nbsp;test&#39;;</pre><p><br/></p><p>Insert:</p><pre class=\"result notranslate\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, \" courier=\"\" padding:=\"\" margin-top:=\"\" margin-bottom:=\"\" border-radius:=\"\" width:=\"\" border:=\"\" 1px=\"\" solid=\"\" background-color:=\"\" font-size:=\"\" overflow:=\"\" color:=\"\">INSERT&nbsp;INTO&nbsp;wfeng_test&nbsp;(age,&nbsp;name,&nbsp;salary,&nbsp;title)&nbsp;&nbsp;\r\nVALUES&nbsp;(24,&nbsp;&#39;Wayne&#39;,&nbsp;55,&nbsp;&#39;software&nbsp;engineer&#39;);</pre><p><br/></p><p>Drop table</p><pre class=\"result notranslate\" courier=\"\" padding:=\"\" margin-top:=\"\" margin-bottom:=\"\" border-radius:=\"\" width:=\"\" border:=\"\" 1px=\"\" solid=\"\" background-color:=\"\" font-size:=\"\" overflow:=\"\" color:=\"\" style=\"box-sizing: border-box;\">DROP&nbsp;TABLE&nbsp;wfeng_test</pre><p><br/></p><p>Describe table&nbsp;</p><pre class=\"result notranslate\" courier=\"\" padding:=\"\" margin-top:=\"\" margin-bottom:=\"\" border-radius:=\"\" width:=\"\" border:=\"\" 1px=\"\" solid=\"\" background-color:=\"\" font-size:=\"\" overflow:=\"\" color:=\"\" style=\"box-sizing: border-box;\">DESC&nbsp;wfeng_test</pre><p><br/></p><p>Load Data From AWS S3:</p><p><br/></p><p><span style=\"font-family: verdana, arial, sans-serif; font-size: 12px;  background-color: rgb(247, 247, 247);\">CREATE EXTERNAL TABLE wfeng_test_queries (STRING wfeng_query)</span><br class=\"jive-newline\" style=\"font-family: verdana, arial, sans-serif; font-size: 12px; white-space: normal; background-color: rgb(247, 247, 247);\"/><span style=\"font-family: verdana, arial, sans-serif; font-size: 12px;  background-color: rgb(247, 247, 247);\">ROW FORMAT DELIMITED FIELDS TERMINATED BY &#39;\\t&#39;&nbsp;</span><br class=\"jive-newline\" style=\"font-family: verdana, arial, sans-serif; font-size: 12px; white-space: normal; background-color: rgb(247, 247, 247);\"/><span style=\"font-family: verdana, arial, sans-serif; font-size: 12px;  background-color: rgb(247, 247, 247);\">LOCATION &#39;s3://pinlogs/users/wfeng/Result.csv&#39; ;</span></p><p><br/></p><pre class=\"result notranslate\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; padding: 5px; margin-top: 0px; margin-bottom: 0px; border-radius: 0px; width: 604px; border: 1px solid rgb(214, 214, 214); background-color: rgb(241, 241, 241); font-size: 12px; overflow: auto; color: rgb(49, 49, 49);\">CREATE&nbsp;TABLE&nbsp;IF&nbsp;NOT&nbsp;EXISTS&nbsp;wfeng_test_queries&nbsp;(query&nbsp;String)\r\nCOMMENT&nbsp;‘wayne&nbsp;test’\r\nROW&nbsp;FORMAT&nbsp;DELIMITED\r\nLINES&nbsp;TERMINATED&nbsp;BY&nbsp;‘\\n’\r\nSTORED&nbsp;AS&nbsp;TEXTFILE;</pre><p><br/></p><p>Select and Filters</p><p><br/></p><pre class=\"result notranslate\" courier=\"\" padding:=\"\" margin-top:=\"\" margin-bottom:=\"\" border-radius:=\"\" width:=\"\" border:=\"\" 1px=\"\" solid=\"\" background-color:=\"\" font-size:=\"\" overflow:=\"\" color:=\"\" style=\"box-sizing: border-box;\">SELECT&nbsp;*&nbsp;FROM&nbsp;wfeng_test</pre><p>&nbsp;</p><p>这句话一般是不执行map reduce 的。因为是全表扫描。</p><p><br/></p><p>Group by</p><p><br/></p><p>Join</p><p><br/></p><p>Multi table&nbsp;Insert</p><p><br/></p><p>Stream</p><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: ConfluenceInstalledFont, monospace; line-height: 1.3; color: rgb(51, 51, 51); font-size: 14px; background-color: rgb(255, 255, 255);\">hive&gt;&nbsp;FROM&nbsp;invites&nbsp;a&nbsp;INSERT&nbsp;OVERWRITE&nbsp;TABLE&nbsp;events&nbsp;SELECT&nbsp;TRANSFORM(a.foo,&nbsp;a.bar)&nbsp;AS&nbsp;(oof,&nbsp;rab)&nbsp;USING&nbsp;&#39;/bin/cat&#39;&nbsp;WHERE&nbsp;a.ds&nbsp;&gt;&nbsp;&#39;2008-08-09&#39;;</pre><p><br/></p>','',0),(87,0,'<p><span style=\"line-height: 0px;\">use <strong>explain</strong> to show the execution plan</span></p><p><span style=\"line-height: 0px;\"><br/></span></p><p><span style=\"line-height: 0px;\">﻿</span>Use load or&nbsp;sqoop&nbsp;import</p><p>select&nbsp;</p><p><br/></p><p>SELECT [ALL | DISTINCT] select_expr, select_expr,...</p><p>FROM table_references</p><p>[WHERE where_condition]</p><p>[GROUP BY col_list]</p><p>[<span style=\"color: rgb(255, 0, 0);\">CLUSTER</span> BY col_list&nbsp;</p><p>&nbsp; &nbsp; | [<span style=\"color: rgb(255, 0, 0);\">DISTRIBUTE</span> BY col_list] [<span style=\"color: rgb(255, 0, 0);\">SORT</span> BY col_list]</p><p>&nbsp; &nbsp; | [<span style=\"color: rgb(255, 0, 0);\">ORDER</span> BY col_list]</p><p>[LIMIT number]</p><p><br/></p><p>SORT BY&nbsp;</p><p>Ordering : It orders data at each of ‘N’ reducers, but each reducer can have overlapping ranges of data.&nbsp;</p><p>Outcome : N or more sorted files with overlapping ranges. &nbsp;</p><p><br/></p><p>ORDER BY:&nbsp;</p><p>Ordering : Total Ordered data.&nbsp;</p><p>Outcome : Single output i.e. fully ordered.</p><p><span style=\"color: rgb(255, 0, 0);\"><br/></span></p><p><span style=\"color: rgb(255, 0, 0);\">DISTRIBUTE</span> BY, define the partitioner when many Reducer.<br/></p><p><br/></p><p>CLUSTER BY: <span style=\"color: rgb(43, 43, 43); font-family: Karla;  background-color: rgb(255, 255, 255);\">short-cut for both&nbsp;</span><em style=\"border: 0px; font-family: Karla; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline; color: rgb(43, 43, 43); white-space: normal; background-color: rgb(255, 255, 255);\">Distribute By</em><span style=\"color: rgb(43, 43, 43); font-family: Karla;  background-color: rgb(255, 255, 255);\">&nbsp;and&nbsp;</span><em style=\"border: 0px; font-family: Karla; margin: 0px; outline: 0px; padding: 0px; vertical-align: baseline; color: rgb(43, 43, 43); white-space: normal; background-color: rgb(255, 255, 255);\">Sort By.</em></p><p><br/></p><p>------------</p><p>Not all query will convert to map reduce</p><p><br/></p><p>eg, select * from ... just scan the whole table.<br/></p><p><br/></p><p>NULL problem.</p><p>If there is a variable is NULL, the expression becomes&nbsp;NULL</p><p><br/></p><p>function : nvl(p1,p2), transform p1 to p2 if p1 is NULL.</p><p>eg, nvl(salary, 0);</p><p><br/></p><p>select * from emp where comm=null; wrong</p><p>select * from emp where comm is null; right</p><p><br/></p><p>&nbsp;select distinct name, age,&nbsp;job &nbsp;from emp;</p><p><br/></p><p>组合一致才是真的重复。</p><p>-----------------------------------</p><p>Fetch Task &nbsp;for simple query:</p><p>configuration</p><p>- set hive.fetch.task.conversion = more</p><p>- hive --hiveconf hive.fetch.task.conversion = more</p><p>- modify hive-site.xml file</p><p><br/></p><p><strong>Filter</strong></p><p>put the string to &#39;&#39;.<strong>&nbsp;</strong></p><p><br/></p><p>Fuzzy query:&nbsp;</p><p>% --&gt; any string</p><p>_ &nbsp;--&gt; any single char</p><p><br/></p><p>select empno,ename,sal from emp where ename like &#39;%\\\\_%&#39;;<br/></p><p><br/></p><p>the first \\ is an escape&nbsp;character, the second \\ is a&nbsp;backslash.</p><p><br/></p><p>how to sort with&nbsp;NULL.</p><p>increase order,&nbsp;NULL is on the top<br/></p><p>decrease order, NULL is on the bottom.</p><p><br/></p><p>but I want to put&nbsp;NULL on the bottom with increased order.</p><p>transform NULL to 0.</p><p><br/></p><p>Function:</p><p>inner function</p><p>define function</p><p><br/></p><p>math function</p><p>character function</p><p>collect function: size select size(map(1,&#39;Tom&#39;, 2, &quot;Mary&#39;)); ==&gt; 2<br/></p><p>cast function:<br/></p><p>date function:</p><p>condition function: coalesce, case...when</p><p>aggregation function: count, sum</p><p>table generation function: explode, select explode(map(1, &#39;Tom&#39;, 2,&#39;Mary&#39;, 3, &#39;Mike&#39;));</p><p><br/></p><p>Hive join table</p><p>Four types join operation:</p><p>equal join</p><p>not equal join</p><p>external join</p><p>self join</p><p><br/></p><p>sub query only support <strong>from</strong> and <strong>where</strong></p><p><strong>in</strong></p><p><strong>not in</strong></p><p><strong><br/></strong></p><p>reference:</p><p>http://saurzcode.in/2015/01/hive-sort-vs-order-vs-distribute-vs-cluster/</p>','',0),(88,0,'<p>This is 3rd day in Pinterest, start coding now!<br/></p><p><br/></p><p>There many ways to send the HTTP&nbsp;request in Python</p><p>httplib(2), urllib(2), requests library<br/></p><p><br/></p><p style=\"margin-top: 0px; margin-bottom: 1em; padding: 0px; border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 15px; line-height: inherit; font-family: Arial, \" helvetica=\"\" vertical-align:=\"\" clear:=\"\" color:=\"\" white-space:=\"\" background-color:=\"\"><strong style=\"margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">httplib and httplib2 handles HTTP/HTTPs request and response directly and give you more space to do your own job.</strong></p><p style=\"margin-top: 0px; margin-bottom: 1em; padding: 0px; border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 15px; line-height: inherit; font-family: Arial, \" helvetica=\"\" vertical-align:=\"\" clear:=\"\" color:=\"\" white-space:=\"\" background-color:=\"\"><strong style=\"margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">urllib and urllib2 are build upon httplib, they are more abstract and powerful, but sometimes won&#39;t fulfill your specified need about some HTTP related operations.</strong></p><p>The APi&nbsp; of Requests library is better than urllib2</p><p><br/></p><p>summary:</p><p>Requests Library &gt; urllib* &gt; httplib *&nbsp;<br/></p><p><br/></p><p>向谷歌发了一万条不到的信息，IP就被屏蔽了。</p>','',0),(89,0,'<p>Find All int python.</p><p><br/></p><p>Re module</p><p>Beautiful&nbsp;Soup module</p><p><br/></p>','',0),(90,0,'<p><br/></p><p>1 Introduction to Data Structures</p><p><br/></p>','',0),(91,0,'<p>基础的二分搜索是基于有序数组，不断二分，减小问题规模．这种思想可以推广到很多应用场景．</p><p><br/></p><p>而且时间复杂度为O(logn)的也只有二分法了．</p><p><br/></p><p>一般的二分问题都可以转移到 first position, last position</p><p><br/></p><p>二分法，不一定是分数组，也可能是分一个数 n，选中一个条件，再根据得到的结果做出下一步判断．</p><p><br/></p><p>二分法的本质是一个求一半一半问题来不断减少问题规模的思路，最终达到加速目的．</p><p>如： median of two sorted array 除以２， Divide Integer 乘以 2.</p><p><br/></p><p>有些题目中要两次运用二分法</p><p>如： search for a Range, search a 2D matrix</p><p><br/></p><p>有些二分法是和Tree, 或者 BST 相结合．</p><p><br/></p><p>二分法模板四要点：</p><p>1.start + 1 &lt; end &nbsp;相邻或相交时退出，避免死循环</p><p>2.mid = start + (end - start) / 2 防溢出</p><p>3. mid == &lt; &gt;, start = mid, end = mid</p><p>4.A[start], B[start] 比较两个可能答案</p><p><br/></p><p>模版的方法并不是直接在while中确定最优解，而是通过start + 1 &lt; end, 保留两个可能情况</p><p><br/></p><p>三步翻转法，对应旋转数组recover<br/></p><p>O(1) space, O(n) time</p><p>4,5,1,2,3 &nbsp;==&gt; 1,2,3,4,5</p><p>找到上升的gap, [5,4],[3,2,1] =&gt; [1,2,3] [4,5]</p><p><br/></p><p>二分法的难点在于二分的条件千变万化。</p><p><br/></p><p>4. Median of Two Sorted Arrays</p><p><br/></p><p>29. Divide Two Integers</p><p><br/></p><p>33. Search in Rotated Sorted Array<br/></p><p><br/></p><p>34 Search for a Range</p><p><br/></p><p>35.Search Insert Position</p><p><br/></p><p>50. Pow(x,y)</p><p><br/></p><p>69. Sqrt(x)</p><p><br/></p><p>74. Search a 2D matrix</p><p><br/></p><p>81. Search in Rotated Sorted Array II</p><p><br/></p><p>240.Search a 2D Matrix II</p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><br/></p>','',0),(93,0,'<p>阿米什人。<br/></p>','',0),(94,0,'<p>earl grey tea 格雷伯爵茶, 苦涩</p><p>calm chamomile 平静的洋甘菊。甜甜的，淡淡的。喜欢</p><p>yerba mate&nbsp;<span style=\"color: rgb(51, 51, 51); font-family: arial, 宋体, sans-serif; font-size: 14px; text-indent: 28px;  background-color: rgb(255, 255, 255);\">耶巴马黛茶（Yerba Mate）是南美洲的一种马黛树叶子，与咖啡、中国茶（红茶、绿茶等）并列为世界三大茶 南美人喝的茶为啥都这么苦。。</span></p><p><br/></p>','',0),(95,0,'<p>google API&nbsp;</p><p>目前主要用到两类</p><p>一种是个人的，普通KEY， 调用restful API时 加在get 的URL 上。 ?&amp;key={Your_Key}</p><p>另一种是给第三方提供认证的oauth2, 先询问用户是否给权限，再给feedback URL</p><p><br/></p>','',0),(96,0,'<p>4th episode</p><p>cut-and-dry 老生常谈的</p>','',0),(97,0,'<p style=\"white-space: normal;\">4th episode 分裂</p><p style=\"white-space: normal;\">cut-and-dry 老生常谈的</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">whether the Potomac is crimsoned in human gore, and Pennsylvanian Avenue is paved ten fathoms with mangled bodies.</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">要么血染波托马克河,要么让血肉模糊的尸体在宾夕法尼亚大道上堆到十英尺高。</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">degradation 堕落，恶化</p><p style=\"white-space: normal;\">inauguration 就职</p><p><br/></p>','',0),(98,0,'<p>上班之后第一个周末，出去淘了两件运动裤，洗了衣服，晒了鞋，买了盆，泡了脚。</p><p>下午到现在一直都没学习。</p><p>明天早点去公司。把该做的事都做了。</p><p>拖延症，真不是好习惯。</p><p><br/></p><p>明天：写完代码。总结二分搜索。</p><p><br/></p><p>下周任务：提交代码。</p><p><br/></p><p>在家果然没任何状态。还是去公司吧。</p><p><br/></p><p><br/></p>','',0),(99,0,'<p><span style=\"color: rgb(84, 84, 84); font-family: Roboto, arial, sans-serif; font-size: small;  background-color: rgb(255, 255, 255);\">If you want to learn the American culture, you have to go back the to the beginning, The Declaration of Independence.</span></p><p><span style=\"color: rgb(84, 84, 84); font-family: Roboto, arial, sans-serif; font-size: small;  background-color: rgb(255, 255, 255);\"><br/></span></p><p><span style=\"color: rgb(84, 84, 84); font-family: Roboto, arial, sans-serif; font-size: small;  background-color: rgb(255, 255, 255);\"></span></p><p>http://www.ushistory.org/declaration/document/</p><p><br/></p><p>林语堂翻译版。</p><p>http://jiaren.org/2010/07/10/linyutang-dulixuanyan/</p><p><br/></p><p>会被这句话。</p><p>We hold these truths to be self-evident, that all men are created equal, that they are endowed by their Creator with certain unalienable Rights, that among these are Life, Liberty and the pursuit of Happiness</p>','',0),(100,0,'<p>Parameter with search URL of Bing</p><p><br/></p><p>Search &#39;credit card&#39; on www.bing.com&nbsp;</p><p><br/></p><p>https://www.bing.com/search?q=credit+card&amp;qs=n&amp;form=QBLH&amp;sp=-1&amp;ghc=1&amp;pq=credit+card&amp;sc=8-11&amp;sk=&amp;cvid=5DC717E121464A04A63EBEE687578FEF</p><p><br/></p><p>q &nbsp; query</p><p>qs</p><p>form</p><p>sp</p><p>ghc</p><p>pq</p>','',0),(101,0,'<p>Print type of an Object</p><pre class=\"brush:python;toolbar:false\">print(type(your_object))</pre><p><br/></p><p>Print an Object</p><pre class=\"brush:python;toolbar:false\">from&nbsp;pprint&nbsp;import&nbsp;pprint\r\npprint&nbsp;(vars(your_object))</pre><p><br/></p><p>Use PDB</p><pre class=\"brush:python;toolbar:false\">import&nbsp;pdb\r\npdb.set_trace()</pre><p><br/></p>','',0),(102,0,'<p>send an HTTP&nbsp;requests with&nbsp;mock a browser.</p><p><br/></p><p>bing_search_url = &#39;https://www.bing.com/search?q=fly+ticket&#39;</p><p>payload = {&#39;q&#39; : &#39;fly ticket&#39;} &nbsp; &nbsp;&nbsp;</p><p>headers = {&#39;User-Agent&#39;: &#39;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36&#39;}</p><p>r = requests.get(bing_search_url, params=payload, headers=headers)</p><p>print(r.text)</p><p><br/></p>','',0),(103,0,'<p><a href=\"https://docs.python.org/2/library/htmlparser.html#htmlparser-methods\" target=\"_self\" title=\"\">https://docs.python.org/2/library/htmlparser.html#htmlparser-method</a>s</p><p>一开始想用Python内置的HTMLParser来解析HTML，发现他自动调用的handle函数简直反人类。。</p><p>想找一个特定的tag的兄弟节点，很难处理复杂的HTML。</p><p><br/></p><p>用beautifulsoup 吧</p><p><br/></p><p><br/></p><p><br/></p><p><br/></p>','',0),(104,0,'<p>利用迭代协议让for循环自动调用next从而前进到文件的下一行，而不是直接把文件读取到内存中,</p><p>有三点原因：写法简单，运行速度快，节省内存。示例如下：</p><p>for line in open(&#39;myfile.py&#39;):</p><p>...print line.upper()</p><p>而不是使用readlines方法：</p><p>for line in open(&#39;myfile.py&#39;).readlines():</p><p>...print line.upper()</p><p><br/></p>','',0),(105,0,'<p>selenium</p><pre class=\"brush:python;toolbar:false\">&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;selenium&nbsp;import&nbsp;webdriver\r\n&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;selenium.webdriver.common.by&nbsp;import&nbsp;By\r\n&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;selenium.webdriver.support.ui&nbsp;import&nbsp;WebDriverWait\r\n&nbsp;&nbsp;&nbsp;&nbsp;from&nbsp;selenium.webdriver.support&nbsp;import&nbsp;expected_conditions&nbsp;as&nbsp;EC\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;driver&nbsp;=&nbsp;webdriver.Firefox()\r\n&nbsp;&nbsp;&nbsp;&nbsp;driver.get(&quot;http://www.google.com&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;input_element&nbsp;=&nbsp;driver.find_element_by_name(&quot;q&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;import&nbsp;time\r\n&nbsp;&nbsp;&nbsp;&nbsp;time.sleep(5)&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;input_element.send_keys(&quot;python&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;import&nbsp;time\r\n&nbsp;&nbsp;&nbsp;&nbsp;time.sleep(5)\r\n&nbsp;&nbsp;&nbsp;&nbsp;input_element.submit()\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;RESULTS_LOCATOR&nbsp;=&nbsp;&quot;//div/h3/a&quot;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;WebDriverWait(driver,&nbsp;10).until(\r\n&nbsp;&nbsp;&nbsp;&nbsp;	EC.visibility_of_element_located((By.XPATH,&nbsp;RESULTS_LOCATOR)))\r\n&nbsp;&nbsp;&nbsp;&nbsp;page1_results&nbsp;=&nbsp;driver.find_elements(By.XPATH,&nbsp;RESULTS_LOCATOR)\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;item&nbsp;in&nbsp;page1_results:\r\n&nbsp;&nbsp;&nbsp;&nbsp;	print(item.text)</pre><p><br/></p><p>pip install selenium-requests</p><pre class=\"brush:python;toolbar:false\">#&nbsp;Import&nbsp;any&nbsp;WebDriver&nbsp;class&nbsp;that&nbsp;you&nbsp;would&nbsp;usually&nbsp;import&nbsp;from\r\n#&nbsp;selenium.webdriver&nbsp;from&nbsp;the&nbsp;seleniumrequests&nbsp;module\r\nfrom&nbsp;seleniumrequests&nbsp;import&nbsp;Firefox\r\n\r\n#&nbsp;Simple&nbsp;usage&nbsp;with&nbsp;built-in&nbsp;WebDrivers:\r\nwebdriver&nbsp;=&nbsp;Firefox()\r\nresponse&nbsp;=&nbsp;webdriver.request(&#39;GET&#39;,&nbsp;&#39;https://www.google.com/&#39;)\r\nprint(response)\r\n\r\n\r\n#&nbsp;More&nbsp;complex&nbsp;usage,&nbsp;using&nbsp;a&nbsp;WebDriver&nbsp;from&nbsp;another&nbsp;Selenium-related&nbsp;module:\r\nfrom&nbsp;seleniumrequests.request&nbsp;import&nbsp;RequestMixin\r\nfrom&nbsp;someothermodule&nbsp;import&nbsp;CustomWebDriver\r\n\r\n\r\nclass&nbsp;MyCustomWebDriver(CustomWebDriver,&nbsp;RequestMixin):\r\n&nbsp;&nbsp;&nbsp;&nbsp;pass\r\n\r\n\r\ncustom_webdriver&nbsp;=&nbsp;MyCustomWebDriver()\r\nresponse&nbsp;=&nbsp;custom_webdriver.request(&#39;GET&#39;,&nbsp;&#39;https://www.google.com/&#39;)\r\nprint(response)</pre>','',0),(106,0,'<p>http://www.geeksforgeeks.org/checked-vs-unchecked-exceptions-in-java/</p><p>checked&nbsp;是在编译时就check的，必须要 declaration.<br/></p><p>uncheck 在编译时不检查，不必须 declaration. 除了 Error和 RuntimeException 其他都是checked.</p><p><br/></p><pre style=\"margin-top: 0px; margin-bottom: 10px; padding: 10px; border: 1px solid rgb(237, 237, 237); font-size: 12px; vertical-align: baseline; background-color: rgb(224, 224, 224); border-radius: 10px; font-family: Consolas, Monaco, \" lucida=\"\" line-height:=\"\" overflow:=\"\" text-align:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+-----------+\r\n		&nbsp;&nbsp;&nbsp;|&nbsp;Throwable&nbsp;|\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+-----------+\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\r\n		&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+-------+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+-----------+\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;Error&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;Exception&nbsp;|\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+-------+&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+-----------+\r\n	&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;|&nbsp;&nbsp;\\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\________/	&nbsp;&nbsp;\\______/&nbsp;&nbsp;&nbsp;&nbsp;	&nbsp;\\\r\n			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+------------------+\r\n	unchecked	&nbsp;checked	|&nbsp;RuntimeException&nbsp;|\r\n					+------------------+\r\n					&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\\r\n					&nbsp;\\_________________/\r\n					&nbsp;&nbsp;&nbsp;\r\n					&nbsp;&nbsp;&nbsp;unchecked</pre><p><br/></p><p><span id=\"docs-internal-guid-3185f7a0-853e-0b86-6be7-210dac68379d\"><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\">public long Factorial (int n) throws FactorialException {</span></p><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\"><span class=\"Apple-tab-span\" style=\"white-space:pre;\">	</span></span><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\">Int sign = 1;</span></p><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\"><span class=\"Apple-tab-span\" style=\"white-space:pre;\">	</span></span><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\">If (n &lt; 0) {</span></p><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\"><span class=\"Apple-tab-span\" style=\"white-space:pre;\">	</span></span><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\"> throw new FactorialException(“the number is negtive!”);</span></p><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\"><span class=\"Apple-tab-span\" style=\"white-space:pre;\">	</span></span><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\">}</span></p><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\"><span class=\"Apple-tab-span\" style=\"white-space:pre;\">	</span></span><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\">long result &nbsp;= 1;</span></p><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\"><span class=\"Apple-tab-span\" style=\"white-space:pre;\">	</span></span><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\">For (int i = n; i &gt;=1 ; i--) {</span></p><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\"><span class=\"Apple-tab-span\" style=\"white-space:pre;\">	</span></span><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\"><span class=\"Apple-tab-span\" style=\"white-space:pre;\">	</span></span><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\">Result *= i;</span></p><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;text-indent: 36pt;\"><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\">}</span></p><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;text-indent: 36pt;\"><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\">Return result * sign;</span></p><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\">}</span></p><p><br/></p>// must throw<br/><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\">Public class FactorialException extends Exception {</span></p><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\">…</span></p><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\">}</span></p><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\">//don&#39;t have to throw</span></p><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\"></span></p><p dir=\"ltr\" style=\"margin-top: 0pt; margin-bottom: 0pt; white-space: normal; line-height: 1.38;\"><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\">Public class FactorialException extends RuntimeException {</span></p><p dir=\"ltr\" style=\"margin-top: 0pt; margin-bottom: 0pt; white-space: normal; line-height: 1.38;\"><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\">…</span></p><p dir=\"ltr\" style=\"margin-top: 0pt; margin-bottom: 0pt; white-space: normal; line-height: 1.38;\"><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\">}</span></p><p dir=\"ltr\" style=\"line-height:1.38;margin-top:0pt;margin-bottom:0pt;\"><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\"><br/></span><br/></p><p><span style=\"font-size: 11pt; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;\"><br/></span></p></span></p>','',0),(107,0,'<p>table: query_domain</p><pre class=\"brush:sql;toolbar:false\">DROP&nbsp;TABLE&nbsp;IF&nbsp;EXISTS&nbsp;`query_domain`;\r\nCREATE&nbsp;TABLE&nbsp;`query_domain`&nbsp;(\r\n&nbsp;&nbsp;`query`&nbsp;varchar(255)&nbsp;,\r\n&nbsp;&nbsp;`domain`&nbsp;char(255)\r\n);</pre><p><br/></p><p>mysqlimport --ignore-lines=1 --fields-terminated-by=, --local -u root -p Database TableName.csv</p><p>query_domain.csv</p><pre class=\"brush:as3;toolbar:false\">quotes,NoDomain\r\nmothers&nbsp;day&nbsp;gifts,www.personalizationmall.com\r\nmothers&nbsp;day&nbsp;gifts,www.revolve.com\r\nmothers&nbsp;day&nbsp;gifts,www.amazon.com\r\nmothers&nbsp;day&nbsp;gifts,www.williams-sonoma.com\r\nmothers&nbsp;day&nbsp;gifts,www.remembermegiftsonline.com\r\neaster,NoDomain\r\nprom&nbsp;hair,NoDomain\r\nsummer&nbsp;outfits,NoDomain\r\nhair&nbsp;styles,www.garnierusa.com\r\nspring&nbsp;outfits,NoDomain\r\nnails,NoDomain\r\nteacher&nbsp;appreciation&nbsp;gifts,www.successories.com\r\nteacher&nbsp;appreciation&nbsp;gifts,www.amazon.com\r\nteacher&nbsp;appreciation&nbsp;gifts,www.target.com\r\nchicken&nbsp;recipes,NoDomain\r\nwedding&nbsp;dresses,www.davidsbridal.com\r\nwedding&nbsp;dresses,www.helenmillerbridal.com\r\nwedding&nbsp;dresses,www.renttherunway.com\r\nwedding&nbsp;dresses,www.jjshouse.com</pre><pre class=\"brush:as3;toolbar:false\">mysqlimport&nbsp;-u&nbsp;root&nbsp;-pmysql8111249&nbsp;--fields-terminated-by=&#39;,&#39;&nbsp;--lines-terminated-by=&#39;\\n&#39;&nbsp;--local&nbsp;&nbsp;wfeng&nbsp;query_domain.csv</pre><p><br/></p><pre class=\"brush:sql;toolbar:false\">DROP&nbsp;TABLE&nbsp;IF&nbsp;EXISTS&nbsp;`query_volume`;\r\nCREATE&nbsp;TABLE&nbsp;`query_volume`&nbsp;(\r\n&nbsp;&nbsp;`query`&nbsp;varchar(255)&nbsp;,\r\n&nbsp;&nbsp;`volume`&nbsp;int\r\n);</pre><p>INSERT INTO `query_volume` VALUES (&#39;quotes&#39;, 5);<br/></p><p>INSERT INTO `query_volume` VALUES (&#39;mothers day gifts&#39;, 20);</p><p>INSERT INTO `query_volume` VALUES (&#39;easter&#39;, 4);</p><p>INSERT INTO `query_volume` VALUES (&#39;prom hair&#39;, 2);</p><p>INSERT INTO `query_volume` VALUES (&#39;summer outfits&#39;, 0);</p><p>INSERT INTO `query_volume` VALUES (&#39;hair styles&#39;, 0);</p><p>INSERT INTO `query_volume` VALUES (&#39;spring outfits&#39;, 6);</p><p>INSERT INTO `query_volume` VALUES (&#39;nails&#39;, 23);</p><p>INSERT INTO `query_volume` VALUES (&#39;teacher appreciation gifts&#39;, 2);</p><p>INSERT INTO `query_volume` VALUES (&#39;chicken recipes&#39;, 20);</p><p>INSERT INTO `query_volume` VALUES (&#39;wedding dresses&#39;, 20);</p><p><br/></p><p style=\"white-space: normal;\">//single quote must keep same as creating table&nbsp;</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">select a.domain, count(a.query), sum(b.volume) from query_domain a join query_volume b on a.query = b.query &nbsp;group by a.domain\\G;</p><p><br/></p>','',0),(108,0,'<p>Join 操作是个很神奇的操作。今天来做个总结。(<span style=\"color: rgb(255, 0, 0);\"></span><span style=\"color: rgb(255, 0, 0);\">其实就是两层循环</span>）</p><p>table person:</p><p>+---------+--------+--------+</p><p>&nbsp;| name &nbsp;| &nbsp;age &nbsp; | &nbsp;sex &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p><p>+--------- |---------|---------</p><p>mike &nbsp; &nbsp; &nbsp;| &nbsp;34 &nbsp; &nbsp; | &nbsp;male</p><p>wayne&nbsp; &nbsp;| &nbsp;24 &nbsp; &nbsp; | &nbsp;male</p><p>mary &nbsp; &nbsp; | &nbsp;24 &nbsp; &nbsp; | &nbsp;female</p><p>&nbsp;<br/></p><p>table employer:</p><p>name | &nbsp; title &nbsp;| salary | age</p><p>---------|----------|----------------&nbsp;</p><p>mike &nbsp; | &nbsp; SDE &nbsp;| 1000 &nbsp;| &nbsp;34 &nbsp;</p><p>bob &nbsp; &nbsp;| &nbsp; &nbsp;QA &nbsp; | 2000 &nbsp;| &nbsp;24</p><p>mary &nbsp;| &nbsp; &nbsp;HR &nbsp; | &nbsp;500 &nbsp; | &nbsp;24</p><p><br/></p><p>join by name</p><pre class=\"brush:css;toolbar:false\">select&nbsp;a.name&nbsp;name,&nbsp;a.age&nbsp;age,&nbsp;&nbsp;a.sex&nbsp;sex,&nbsp;b.title,&nbsp;b.salary&nbsp;salary,&nbsp;b.age&nbsp;bage&nbsp;&nbsp;\r\nfrom&nbsp;person&nbsp;a&nbsp;join&nbsp;employer&nbsp;b&nbsp;on&nbsp;a.name&nbsp;=&nbsp;b.name;\r\n+------+------+--------+-------+--------+------+\r\n|&nbsp;name&nbsp;|&nbsp;age&nbsp;&nbsp;|&nbsp;sex&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;title&nbsp;|&nbsp;salary&nbsp;|&nbsp;bage&nbsp;|\r\n+------+------+--------+-------+--------+------+\r\n|&nbsp;mike&nbsp;|&nbsp;&nbsp;&nbsp;34&nbsp;|&nbsp;male&nbsp;&nbsp;&nbsp;|&nbsp;SDE&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;1000&nbsp;|&nbsp;&nbsp;&nbsp;34&nbsp;|\r\n|&nbsp;mary&nbsp;|&nbsp;&nbsp;&nbsp;24&nbsp;|&nbsp;female&nbsp;|&nbsp;HR&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;500&nbsp;|&nbsp;&nbsp;&nbsp;24&nbsp;|\r\n+------+------+--------+-------+--------+------+\r\n\r\n其实就是两层循环\r\n\r\nselect&nbsp;a.name&nbsp;name,&nbsp;a.age&nbsp;age,&nbsp;&nbsp;a.sex&nbsp;sex,&nbsp;b.title,&nbsp;b.salary&nbsp;salary,&nbsp;b.age&nbsp;bage&nbsp;&nbsp;\r\nfrom&nbsp;person&nbsp;a&nbsp;join&nbsp;employer&nbsp;b&nbsp;on&nbsp;a.age&nbsp;=&nbsp;b.age;\r\n+-------+------+--------+-------+--------+------+\r\n|&nbsp;name&nbsp;&nbsp;|&nbsp;age&nbsp;&nbsp;|&nbsp;sex&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;title&nbsp;|&nbsp;salary&nbsp;|&nbsp;bage&nbsp;|\r\n+-------+------+--------+-------+--------+------+\r\n|&nbsp;mike&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;34&nbsp;|&nbsp;male&nbsp;&nbsp;&nbsp;|&nbsp;SDE&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;1000&nbsp;|&nbsp;&nbsp;&nbsp;34&nbsp;|\r\n|&nbsp;wayne&nbsp;|&nbsp;&nbsp;&nbsp;24&nbsp;|&nbsp;male&nbsp;&nbsp;&nbsp;|&nbsp;QA&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;2000&nbsp;|&nbsp;&nbsp;&nbsp;24&nbsp;|\r\n|&nbsp;mary&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;24&nbsp;|&nbsp;female&nbsp;|&nbsp;QA&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;2000&nbsp;|&nbsp;&nbsp;&nbsp;24&nbsp;|\r\n|&nbsp;wayne&nbsp;|&nbsp;&nbsp;&nbsp;24&nbsp;|&nbsp;male&nbsp;&nbsp;&nbsp;|&nbsp;HR&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;500&nbsp;|&nbsp;&nbsp;&nbsp;24&nbsp;|\r\n|&nbsp;mary&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;24&nbsp;|&nbsp;female&nbsp;|&nbsp;HR&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;500&nbsp;|&nbsp;&nbsp;&nbsp;24&nbsp;|\r\n+-------+------+--------+-------+--------+------+</pre><p><br/></p><p><img src=\"https://i.stack.imgur.com/VQ5XP.png\" width=\"600\" height=\"472\"/></p><p><br/></p><p style=\"margin-top: 0px; margin-bottom: 1em; padding: 0px; border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 15px; line-height: inherit; font-family: Arial, \" helvetica=\"\" vertical-align:=\"\" clear:=\"\" color:=\"\" white-space:=\"\" background-color:=\"\"><strong style=\"margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">INNER JOIN</strong>&nbsp;gets all records that are common between both tables</p><p style=\"margin-top: 0px; margin-bottom: 1em; padding: 0px; border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 15px; line-height: inherit; font-family: Arial, \" helvetica=\"\" vertical-align:=\"\" clear:=\"\" color:=\"\" white-space:=\"\" background-color:=\"\"><strong style=\"margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">LEFT JOIN</strong>&nbsp;gets all records from the LEFT linked table but if you have selected some columns from the RIGHT table, if there is no related records, these columns will contain NULL</p><p style=\"margin-top: 0px; margin-bottom: 1em; padding: 0px; border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 15px; line-height: inherit; font-family: Arial, \" helvetica=\"\" vertical-align:=\"\" clear:=\"\" color:=\"\" white-space:=\"\" background-color:=\"\"><strong style=\"margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">RIGHT JOIN</strong>&nbsp;is like the above but gets all records in the RIGHT table</p><p style=\"margin-top: 0px; margin-bottom: 1em; padding: 0px; border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 15px; line-height: inherit; font-family: Arial, \" helvetica=\"\" vertical-align:=\"\" clear:=\"\" color:=\"\" white-space:=\"\" background-color:=\"\"><strong style=\"margin: 0px; padding: 0px; border: 0px; font-style: inherit; font-variant: inherit; font-stretch: inherit; font-size: inherit; line-height: inherit; font-family: inherit; vertical-align: baseline;\">FULL JOIN</strong>&nbsp;gets all records from both tables and puts NULL in the columns where related records do not exist in the opposite table</p><p>Mysql 没有 FULL JOIN 可以用</p><pre class=\"brush:as3;toolbar:false\">(SELECT&nbsp;...&nbsp;FROM&nbsp;tbl1&nbsp;LEFT&nbsp;JOIN&nbsp;tbl2&nbsp;...)&nbsp;UNION&nbsp;ALL&nbsp;\r\n(SELECT&nbsp;...&nbsp;FROM&nbsp;tbl1&nbsp;RIGHT&nbsp;JOIN&nbsp;tbl2&nbsp;...&nbsp;WHERE&nbsp;tbl1.col&nbsp;IS&nbsp;NULL)</pre><p>code:</p><p><a href=\"https://github.com/Beyond1993/Sql/blob/master/Join_Operation.sql\" target=\"_self\" title=\"\">https://github.com/Beyond1993/Sql/blob/master/Join_Operation.sql</a></p><p><br/></p><p>reference:</p><p><a href=\"http://blog.csdn.net/xiao2004/article/details/6562435\" target=\"_self\" title=\"\">http://blog.csdn.net/xiao2004/article/details/6562435</a></p>','',0),(109,0,'<p>Hive 必需从HDFS中导入表。</p><p><br/></p><p>需要注意的是，s3 上的文件名是无所谓的。一个目录就代表了一个表。会从指定的目录中读表。目录的名字和表名也不需要保持一致。</p><p><br/></p><p>DROP TABLE wfeng.google_query_Ads_domain;</p><p><br/></p><p>CREATE EXTERNAL TABLE wfeng.google_query_Ads_domain(query STRING, domain STRING)</p><p>ROW FORMAT DELIMITED&nbsp;</p><p>FIELDS TERMINATED BY &#39;,&#39;&nbsp;</p><p>LINES TERMINATED BY &#39;\\n&#39;</p><p>STORED AS TEXTFILE</p><p>LOCATION &#39;s3://pinlogs/users/wfeng/ads_search_domain/&#39;;</p><p><br/></p><p>s3://pinlogs/users/wfeng/ads_search_domain/any_filename.csv</p>','',0),(110,0,'<p style=\"white-space: normal;\">1.下载源代码</p><p droid=\"\" times=\"\" new=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\" style=\"margin-top: 0px; margin-bottom: 10px; white-space: normal; box-sizing: border-box; color: rgb(51, 51, 51);\"><span style=\"box-sizing: border-box; color: rgb(88, 90, 194); font-weight: 700;\"><a href=\"http://mirror.reverse.net/pub/apache/thrift/0.10.0/thrift-0.10.0.tar.gz\" style=\"box-sizing: border-box; color: rgb(88, 90, 194);\">http://mirror.reverse.net/pub/apache/thrift/0.10.0/thrift-0.10.0.tar.gz</a></span></p><p style=\"white-space: normal;\">下载最新版本&nbsp;<a target=\"_blank\" href=\"http://www.apache.org/dyn/closer.cgi?path=/thrift/0.8.0/thrift-0.8.0.tar.gz\" rel=\"nofollow\" style=\"color: rgb(255, 131, 115); padding: 0px; margin: 0px; outline: 0px; font-size: 12px;\">thrift-0.10.0.tar.gz</a></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">2.安装boost库</p><p style=\"white-space: normal;\"><span style=\"padding: 0px; margin: 0px; color: rgb(255, 0, 0);\">sudo apt-get install libboost-dev&nbsp;</span></p><p style=\"white-space: normal;\"><span style=\"padding: 0px; margin: 0px; color: rgb(255, 0, 0);\">sudo apt-get install &nbsp;libboost-dbg&nbsp;</span></p><p style=\"white-space: normal;\"><span style=\"padding: 0px; margin: 0px; color: rgb(255, 0, 0);\">sudo apt-get install &nbsp;libboost-doc&nbsp;</span></p><p style=\"white-space: normal;\"><span style=\"padding: 0px; margin: 0px; color: rgb(255, 0, 0);\">sudo apt-get install&nbsp;bcp ？？？</span></p><p style=\"white-space: normal;\"><span style=\"padding: 0px; margin: 0px; color: rgb(255, 0, 0);\">sudo apt-get install&nbsp;libboost-*</span></p><p style=\"white-space: normal;\"><span style=\"padding: 0px; margin: 0px; color: rgb(255, 0, 0);\"><br/></span></p><p style=\"white-space: normal;\">3.安装其他相关工具包</p><p style=\"white-space: normal;\"><span style=\"padding: 0px; margin: 0px; color: rgb(255, 0, 0);\">sudo apt-get install libboost-dev libboost-test-dev libboost-program-options-dev libevent-dev automake libtool flex bison pkg-config g++ libssl-dev ant</span></p><p style=\"white-space: normal;\">如果需要支持java，需要安装jdk，配置java环境变量。</p><p style=\"white-space: normal;\"><span style=\"color: rgb(255, 0, 0); font-family: 微软雅黑, Verdana, sans-serif, 宋体; font-size: 13px; background-color: rgb(255, 255, 255);\"></span><br/></p><p style=\"white-space: normal;\">4.解压文件，进入目录thrift-0.10.0安装</p><p style=\"white-space: normal;\"><span style=\"font-family: 微软雅黑, Verdana, sans-serif, 宋体; font-size: 13px; background-color: rgb(255, 255, 255); padding: 0px; margin: 0px; color: rgb(255, 0, 0);\">./configure&nbsp;<code style=\"padding: 1px 3px; margin: 0px 2px; font-family: Consolas, \" bitstream=\"\" vera=\"\" sans=\"\" courier=\"\" monospace=\"\" border:=\"\" 1px=\"\" solid=\"\" word-break:=\"\" color:=\"\" background-color:=\"\">--with-cpp<span style=\"padding: 0px; margin: 0px;\">&nbsp;</span>--with-boost</code><span style=\"padding: 0px; margin: 0px;\">&nbsp;</span><code style=\"padding: 1px 3px; margin: 0px 2px; font-family: Consolas, \" bitstream=\"\" vera=\"\" sans=\"\" courier=\"\" monospace=\"\" border:=\"\" 1px=\"\" solid=\"\" word-break:=\"\" color:=\"\" background-color:=\"\">--without-python</code><span style=\"padding: 0px; margin: 0px;\">&nbsp;</span><code style=\"padding: 1px 3px; margin: 0px 2px; font-family: Consolas, \" bitstream=\"\" vera=\"\" sans=\"\" courier=\"\" monospace=\"\" border:=\"\" 1px=\"\" solid=\"\" word-break:=\"\" color:=\"\" background-color:=\"\">--without-csharp --with-java --without-erlang --without-perl --with-php --without-php_extension --without-ruby --without-haskell<span style=\"padding: 0px; margin: 0px;\">&nbsp;</span>&nbsp;--without-go</code><br style=\"padding: 0px; margin: 0px;\"/></span><span style=\"color: rgb(51, 51, 51); font-family: 微软雅黑, Verdana, sans-serif, 宋体; font-size: 13px; background-color: rgb(255, 255, 255);\"></span></p><p style=\"white-space: normal;\"><span style=\"padding: 0px; margin: 0px; color: rgb(255, 0, 0);\">make</span></p><p style=\"white-space: normal;\"><span style=\"padding: 0px; margin: 0px; color: rgb(255, 0, 0);\">sudo make install</span></p><p style=\"white-space: normal;\">要支持java，需要编译生成jar包，到lib/java目录下，执行&nbsp;<span style=\"padding: 0px; margin: 0px; color: rgb(255, 0, 0);\">ant</span>命令。将在lib/java/build目录下生成libthrift-0.8.0.jar和libthrift-0.8.0-javadoc.jar。编译过程中，可能出错，需要检查lib/java/build/tools/maven-ant-tasks-2.1.3.jar是否正确下载。</p><p style=\"white-space: normal;\"><br/></p><pre class=\"lang-cpp prettyprint prettyprinted\" style=\"margin-top: 0px; margin-bottom: 1em; padding: 5px; background-color: rgb(239, 240, 241); border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 13px; line-height: inherit; font-family: Consolas, Menlo, Monaco, \" lucida=\"\" liberation=\"\" dejavu=\"\" sans=\"\" bitstream=\"\" vera=\"\" courier=\"\" vertical-align:=\"\" width:=\"\" max-height:=\"\" overflow:=\"\" color:=\"\" word-wrap:=\"\">$vim&nbsp;~/.bashrcexport&nbsp;LD_LIBRARY_PATH=/usr/local/lib/:${LD_LIBRARY_PATH}$source&nbsp;~/.bashrc\r\n$echo&nbsp;$LD_LIBRARY_PATH\r\n$thrift&nbsp;-version</pre><p style=\"white-space: normal;\">&nbsp;or</p><p style=\"white-space: normal;\"><span style=\"color: rgb(36, 39, 41); font-family: Consolas, Menlo, Monaco, \" lucida=\"\" liberation=\"\" dejavu=\"\" sans=\"\" bitstream=\"\" vera=\"\" courier=\"\" font-size:=\"\" background-color:=\"\">export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib/</span></p><p style=\"white-space: normal;\"><span style=\"color: rgb(36, 39, 41); font-family: Consolas, Menlo, Monaco, \" lucida=\"\" liberation=\"\" dejavu=\"\" sans=\"\" bitstream=\"\" vera=\"\" courier=\"\" font-size:=\"\" background-color:=\"\"><br/></span></p><p style=\"white-space: normal;\"><span style=\"color: rgb(36, 39, 41); font-family: Consolas, Menlo, Monaco, \" lucida=\"\" liberation=\"\" dejavu=\"\" sans=\"\" bitstream=\"\" vera=\"\" courier=\"\" font-size:=\"\" background-color:=\"\"></span></p><p style=\"white-space: normal;\">5.测试</p><p style=\"white-space: normal;\">直接输入thrift命令，看是否有用法提示&nbsp;</p><p style=\"white-space: normal;\"><span style=\"padding: 0px; margin: 0px; font-weight: 600;\">二、thrift自带的测试样例</span></p><p style=\"white-space: normal;\">进入tutorial文件夹，shared.thrift和tutorial.thrift是接口定义文件。</p><p style=\"white-space: normal;\"><span style=\"padding: 0px; margin: 0px; color: rgb(255, 0, 0);\">thrift -r --gen java&nbsp;tutorial.thrift</span></p><p style=\"white-space: normal;\"><span style=\"padding: 0px; margin: 0px; color: rgb(255, 0, 0);\">thirft&nbsp;-r --gen&nbsp;cpp&nbsp;tutorial.thrift</span></p><p style=\"white-space: normal;\">执行这两条命令可以生成gen-java和gen-cpp两个文件夹，这些是thrift编译器自动生成的代码。</p><p style=\"white-space: normal;\">然后到java目录下，执行&nbsp;<span style=\"padding: 0px; margin: 0px; color: rgb(255, 0, 0);\">ant</span>命令，编译成功后，在两个不同的窗口下执行以下命令：</p><p style=\"white-space: normal;\"><span style=\"padding: 0px; margin: 0px; color: rgb(255, 0, 0);\">./JavaServer</span></p><p style=\"white-space: normal;\"><span style=\"padding: 0px; margin: 0px; color: rgb(255, 0, 0);\">./JavaClient simple</span></p><p style=\"white-space: normal;\"><span style=\"color: rgb(36, 39, 41); font-family: Consolas, Menlo, Monaco, \" lucida=\"\" liberation=\"\" dejavu=\"\" sans=\"\" bitstream=\"\" vera=\"\" courier=\"\" font-size:=\"\" background-color:=\"\"><br/></span><br/></p><p><br/></p>','',0),(111,0,'<p>http://www.redwoodhikes.com/BigBasin/BerryCreek.html</p><p>周六　hiking　去了</p><p>周日又不知道在干嘛．．浪费了一天．　一定要在家养成学习的习惯．</p><p><br/></p><p>我发现，我只有在心情沉痛的情况下．效率是最高的．</p><p><br/></p><p>一定要每天抽出时间，来刷题．</p>','',0),(112,0,'<p><span style=\"color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" background-color:=\"\"></span></p><p>303<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>Range Sum Query - Immutable &nbsp; <span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>29.3%<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>Easy<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span></p><p>304<span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>Range Sum Query 2D - Immutable &nbsp; <span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>24.9%<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>Medium<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span></p><p>307<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>Range Sum Query - Mutable &nbsp; <span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>20.4%<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>Medium<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span></p><p>308<span class=\"Apple-tab-span\" style=\"white-space:pre\"></span>Range Sum Query 2D - Mutable &nbsp;&nbsp;</p><p>这四道题是很好的一个系列题．从一维到二维，从矩阵到树 从0(n^2) 到 O(logn)， 正是计算机优化的方向．</p><p><br/></p><p>303 一维数组</p><p>304 二维数组</p><p><br/></p><p>307 segment tree</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\">Given an integer array&nbsp;<em style=\"box-sizing: border-box;\">nums</em>, find the sum of the elements between indices&nbsp;<em style=\"box-sizing: border-box;\">i</em>&nbsp;and&nbsp;<em style=\"box-sizing: border-box;\">j</em>&nbsp;(<em style=\"box-sizing: border-box;\">i</em>&nbsp;≤&nbsp;<em style=\"box-sizing: border-box;\">j</em>), inclusive.</p><p><span style=\"color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" background-color:=\"\">The&nbsp;</span><em style=\"box-sizing: border-box; color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\">update(i, val)</em><span style=\"color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" background-color:=\"\">&nbsp;function modifies&nbsp;</span><em style=\"box-sizing: border-box; color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\">nums</em><span style=\"color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" background-color:=\"\">&nbsp;by updating the element at index&nbsp;</span><em style=\"box-sizing: border-box; color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\">i</em><span style=\"color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" background-color:=\"\">&nbsp;to&nbsp;</span><em style=\"box-sizing: border-box; color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\">val</em><span style=\"color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" background-color:=\"\">.</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; font-weight: 700;\">Example:</span><br style=\"box-sizing: border-box;\"/></p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, \" courier=\"\" font-size:=\"\" padding:=\"\" margin-top:=\"\" margin-bottom:=\"\" line-height:=\"\" color:=\"\" word-break:=\"\" word-wrap:=\"\" background-color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\">Given&nbsp;nums&nbsp;=&nbsp;[1,&nbsp;3,&nbsp;5]\r\n\r\nsumRange(0,&nbsp;2)&nbsp;-&gt;&nbsp;9\r\nupdate(1,&nbsp;2)\r\nsumRange(0,&nbsp;2)&nbsp;-&gt;&nbsp;8</pre><p><br/></p><p>reference:http://blog.csdn.net/metalseed/article/details/8039326</p><p>线段树，又称区间树， 在区间统计问题上，如区间动态查询，能达到较快速度。</p><p>节点中包含了 start end, 还有sum, max, min 等信息。</p><p>一般线段树空间是数组的四倍？？？</p><p><br/></p><p><img src=\"http://www.wutianqi.com/wp-content/uploads/2010/08/segment1.png\" width=\"500\" height=\"275\"/></p><p><br/></p><p><br/></p><p><br/></p><p>308 二进制索引树（树状数组）</p><p><br/></p><p>能用树状数组解决的题基本都能用segment tree 解决， 但是反之不行。</p><p>树状数组效率比线段树要高。</p><p><br/></p>','',0),(113,0,'<p>位操作</p><p>1.判断奇偶</p><p><br/></p><p>2.两数求和</p><p><br/></p><p>3.取反加一变换符号</p><p><br/></p><p>4.求绝对值</p><p><br/></p><p>5.提取最后一位</p><p>A &amp; ~ (A -1) or A &amp; ~ A</p><p>eg. A = 1100, ~ (A - 1) = 0100, A &amp; ~(A-1) =&gt; &nbsp;0100</p><p><br/></p><p>6.去除最后一位</p><p>A &amp; （A - 1）</p><p>eg. A = 1100, A - 1 = 1011 =&gt; 1000</p><p>lc: 求二进制中1的个数</p><p>lc: isPowerOfFour</p><p><br/></p><p>7. 神奇的异或（不进位加法）</p><p>性质： 相同为0</p><p><br/></p><p>7.1 miss number 加上异或的结合律 X ^ Y ^ Z &nbsp;= X ^ (Y ^Z)</p><p>7.2 用于交换</p><p>&nbsp; &nbsp; X = X ^ Y</p><p>&nbsp; &nbsp; Y = X ^ Y</p><p>&nbsp; &nbsp; X = X ^ Y</p><p>7.3 Single Number</p><p><br/></p><p>8 得到最高位的 1</p><p>public static int heighestOneBit(int i) {</p><p>&nbsp; &nbsp; i |= (i&gt;&gt;1);</p><p>&nbsp; &nbsp; i |= (i&gt;&gt;2);</p><p>&nbsp; &nbsp; i |= (i&gt;&gt;4);</p><p>&nbsp; &nbsp; i |= (i&gt;&gt;8);</p><p>&nbsp; &nbsp; i |= (i&gt;&gt;16);</p><p>&nbsp; &nbsp; return i -(i &gt;&gt;&gt; 1);</p><p>}</p><p>&nbsp;</p><p><br/></p><p><br/></p>','',0),(114,0,'<p>Python 2: Bytes 8-bits byte, str Unicode</p><p>Python 3: str 8-bits byte, &nbsp;Unicode&nbsp;Unicode</p><p><br/></p><p><span style=\"background-color: rgb(255, 255, 255);\">Software should only work with Unicode strings internally, converting to a particular encoding on output.</span></p><p><span style=\"background-color: rgb(255, 255, 255);\"><br/></span></p><p><span style=\"background-color: rgb(255, 255, 255);\">为了应对复杂的编码环境，我们应该优先使用Unicode, &nbsp;而不是8-bits 的 ASCII string。&nbsp;</span></p><p><span style=\"background-color: rgb(255, 255, 255);\"><br/></span></p><pre class=\"brush:as3;toolbar:false\">def&nbsp;read_file(filename,&nbsp;encoding):\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;&#39;/&#39;&nbsp;in&nbsp;filename:\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;raise&nbsp;ValueError(&quot;&#39;/&#39;&nbsp;not&nbsp;allowed&nbsp;in&nbsp;filename&quot;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;unicode_name&nbsp;=&nbsp;filename.decode(encoding)\r\n&nbsp;&nbsp;&nbsp;&nbsp;f&nbsp;=&nbsp;open(unicode_name,&nbsp;&#39;w&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;f.write(&#39;hack&nbsp;way&#39;)\r\n&nbsp;&nbsp;&nbsp;&nbsp;f.close()\r\nread_file(&#39;Li90ZXN0Lm1k&#39;,&nbsp;&#39;base64&#39;)\r\n#&nbsp;Li90ZXN0Lm1k&nbsp;is&nbsp;the&nbsp;UTF-8&nbsp;base64&nbsp;of&nbsp;./test.md</pre><p><span style=\"background-color: rgb(255, 255, 255);\"></span><br/></p><p><br/></p><p><br/></p>','',0),(115,0,'<p>http://blog.csdn.net/v_july_v/article/details/6685962</p><p>Bit map</p><p>是用来在大数据情况下，节省内存的最常用方式。</p><p>比如利用bit map sort, 基本就是类似于桶排序。 但是将每个元素的内存从一个Integer 压缩到 一个 Bit。</p><p><br/></p><p>http://blog.csdn.net/v_july_v/article/details/6685894</p><p>Bloom Filter 布隆过滤器 是 &nbsp;bit map 的拓展。</p><p><br/></p><p><br/></p>','',0),(116,0,'<p>http://www.cnblogs.com/smartloli/p/4356660.html</p>','',0),(118,0,'<p>1</p>','',0),(119,0,'<p style=\"white-space: normal;\">leet code 416 partition equal subset sum</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">这题的题意是给出一个数组, [1,5,11,5]</p><p style=\"white-space: normal;\">能否找出一个patition, 使得两个集合和相等．</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">这题是true, ［１．５，５］　和　［１１］</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">这题就是在数组中找出几个数字，使其和为给定值．</p><p style=\"white-space: normal;\">这题可以转化成　0, &nbsp;1 背包问题．</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">１：能否被等分．</p><p style=\"white-space: normal;\">２：给出一组解</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><span style=\"font-family: \" youtube=\"\"><span style=\"font-size: 20px; background-color: rgb(255, 255, 255);\">　拓展有三等分，四等分，ｎ等分．</span></span></p><p style=\"white-space: normal;\"><span youtube=\"\" font-size:=\"\" background-color:=\"\">Balanced Partition of Array</span></p><p style=\"white-space: normal;\"><span youtube=\"\" font-size:=\"\" background-color:=\"\"><br/></span></p><p style=\"white-space: normal;\">先看二等分问题</p><p style=\"white-space: normal;\">d[i][j] 表示前i个数字．能否组成和为j.</p><p style=\"white-space: normal;\">dp[i][j] = dp[i-1][j] || dp[i][j - nums[i]</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">空间复杂度可以优化到一维.</p><p style=\"white-space: normal;\">dp[j]&nbsp;</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">如果是三等分问题</p><p style=\"white-space: normal;\">http://www.dewen.net.cn/q/14871/%E8%A7%A3%E4%B8%89%E5%88%92%E5%88%86%E9%97%AE%E9%A2%98+3-partition+problem+%E7%9A%84%E6%80%9D%E8%B7%AF</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p><br/></p>','',0),(120,0,'<p><img src=\"/Uploads/Editor/2017-08-02/5980f8ea7ebc0.png\" style=\"float:none;\" title=\"skill map\"/></p><p><img src=\"/Uploads/Editor/2017-08-02/5980f8eb734c8.png\" style=\"float:none;\" title=\"Uber Example\"/></p><p><br/></p>','',0),(121,0,'<p>Effective Java笔记一 创建和销毁对象</p><p>第1条 考虑用静态工厂方法代替构造器</p><p>第2条 遇到多个构造器参数时要考虑用构建器</p><p>第3条 用私有构造器或者枚举类型强化Singleton属性</p><p>第4条 通过私有构造器强化不可实例化的能力</p><p>第5条 避免创建不必要的对象</p><p>第6条 消除过期的对象引用</p><p>第7条 避免使用终结方法</p><p>第1条 考虑用静态工厂方法代替构造器</p><p>对于类而言, 最常用的获取实例的方法就是提供一个公有的构造器, 还有一种方法, 就是提供一个公有的静态工厂方法(static factory method), 返回类的实例.</p><p><br/></p><p>(注意此处的静态工厂方法与设计模式中的工厂方法模式不同.)</p><p><br/></p><p>提供静态工厂方法而不是公有构造, 这样做有几大优势:</p><p><br/></p><p>静态工厂方法有名称. 可以更确切地描述正被返回的对象.</p><p>当一个类需要多个带有相同签名的构造器时, 可以用静态工厂方法, 并且慎重地选择名称以便突出它们之间的区别.</p><p>不必在每次调用它们的时候都创建一个新对象. 可以重复利用实例. 如果程序经常请求创建相同的对象, 并且创建对象的代价很高, 这项改动可以提升性能. (不可变类, 单例, 枚举).</p><p>可以返回原类型的子类型对象. 适用于基于接口的框架, 可以隐藏实现类API, 也可以根据参数返回不同的子类型.</p><p>由于接口不能有静态方法, 因此按照惯例, 接口Type的静态工厂方法被放在一个名为Types的不可实例化的类中.</p><p>(Java的java.util.Collections). 服务提供者框架(Service Provider Framework, 如JDBC)的基础, 从实现中解耦.</p><p>在创建参数化类型实例的时候, 使代码更简洁.</p><p>静态工厂方法的缺点:</p><p><br/></p><p>类如果不含public或者protected的构造器, 就不能被子类化. 对于公有的静态工厂方法所返回的非公有类, 也同样如此.</p><p>静态工厂方法与其他的静态方法没有区别. 在API文档中没有明确标识出来. 可以使用一些惯用的名称来弥补这一劣势:</p><p>valueOf(): 类型转换方法, 返回的实例与参数具有相同的值.</p><p>of(): valueOf()的一种更简洁的替代.</p><p>getInstance(): 返回的实例通过参数来描述, 对于单例来说, 该方法没有参数, 返回唯一的实例.</p><p>newInstance(): 像getInstance()一样, 但newInstance()能确保返回的每个实例都与其他实例不同.</p><p>getType(): 像getInstance()一样, Type表示返回的对象类型, 在工厂方法处于不同的类中的时候使用.</p><p>newType(): 和newInstance()一样, Type表示返回类型, 在工厂方法处于不同的类中的时候使用.</p><p>第2条 遇到多个构造器参数时要考虑用构建器</p><p>静态工厂和构造器有一个共同的局限性: 它们都不能很好地扩展到大量的可选参数.</p><p><br/></p><p>重载多个构造器方法可行, 但是当有许多参数的时候, 代码会很难写难读.</p><p><br/></p><p>第二种替代方法是JavaBeans模式, 即一个无参数构造来创建对象, 然后调用setter方法来设置每个参数. 这种模式也有严重的缺点, 因为构造过程被分到了几个调用中, 在构造过程中JavaBean可能处于不一致的状态.</p><p>类无法通过检验构造器参数的有效性来保证一致性. 另一点是这种模式阻止了把类做成不可变的可能.</p><p><br/></p><p>第三种方法就是Builder模式. 不直接生成想要的对象, 而是利用必要参数调用构造器(或者静态工厂)得到一个builder对象, 然后在builder对象上调用类似setter的方法, 来设置可选参数, 最后调用无参的build()方法来生成不可变的对象.</p><p><br/></p><p>这个Builder是它构建的类的静态成员类.</p><p>Builder的setter方法返回Builder本身, 可以链式操作.</p><p><br/></p><p>Builder模式的优势: 可读性增强; 可以有多个可变参数; 易于做参数检查和构造约束检查; 比JavaBeans更加安全; 灵活性: 可以利用单个builder构建多个对象, 可以自动填充某些域, 比如自增序列号.</p><p><br/></p><p>Builder模式的不足: 为了创建对象必须先创建Builder, 在某些十分注重性能的情况下, 可能就成了问题; Builder模式较冗长, 因此只有参数很多时才使用.</p><p><br/></p><p>第3条 用私有构造器或者枚举类型强化Singleton属性</p><p>Singleton(单例)指仅仅被实例化一次的类. 通常用来代表那些本质上唯一的系统组件.</p><p><br/></p><p>使类成为Singleton会使得它的客户端代码测试变得困难, 因为无法给它替换模拟实现, 除非它实现了一个充当其类型的接口.</p><p><br/></p><p>单例的实现: 私有构造方法, 类中保留一个字段实例(static, final), 用public直接公开字段或者用一个public static的getInstance()方法返回该字段.</p><p><br/></p><p>为了使单例实现序列化(Serializable), 仅仅在声明中加上implements Serializable是不够的, 为了维护并保证单例, 必须声明所有实例域都是transient的, 并提供一个readResolve()方法, 返回单例的实例. 否则每次反序列化一个实例时, 都会创建一个新的实例.</p><p><br/></p><p>从Java 1.5起, 可以使用枚举来实现单例: 只需要编写一个包含单个元素的枚举类型.</p><p>这种方法无偿地提供了序列化机制, 绝对防止多次实例化.</p><p><br/></p><p>第4条 通过私有构造器强化不可实例化的能力</p><p>只包含静态方法和静态域的类名声不太好, 因为有些人会滥用它们来编写过程化的程序. 尽管如此, 它们确实也有特有的用处, 比如:</p><p>java.lang.Math, java.util.Arrays把基本类型的值或数组类型上的相关方法组织起来; java.util.Collections把实现特定接口的对象上的静态方法组织起来; 还可以利用这种类把final类上的方法组织起来, 以取代扩展该类的做法.</p><p><br/></p><p>这种工具类(utility class)不希望被实例化, 然而在缺少显式构造器的情况下, 系统会提供默认构造器, 可能会造成这些类被无意识地实例化.</p><p><br/></p><p>通过做成抽象类来强制该类不可被实例化, 这是行不通的, 因为可能会造成”这个类是用来被继承的”的误解, 而继承它的子类又可以被实例化.</p><p><br/></p><p>所以只要让这个类包含一个私有的构造器, 它就不能被实例化了. 进一步地, 可以在这个私有构造器中抛出异常.</p><p><br/></p><p>这种做法还会导致这个类不能被子类化, 因为子类构造器必须显式或隐式地调用super构造器. 在这种情况下, 子类就没有可访问的超类构造器可调用了.</p><p><br/></p><p>第5条 避免创建不必要的对象</p><p>一般来说, 最好能重用对象而不是每次需要的时候创建一个相同功能的新对象. 如果对象是不可变的(immutable), 它就始终可以被重用.</p><p><br/></p><p>比如应该用:</p><p><br/></p><p>1</p><p>String s = &quot;stringette&quot;;</p><p>而不是:</p><p><br/></p><p>1</p><p>String s = new String(&quot;stringette&quot;); // Don&#39;t do this</p><p>包含相同字符串的字面常量对象是会被重用的.</p><p><br/></p><p>对于同时提供了静态工厂方法和构造方法的不可变类, 通常可以使用静态工厂方法而不是构造器, 以避免创建不必要的对象.</p><p>比如Boolean.valueOf().</p><p><br/></p><p>除了重用不可变对象以外, 也可以重用那些已知不会被修改的可变对象. 比如把一个方法中需要用到的不变的数据保存成常量对象(static final), 只在初始化的时候创建一次(用static块), 这样就不用每次调用方法都重复创建.</p><p><br/></p><p>如果该方法永远不会调用, 那也不需要初始化相关的字段, 可以通过延迟初始化(lazily initializing)把这些对象的初始化放到方法第一次被调用的时候. (但是不建议这样做, 没有性能的显著提高, 并且会使方法看起来复杂.)</p><p><br/></p><p>前面的例子中, 所讨论的对象显然是能够被重用的, 因为它们被初始化之后不会再改变. 其他有些情形则并不总是这么明显了. (适配器(adapter)模式, Map的接口keySet()方法返回同样的Set实例).</p><p><br/></p><p>Java 1.5中加入了自动装箱(autoboxing), 会创建对象. 所以程序中优先使用基本类型而不是装箱基本类型, 要当心无意识的自动装箱.</p><p><br/></p><p>小对象的构造器只做很少量的显式工作, 创建和回收都是很廉价的, 所以通过创建附加的对象提升程序的清晰简洁性也是好事.</p><p><br/></p><p>通过维护自己的对象池(object pool)来避免创建对象并不是一种好的做法(代码, 内存), 除非池中的对象是非常重量级的. 正确使用的典型: 数据库连接池.</p><p><br/></p><p>第6条 消除过期的对象引用</p><p>一个内存泄露的例子: 一个用数组实现的Stack, 依靠size标记来管理栈的深度, 但是这样从栈中弹出来的过期对象并没有被释放.</p><p><br/></p><p>称内存泄露为”无意识的对象保持(unintentional object retention)”更为恰当.</p><p><br/></p><p>修复方法: 一旦对象引用已经过期, 只需清空这些引用即可.</p><p><br/></p><p>清空对象引用应该是一种例外, 而不是一种规范行为. 消除过期引用最好的方法是让包含该引用的变量结束其生命周期. 如果你是在最紧凑的作用域范围内定义变量, 这种情形就会自然发生.</p><p><br/></p><p>一般而言, 只要类是自己管理内存, 程序员就应该警惕内存泄露问题. 一旦元素被释放掉, 则该元素中包含的任何对象引用都应该被清空.</p><p><br/></p><p>内存泄露的另一个常见来源是缓存. 这个问题有这几种可能的解决方案:</p><p><br/></p><p>1.缓存项的生命周期由该键的外部引用决定 -&gt; WeakHashMap;</p><p>2.缓存项的生命周期是否有意义并不是很容易确定 -&gt; 随着时间的推移或者新增项的时候删除没用的项.</p><p>内存泄露的第三个常见来源是监听器和其他回调.</p><p>如果你实现了一个API, 客户端注册了回调却没有注销, 就会积聚对象.</p><p>API端可以只保存对象的弱引用来确保回调对象生命周期结束后会被垃圾回收.</p><p><br/></p><p>第7条 避免使用终结方法</p><p>终结方法(finalizer)通常是不可预测的, 也是很危险的, 一般情况下是不必要的.</p><p>使用终结方法会导致行为不稳定, 降低性能, 以及可移植性问题.</p><p><br/></p><p>不要把finalizer当成是C++中的析构器(destructors)的对应物.</p><p>在Java中, 当一个对象变得不可到达的时候, 垃圾回收器会回收与该对象相关联的存储空间.</p><p><br/></p><p>C++的析构器也可以用来回收其他的非内存资源, 而在Java中, 一般用try-finally块来完成类似的工作.</p><p><br/></p><p>终结方法的缺点在于不能保证会被及时地执行. 从一个对象变得不可到达开始, 到它的终结方法被执行, 所花费的时间是任意长的. JVM会延迟执行终结方法.</p><p><br/></p><p>及时地执行终结方法正是垃圾回收算法的一个主要功能. 这种算法在不同的JVM上不同.</p><p><br/></p><p>Java语言规范不仅不保证终结方法会被及时地执行, 而且根本就不保证它们会被执行. 所以不应该依赖于终结方法来更新重要的持久状态.</p><p><br/></p><p>不要被System.gc()和System.runFinalization()这两个方法所迷惑, 它们确实增加了终结方法被执行的机会, 但是它们并不保证终结方法一定会被执行.</p><p><br/></p><p>如果未捕获的异常在终结过程中被抛出来, 那么这种异常可以被忽略, 而且该对象的终结过程也会终止.</p><p><br/></p><p>使用终结方法有一个严重的性能损失.</p><p><br/></p><p>如果类的对象中封装的资源(例如文件或线程)确实需要终止, 应该怎么做才能不用编写终结方法呢? 只需提供一个显式的终止方法. 并要求该类的客户端在每个实例不再有用的时候调用这个方法. 注意, 该实例必须记录下自己是否已经被终止了, 如果被终止之后再被调用, 要抛出异常.</p><p>例子: InputStream, OutputStream和java.sql.Connection上的close()方法; java.util.Timer的cancel()方法.</p><p>Image.flush()会释放实例相关资源, 但该实例仍处于可用的状态, 如果有必要会重新分配资源.</p><p><br/></p><p>显式的终止方法通常与try-finally块结合使用, 以确保及时终止.</p><p><br/></p><p>终结方法的好处, 它有两种合法用途:</p><p><br/></p><p>当显式终止方法被忘记调用时, 终结方法可以充当安全网(safety net). 但是如果终结方法发现资源还未被终止, 应该记录日志警告, 这表示客户端代码中的bug.</p><p>对象的本地对等体(native peer), 垃圾回收器不会知道它, 当它的Java对等体被回收的时候, 它不会被回收. 如果本地对等体拥有必须被及时终止的资源, 那么该类就应该有一个显式的终止方法, 如前, 可以是本地方法或者它也可以调用本地方法; 如果本地对等体并不拥有关键资源, 终结方法是执行这项任务最合适的工具.</p><p>注意, 终结方法链(finalizer chaining)并不会自动执行. 子类覆盖终结方法时, 必须手动调用超类的终结方法. try中终结子类, finally中终结超类.</p><p><br/></p><p>为了避免忘记调用超类的终结方法, 还有一种写法, 是在子类中写一个匿名的类, 该匿名类的单个实例被称为终结方法守卫者(finalizer guardian), 当守卫者被终结的时候, 它执行外围实例的终结行为. 这样外围类并没有覆盖超类的终结方法, 保证了超类的终结方法一定会被执行.</p><p><br/></p>','',0),(122,0,'<p>第16条 复合优于继承</p><p><br/></p><p>当在考虑类的继承时，可以考虑用复合的方式。</p><p><br/></p><p>第22条， 优先考虑静态成员类</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ static member class</p><p>nested class ---+ nonstatic member class &nbsp;+<br/></p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ anonymous class &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ --- inner class&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+ local class &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; +</p><p><br/></p><p>nonstatic member class always linked with enclosing instance, and it can call enclosing instance method.</p><p>waste space and construct&nbsp;time</p><p><br/></p><p>static member class can only be created when using it, and independent to enclosing instance.</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p><br/></p>','',0),(123,0,'<p>Item 57: Use exceptions only for exceptional conditions</p><p>			</p><p>				</p><p>					</p><p><span style=\"font-size: 11.000000pt; font-family: &#39;Times&#39;\"> </span><span style=\"font-size: 11.000000pt; font-family: &#39;Times&#39;; font-weight: 700\">exceptions are, as their name implies, to be used only for exceptional conditions; they should never be used for ordinary control flow&nbsp;</span></p><p>				</p><p>			</p><p>		</p><p>			</p><p>				</p><p>					</p><p><span style=\"font-size: 11.000000pt; font-family: &#39;Times&#39;; font-weight: 700\">A well-designed API must not force its clients to use exceptions for ordinary control flow&nbsp;</span></p><p>				</p><p>			</p><p>		</p><p><br/></p><p><br/></p>','',0),(124,0,'<p>Equal:</p><p>select daily_pin_search_volume, query from wfeng.query_daily_volume where query = &#39;card&#39;;</p><p><br/></p><p>not equal:</p><p>where a.domain not like &#39;%no_domain%&#39; &nbsp;group by a.domain;</p>','',0),(125,0,'<p>tmux&nbsp;new -s seesionName</p><p><br/></p><p>进入tmux 情况下:</p><p><br/></p><p>ctrl + b then [, 可以翻页， q 退出。</p>','',0),(128,0,'<p>周六凌晨，今晚啥都没干，就这样空了一个晚上。太多的事情等着去处理了。<br/></p>','',0),(129,0,'<p>一代宗师：谭鑫培</p><p><br/></p><p>前四大须生</p><p>余叔岩： 《</p><p>高庆奎： 高杂拌 &nbsp;--&gt;李和曾 --&gt; 辛宝达</p><p>言菊朋&nbsp;音韵声腔取胜，具有自己演唱方法的艺术，世称为“<a shape=\"rect\" href=\"http://baike.baidu.com/view/1673673.htm\" target=\"_blank\">言派</a>”。他独擅剧目《卧龙吊孝》、《让徐州》、《上天台》，这些剧目“谭派”老生所不演，独辟蹊径，成为“言派”</p><p>马连良&nbsp;</p><p>后四大须生</p><p>马连良 潇洒自如，行云流水 《淮河营》 《借东风》 马长礼</p><p>奚啸伯 疙瘩腔 ， 音域高窄， 《范进中举》 ---&gt; 张建国，欧阳中石</p><p>杨宝森 &nbsp;中低音， 韵味醇厚，师出余派， 《文昭关》&nbsp;</p><p>谭富英 &nbsp;激昂 &nbsp; 《定军山》 &nbsp;潭门七代</p><p>南麒北马关外唐</p><p>麒麟童 周信芳</p><p>马连良</p><p>唐韵笙</p><p><br/></p>','',0),(130,0,'<p>第一个project<br/></p>','',0),(131,0,'<p>重写Equals 时，参数用Object</p><p>重写compare 时参数用自己的类。</p><p>import java.util.*;</p><p>class Student {</p><p>&nbsp; &nbsp; public int id;</p><p>&nbsp; &nbsp; public String name;</p><p>&nbsp; &nbsp; public Student(int id, String s) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; this.id = id;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; this.name = s;</p><p>&nbsp; &nbsp; }</p><p>&nbsp; &nbsp; public String toString() {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; return this.name;</p><p>&nbsp; &nbsp; }</p><p>}</p><p>public class Hello{</p><p>&nbsp; &nbsp; public static void main(String[] args) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; Student s1 = new Student(2,&quot;two&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; Student s2 = new Student(3, &quot;three&quot;);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; List&lt;Student&gt; list = new ArrayList&lt;&gt;();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; list.add(s1);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; list.add(s2);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; for (int i = 0; i &lt; list.size(); i++) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(list.get(i));</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; &nbsp; &nbsp; Collections.sort(list, new Comparator&lt;Student&gt;() {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; public int compare(Object s1, Oject s2) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return ((Student)(s2)).id - ((Student)(s1)).id;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p><br/></p><p>&nbsp; &nbsp; &nbsp; &nbsp; });</p><p>&nbsp; &nbsp; &nbsp; &nbsp; for (int i = 0; i &lt; list.size(); i++) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(list.get(i));</p><p>&nbsp; &nbsp; &nbsp; &nbsp; }</p><p>&nbsp; &nbsp; }</p><p>}</p><p><br/></p><p><br/></p>','',0),(132,0,'<p style=\"margin-top: 0px; margin-bottom: 1em; padding: 0px; border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 15px; line-height: inherit; font-family: Arial, &quot;Helvetica Neue&quot;, Helvetica, sans-serif; vertical-align: baseline; clear: both; color: rgb(36, 39, 41); white-space: normal; background-color: rgb(255, 255, 255);\">Wrap the data in a class and override&nbsp;<code style=\"margin: 0px; padding: 1px 5px; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; font-stretch: inherit; font-size: 13px; line-height: inherit; font-family: Consolas, Menlo, Monaco, &quot;Lucida Console&quot;, &quot;Liberation Mono&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, monospace, sans-serif; vertical-align: baseline; background-color: rgb(239, 240, 241); white-space: pre-wrap;\">__cmp__</code>&nbsp;to return what you&#39;d like for your comparison. E.g.</p><pre class=\"lang-py prettyprint prettyprinted\" style=\"margin-top: 0px; margin-bottom: 1em; padding: 5px; border: 0px; font-variant-numeric: inherit; font-stretch: inherit; font-size: 13px; line-height: inherit; font-family: Consolas, Menlo, Monaco, &quot;Lucida Console&quot;, &quot;Liberation Mono&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, monospace, sans-serif; vertical-align: baseline; width: auto; max-height: 600px; overflow: auto; background-color: rgb(239, 240, 241); color: rgb(57, 51, 24); word-wrap: normal;\">class&nbsp;PQEntry:\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;__init__(self,&nbsp;priority,&nbsp;value):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.priority&nbsp;=&nbsp;priority\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self.value&nbsp;=&nbsp;value&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;def&nbsp;__cmp__(self,&nbsp;other):\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;cmp(self.priority,&nbsp;other.priority)\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;if&nbsp;__name__&nbsp;==&nbsp;&#39;__main__&#39;:</pre><p><br/></p>','',0),(133,0,'<pre style=\"margin-top: 0px; margin-bottom: 0px; border: 0px; color: rgb(34, 34, 34); background-color: rgb(255, 255, 255);\">select&nbsp;feedview&nbsp;from&nbsp;pinalytics.clean_feedview_log_v2&nbsp;where&nbsp;dt&nbsp;=&nbsp;&#39;2017-08-01&#39;&nbsp;&nbsp;limit&nbsp;50;\r\n\r\nCaused&nbsp;by:&nbsp;org.apache.hadoop.hive.ql.metadata.HiveException:&nbsp;Hive&nbsp;Runtime&nbsp;Error&nbsp;while&nbsp;processing&nbsp;writable&nbsp;(null)\r\n	at&nbsp;org.apache.hadoop.hive.ql.exec.MapOperator.process(MapOperator.java:543)\r\n	at&nbsp;org.apache.hadoop.hive.ql.exec.mr.ExecMapper.map(ExecMapper.java:163)\r\n	...&nbsp;8&nbsp;more\r\nCaused&nbsp;by:&nbsp;java.lang.RuntimeException:&nbsp;Parquet&nbsp;record&nbsp;is&nbsp;malformed:&nbsp;empty&nbsp;fields&nbsp;are&nbsp;illegal,&nbsp;the&nbsp;field&nbsp;should&nbsp;be&nbsp;ommited&nbsp;completely&nbsp;instead</pre><p><br/></p><p>我的是因为feedview 层数太多了，不能直接select 再，写入到表中。</p><p><br/></p><p>hive map = 99%, reduce = 33%</p><p><br/></p><p>Reasons:</p><ol class=\" list-paddingleft-2\" style=\"list-style-type: decimal;\"><li><p>data skew, one partition is too big. hot key</p></li><li><p>one instance machine performance is bad. (可能性很低 )<br/></p></li></ol>','',0),(134,0,'<p><a href=\"http://pandas.pydata.org/pandas-docs/stable/\" target=\"_self\" title=\"\">http://pandas.pydata.org/pandas-docs/stable/</a></p><p><br/></p><p><br/></p>','',0),(135,0,'<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px;\">Equations are given in the format&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, \" courier=\"\" font-size:=\"\" padding:=\"\" 2px=\"\" color:=\"\" background-color:=\"\" border-radius:=\"\">A / B = k</code>, where&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, \" courier=\"\" font-size:=\"\" padding:=\"\" 2px=\"\" color:=\"\" background-color:=\"\" border-radius:=\"\">A</code>&nbsp;and&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, \" courier=\"\" font-size:=\"\" padding:=\"\" 2px=\"\" color:=\"\" background-color:=\"\" border-radius:=\"\">B</code>&nbsp;are variables represented as strings, and&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, \" courier=\"\" font-size:=\"\" padding:=\"\" 2px=\"\" color:=\"\" background-color:=\"\" border-radius:=\"\">k</code>&nbsp;is a real number (floating point number). Given some queries, return the answers. If the answer does not exist, return&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, \" courier=\"\" font-size:=\"\" padding:=\"\" 2px=\"\" color:=\"\" background-color:=\"\" border-radius:=\"\">-1.0</code>.</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px;\"><span style=\"box-sizing: border-box; font-weight: 700;\">Example:</span><br style=\"box-sizing: border-box;\"/>Given&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, \" courier=\"\" font-size:=\"\" padding:=\"\" 2px=\"\" color:=\"\" background-color:=\"\" border-radius:=\"\">a / b = 2.0, b / c = 3.0.</code>&nbsp;<br style=\"box-sizing: border-box;\"/>queries are:&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, \" courier=\"\" font-size:=\"\" padding:=\"\" 2px=\"\" color:=\"\" background-color:=\"\" border-radius:=\"\">a / c = ?, b / a = ?, a / e = ?, a / a = ?, x / x = ? .</code>&nbsp;<br style=\"box-sizing: border-box;\"/>return&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, \" courier=\"\" font-size:=\"\" padding:=\"\" 2px=\"\" color:=\"\" background-color:=\"\" border-radius:=\"\">[6.0, 0.5, -1.0, 1.0, -1.0 ].</code></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px;\">The input is:&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, \" courier=\"\" font-size:=\"\" padding:=\"\" 2px=\"\" color:=\"\" background-color:=\"\" border-radius:=\"\">vector<pair<string, string=\"\">&gt; equations, vector<double>&amp; values, vector<pair<string, string=\"\">&gt; queries</pair<string,></double></pair<string,></code>, where&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, \" courier=\"\" font-size:=\"\" padding:=\"\" 2px=\"\" color:=\"\" background-color:=\"\" border-radius:=\"\">equations.size() == values.size()</code>, and the values are positive. This represents the equations. Return&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, \" courier=\"\" font-size:=\"\" padding:=\"\" 2px=\"\" color:=\"\" background-color:=\"\" border-radius:=\"\">vector<double></double></code>.</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px;\">According to the example above:</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, \" courier=\"\" font-size:=\"\" padding:=\"\" margin-top:=\"\" margin-bottom:=\"\" line-height:=\"\" word-break:=\"\" word-wrap:=\"\" background-color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\">equations&nbsp;=&nbsp;[&nbsp;[&quot;a&quot;,&nbsp;&quot;b&quot;],&nbsp;[&quot;b&quot;,&nbsp;&quot;c&quot;]&nbsp;],\r\nvalues&nbsp;=&nbsp;[2.0,&nbsp;3.0],\r\nqueries&nbsp;=&nbsp;[&nbsp;[&quot;a&quot;,&nbsp;&quot;c&quot;],&nbsp;[&quot;b&quot;,&nbsp;&quot;a&quot;],&nbsp;[&quot;a&quot;,&nbsp;&quot;e&quot;],&nbsp;[&quot;a&quot;,&nbsp;&quot;a&quot;],&nbsp;[&quot;x&quot;,&nbsp;&quot;x&quot;]&nbsp;].</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px;\"><br/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px;\">The input is always valid. You may assume that evaluating the queries will result in no division by zero and there is no contradiction.</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px;\"><br/></p><p>根据已有的规则，看哪些表达式能推导出来。</p><p><br/></p><p>第一想法就是替换: a / b = 2.0 ==&gt; &lt; &#39;a&#39;, &lt;&#39;b, 2.0&#39;&gt; &nbsp; &nbsp;&lt; &#39;b&#39; , &#39;a, 0.5&#39;&gt;</p><p>再一个个去遍历。</p>','',0),(149,0,'<p style=\"white-space: normal;\">303<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>Range Sum Query - Immutable &nbsp;&nbsp;<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>29.3%<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>Easy<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span></p><p style=\"white-space: normal;\">304<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>Range Sum Query 2D - Immutable &nbsp;&nbsp;<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>24.9%<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>Medium<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span></p><p style=\"white-space: normal;\">307<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>Range Sum Query - Mutable &nbsp;&nbsp;<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>20.4%<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>Medium<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span></p><p style=\"white-space: normal;\">308<span class=\"Apple-tab-span\" style=\"white-space: pre;\"></span>Range Sum Query 2D - Mutable &nbsp;&nbsp;</p><p style=\"white-space: normal;\">这四道题是很好的一个系列题．从一维到二维，从矩阵到树 从0(n^2) 到 O(logn)， 正是计算机优化的方向．</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">303 一维数组</p><p style=\"white-space: normal;\">304 二维数组</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">307 segment tree</p><p helvetica=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\" style=\"margin-top: 0px; margin-bottom: 10px; white-space: normal; box-sizing: border-box; color: rgb(51, 51, 51);\">Given an integer array&nbsp;<em style=\"box-sizing: border-box;\">nums</em>, find the sum of the elements between indices&nbsp;<em style=\"box-sizing: border-box;\">i</em>&nbsp;and&nbsp;<em style=\"box-sizing: border-box;\">j</em>&nbsp;(<em style=\"box-sizing: border-box;\">i</em>&nbsp;≤&nbsp;<em style=\"box-sizing: border-box;\">j</em>), inclusive.</p><p style=\"white-space: normal;\"><span helvetica=\"\" font-size:=\"\" background-color:=\"\" style=\"color: rgb(51, 51, 51);\">The&nbsp;</span><em helvetica=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\" style=\"box-sizing: border-box; color: rgb(51, 51, 51);\">update(i,&nbsp;val)</em><span helvetica=\"\" font-size:=\"\" background-color:=\"\" style=\"color: rgb(51, 51, 51);\">&nbsp;function modifies&nbsp;</span><em helvetica=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\" style=\"box-sizing: border-box; color: rgb(51, 51, 51);\">nums</em><span helvetica=\"\" font-size:=\"\" background-color:=\"\" style=\"color: rgb(51, 51, 51);\">&nbsp;by updating the element at index&nbsp;</span><em helvetica=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\" style=\"box-sizing: border-box; color: rgb(51, 51, 51);\">i</em><span helvetica=\"\" font-size:=\"\" background-color:=\"\" style=\"color: rgb(51, 51, 51);\">&nbsp;to&nbsp;</span><em helvetica=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\" style=\"box-sizing: border-box; color: rgb(51, 51, 51);\">val</em><span helvetica=\"\" font-size:=\"\" background-color:=\"\" style=\"color: rgb(51, 51, 51);\">.</span></p><p helvetica=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\" style=\"margin-top: 0px; margin-bottom: 10px; white-space: normal; box-sizing: border-box; color: rgb(51, 51, 51);\"><span style=\"box-sizing: border-box; font-weight: 700;\">Example:</span><br style=\"box-sizing: border-box;\"/></p><pre courier=\"\" font-size:=\"\" padding:=\"\" margin-top:=\"\" margin-bottom:=\"\" line-height:=\"\" color:=\"\" word-break:=\"\" word-wrap:=\"\" background-color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" style=\"box-sizing: border-box; overflow: auto;\">Given&nbsp;nums&nbsp;=&nbsp;[1,&nbsp;3,&nbsp;5]\r\n\r\nsumRange(0,&nbsp;2)&nbsp;-&gt;&nbsp;9\r\nupdate(1,&nbsp;2)\r\nsumRange(0,&nbsp;2)&nbsp;-&gt;&nbsp;8</pre><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">reference:http://blog.csdn.net/metalseed/article/details/8039326</p><p style=\"white-space: normal;\">线段树，又称区间树， 在区间统计问题上，如区间动态查询，能达到较快速度。</p><p style=\"white-space: normal;\">节点中包含了 start end, 还有sum, max, min 等信息。</p><p style=\"white-space: normal;\">一般线段树空间是数组的四倍？？？</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><img src=\"http://www.wutianqi.com/wp-content/uploads/2010/08/segment1.png\" width=\"500\" height=\"275\"/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">308 二进制索引树（树状数组）</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">能用树状数组解决的题基本都能用segment tree 解决， 但是反之不行。</p><p style=\"white-space: normal;\">树状数组效率比线段树要高。</p><p><br/></p>','',0),(136,0,'<p>再算法题中，矩阵算是一个大类。</p><p>http://blog.csdn.net/linhuanmars/article/details/39248597</p><p><br/></p><p>下标间的关系：</p><p><br/></p><p><br/></p><p><br/></p>','',0),(137,0,'<p>验证一段 xml&nbsp;的code是否是validated， 谷歌电面</p><p><br/></p><p><br/></p><p><br/></p>','',0),(139,0,'<p>第一部分</p><p>第一章：阅读源代码前的准备</p><p>第二章：MapReduce 设计理念与基本架构</p><p><br/></p><p>2.4 Hadoop 基本架构</p><p>2.4.1 HDFS架构</p><p>分布式文件系统和分布式计算框架MapReduce</p><p>2.4.2 Hadoop MapReduce 架构</p><p>--Client</p><p>--JobTracker</p><p>--TaskTracker</p><p>--Task</p><p><br/></p><p>2.5 Hadoop MapReduce 作业的生命周期</p><p><br/></p><p>3.4 非 Java API 解析</p><p>3.4.1 Hadoop Streaming 的实现原理</p><p>&nbsp; &nbsp; hadoop&nbsp;streamming&nbsp;使用标准输入输出流，被运用在aws emr&nbsp;上</p><p><br/></p><p><br/></p><p>第二部分</p><p><br/></p><p><br/></p>','',0),(140,0,'<p style=\"white-space: normal;\">https://www.youtube.com/watch?v=CV-M8CBEyM0&amp;t=1132s</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">PTF<br/></p><p style=\"white-space: normal;\">in Place Table Function?</p><p style=\"white-space: normal;\">Table in --&gt; Table out</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">is the content after &#39;over&#39; input?</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">Input is partitioned (optionally ordered)</p><p style=\"white-space: normal;\">An instance of a PTF operates on a Partition</p><p style=\"white-space: normal;\">Partitioning drives parallel execution</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">Similar to MR, predate to MapReduce</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">why?</p><p style=\"white-space: normal;\">Aggerations by Partition&nbsp;-&gt; Rank, top N</p><p style=\"white-space: normal;\">Inter row Calculation -&gt; Time series analysis</p><p style=\"white-space: normal;\">Multi Pass Algorithm</p><p style=\"white-space: normal;\">Graph Algorithm --&gt; implement recursive.</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">Example:&nbsp;Market &nbsp;Basket&nbsp;Analysis?&nbsp;</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">functions:</p><p style=\"white-space: normal;\">LAG: 对每一行记录的向上的第N个记录。 没有就设为DEAFULT， LAG(col, n, DEFAULT)</p><p style=\"white-space: normal;\">LEAD: 对每一行记录取向下的第N个记录。</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">First_value</p><p style=\"white-space: normal;\">Last_value</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">要指定order by</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">window clause:</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">https://stackoverflow.com/questions/30861919/what-is-rows-unbounded-preceding-used-for-in-teradata</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p><br/></p>','',0),(141,0,'<p>select query, &nbsp;keyword from&nbsp;</p><p>(select query,keyword, ROW_NUMBER() over (partition by query order by impression_sum DESC) as impression from&nbsp;</p><p>(select query, keyword, sum(impression) as impression_sum</p><p>&nbsp; from ad.ad_search_query_onsite_agg &nbsp;</p><p>&nbsp; where &nbsp;query = &#39;quotes&#39; or query = &#39;car&#39;&nbsp;</p><p>&nbsp; and dt &lt;= &#39;2017-08-02&#39; and dt &gt;= &#39;2017-07-03&#39; group by query, keyword)</p><p>)</p><p>where impression &lt;= 10</p><p><br/></p><p>select query, &nbsp;keyword from&nbsp;</p><p>(select query, keyword, ROW_NUMBER() OVER (PARTITION BY query order by sum(impression)) as impression</p><p>&nbsp; from ad.ad_search_query_onsite_agg &nbsp;</p><p>&nbsp; where &nbsp;query = &#39;quotes&#39; or query = &#39;car&#39;&nbsp;</p><p>&nbsp; and dt &lt;= &#39;2017-08-02&#39; and dt &gt;= &#39;2017-07-03&#39; group by query, keyword</p><p>)</p><p>where impression &lt;= 10</p><p><br/></p>','',0),(142,0,'<p>过去的一周真是艰难的一周。</p><p>在没有Roger 的指导下。各种瞎试，本来很简单的report，做了一个多星期。</p><p><br/></p><p>最近根本没时间刷题。</p><p><br/></p><p>一个bug 要调好久。</p><p><br/></p><p>每天抽出时间至少刷两题。</p><p><br/></p><p>这样不行啊， 我一定要提高效率，提高再提高。</p><p><br/></p><p>每天把工作做完之后， 回家就只刷题，不把工作带回家。</p>','',0),(143,0,'<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\">Given a 2D board and a word, find if the word exists in the grid.</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\">The word can be constructed from letters of sequentially adjacent cell, where &quot;adjacent&quot; cells are those horizontally or vertically neighboring. The same letter cell may not be used more than once.</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\">For example,<br style=\"box-sizing: border-box;\"/>Given&nbsp;<span style=\"box-sizing: border-box; font-weight: 700;\">board</span>&nbsp;=</p><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, \" courier=\"\" font-size:=\"\" padding:=\"\" margin-top:=\"\" margin-bottom:=\"\" line-height:=\"\" color:=\"\" word-break:=\"\" word-wrap:=\"\" background-color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\">[\r\n&nbsp;&nbsp;[&#39;A&#39;,&#39;B&#39;,&#39;C&#39;,&#39;E&#39;],\r\n&nbsp;&nbsp;[&#39;S&#39;,&#39;F&#39;,&#39;C&#39;,&#39;S&#39;],\r\n&nbsp;&nbsp;[&#39;A&#39;,&#39;D&#39;,&#39;E&#39;,&#39;E&#39;]\r\n]</pre><p><span style=\"box-sizing: border-box; font-weight: 700; color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" background-color:=\"\">word</span><span style=\"color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" background-color:=\"\">&nbsp;=&nbsp;</span><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, \" courier=\"\" font-size:=\"\" padding:=\"\" 2px=\"\" color:=\"\" background-color:=\"\" border-radius:=\"\" white-space:=\"\">&quot;ABCCED&quot;</code><span style=\"color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" background-color:=\"\">, -&gt; returns&nbsp;</span><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, \" courier=\"\" font-size:=\"\" padding:=\"\" 2px=\"\" color:=\"\" background-color:=\"\" border-radius:=\"\" white-space:=\"\">true</code><span style=\"color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" background-color:=\"\">,</span><br style=\"box-sizing: border-box; color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\"/><span style=\"box-sizing: border-box; font-weight: 700; color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" background-color:=\"\">word</span><span style=\"color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" background-color:=\"\">&nbsp;=&nbsp;</span><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, \" courier=\"\" font-size:=\"\" padding:=\"\" 2px=\"\" color:=\"\" background-color:=\"\" border-radius:=\"\" white-space:=\"\">&quot;SEE&quot;</code><span style=\"color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" background-color:=\"\">, -&gt; returns&nbsp;</span><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, \" courier=\"\" font-size:=\"\" padding:=\"\" 2px=\"\" color:=\"\" background-color:=\"\" border-radius:=\"\" white-space:=\"\">true</code><span style=\"color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" background-color:=\"\">,</span><br style=\"box-sizing: border-box; color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" white-space:=\"\" background-color:=\"\"/><span style=\"box-sizing: border-box; font-weight: 700; color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" background-color:=\"\">word</span><span style=\"color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" background-color:=\"\">&nbsp;=&nbsp;</span><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, \" courier=\"\" font-size:=\"\" padding:=\"\" 2px=\"\" color:=\"\" background-color:=\"\" border-radius:=\"\" white-space:=\"\">&quot;ABCB&quot;</code><span style=\"color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" background-color:=\"\">, -&gt; returns&nbsp;</span><code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, \" courier=\"\" font-size:=\"\" padding:=\"\" 2px=\"\" color:=\"\" background-color:=\"\" border-radius:=\"\" white-space:=\"\">false</code><span style=\"color: rgb(51, 51, 51); font-family: \" helvetica=\"\" font-size:=\"\" background-color:=\"\">.</span></p><p><br/></p><p>这是一题非常非常经典的矩阵回溯搜索的题。可以总结出一套递归搜索模板。<br/></p><p><br/></p><p>思路：先遍历矩阵，找到和字符串头相同的元素，开始回溯搜索。</p><p><br/></p>','',0),(144,0,'<p>e.g. leetcode:&nbsp;79 word search, island</p><p><br/></p><p>boolean search(int[][] board, int row, int col,) {</p><p>&nbsp; &nbsp; if (row &lt; 0 || row &gt;= board.length || col &lt; 0 || col &gt; board[0].length) {</p><p>&nbsp; &nbsp; &nbsp; &nbsp; return false;</p><p>&nbsp; &nbsp; }</p><p>&nbsp; &nbsp; if (search(board, row - 1, col ) || &nbsp;//up</p><p>&nbsp; &nbsp; &nbsp; &nbsp; search(board, row, col - 1) || &nbsp;// left</p><p>&nbsp; &nbsp; &nbsp; &nbsp; search(board, row + 1, col) || // down</p><p>&nbsp; &nbsp; &nbsp; &nbsp; searhc(board, row, col + 1) ) // right</p><p>&nbsp; &nbsp; &nbsp; &nbsp; return true;</p><p>}</p><p><br/></p><p><br/></p>','',0),(145,0,'<p>一．五种 创建型模式</p><p>１．单例模式Singleton</p><p><br/></p><p>２．创造者模式 Builder</p><p><br/></p><p>3. 工厂方法模式 Factory Method<br/></p><p><br/></p><p>4, 抽象工厂模式 Abstract Factory</p><p><br/></p><p>5.原型模式 Prototype</p><p><br/></p><p>二．七种 结构型模式</p><p>1.适配器模式 Adapter</p><p><br/></p><p>2. 装饰器模式 Decorator</p><p><br/></p><p>3.代理模式 Proxy</p><p><br/></p><p>4.外观模式</p><p><br/></p><p>5.桥模式 Bridge</p><p><br/></p><p>6. 组合模式 Composite<br/></p><p><br/></p><p>7. 享元模式 Flyweight</p><p>&nbsp; &nbsp; string pool</p><p><br/></p><p>三.十一种行为模式</p><p>1.策略模式 stategy</p><p><br/></p><p>2. 模板方法模式 Template Method</p><p><br/></p><p>3. 观察者模式　Observer</p><p><br/></p><p>4. 迭代模式 Iterator</p><p><br/></p><p>5.责任链模式　Chain of Responsibility</p><p><br/></p><p>6. 命令模式　Command&nbsp;</p><p><br/></p><p>7.备忘录模式　memento&nbsp;</p><p><br/></p><p>8. 状态模式　state</p><p><br/></p><p>9.访问者模式 Visitor</p><p><br/></p><p>10. 中介者模式 Mediator</p><p><br/></p><p>11. 解释器模式 Interpreter</p><p><br/></p><p><br/></p><p><br/></p><p><br/></p>','',0),(146,0,'<p>JFK --&gt; MUC --&gt; LHR --&gt; SFO --&gt; SJC</p><p><br/></p><p>JFK &nbsp; -----&gt; SFO</p><p>&nbsp;^\\ &nbsp;\\ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;^ / &nbsp;/ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p><p>&nbsp; &nbsp; \\ &nbsp; \\ v &nbsp; &nbsp; &nbsp;/ &nbsp;/v &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ATL</p><p>&nbsp;&nbsp;</p><p>&nbsp;有向图的深度遍历. Map<node, queue=\"\">＋ DFS</node,></p><p>字典序就是 PriorittyQueue</p><p><br/></p><p>&nbsp; &nbsp;1 &nbsp;------------&gt; 2</p><p>&nbsp;^\\ &nbsp; \\ &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; / &nbsp;/^</p><p>&nbsp; &nbsp; \\ &nbsp; \\v &nbsp; &nbsp; &nbsp; &nbsp; v/ &nbsp;/</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; v</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;4</p><p><br/></p><p>1 --&gt;2, 3</p><p>2 --&gt; 3</p><p>3 --&gt; 1,2,4</p><p><br/></p><p>1 --&gt; 2 --&gt; 3 &nbsp;--&gt; 1 ---&gt; 3 ---&gt; 2 ---- 4 回去了&nbsp;</p><p>&nbsp;</p>','',0),(147,0,'<p>取图中任意一点为root, 使得树的高度最小</p><p><br/></p><p>这个节点必定是最长路径上的中间两点，并且最多只有两点,所以采取不断减少叶子节点的策略来逼近中间的答案</p><p><br/></p><p>当一个节点的邻居只有一个时，该节点为叶子节点，直到只剩下一个或两个叶子．</p>','',0),(148,0,'<p style=\"white-space: normal;\">LFU 最近最少访问Cache.</p><p style=\"white-space: normal;\">　</p><p style=\"white-space: normal;\">这题还是双链表，加hash map.</p><p><br/></p>','',0),(150,0,'','',0),(151,0,'','',0),(152,0,'<p style=\"white-space: normal;\">完美三角形．给出若干个矩形的左下和右上角坐标．判断这些矩形能不能刚好组成一个大的矩形．不能有重叠，不能有空隙．</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">这题的思路是：</p><p style=\"white-space: normal;\">１．最外面的四个点只出现一次，　其余点均出现两个．</p><p style=\"white-space: normal;\">２．最外面四个点构成的矩形面积刚好是所有小矩形的面积之和．</p><pre class=\"brush:cpp;toolbar:false\">class&nbsp;Solution&nbsp;{\r\npublic:\r\n&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;isRectangleCover(vector&gt;&amp;&nbsp;rectangles)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;len&nbsp;=&nbsp;rectangles.size();\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;x1&nbsp;=&nbsp;INT_MAX;//left_buttom_x\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;x2&nbsp;=&nbsp;INT_MIN;//right_top_x\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;y1&nbsp;=&nbsp;INT_MAX;//left_button_y\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;y2&nbsp;=&nbsp;INT_MIN;//right_top_y\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set&gt;&nbsp;points;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;area&nbsp;=&nbsp;0;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;len;&nbsp;i++)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vector&nbsp;v&nbsp;=&nbsp;rectangles[i];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x1&nbsp;=&nbsp;min(x1,v[0]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y1&nbsp;=&nbsp;min(y1,v[1]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x2&nbsp;=&nbsp;max(x2,v[2]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y2&nbsp;=&nbsp;max(y2,v[3]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;area&nbsp;+=&nbsp;(v[2]&nbsp;-&nbsp;v[0])&nbsp;*&nbsp;(v[3]&nbsp;-&nbsp;v[1]);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!points.insert(make_pair(v[0],v[1])).second&nbsp;==&nbsp;true)&nbsp;points.erase(make_pair(v[0],v[1]));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!points.insert(make_pair(v[0],v[3])).second)&nbsp;points.erase(make_pair(v[0],v[3]));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!points.insert(make_pair(v[2],v[3])).second)&nbsp;points.erase(make_pair(v[2],v[3]));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!points.insert(make_pair(v[2],v[1])).second)&nbsp;points.erase(make_pair(v[2],v[1]));\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(points.size()!=&nbsp;4&nbsp;||&nbsp;!points.count(make_pair(x1,y1))&nbsp;||!points.count(make_pair(x1,y2))&nbsp;||&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;!points.count(make_pair(x2,y1))&nbsp;||&nbsp;!points.count(make_pair(x2,y1)))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;false;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;area&nbsp;==&nbsp;(x2&nbsp;-&nbsp;x1)&nbsp;*&nbsp;(y2&nbsp;-y1);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n};</pre><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\">在set insert 后，　返回一个pair&lt; set&lt;&gt;::iterator, bool&gt; 插入成功则为true, 插入失败则为false.</p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p style=\"white-space: normal;\"><br/></p><p><br/></p>','',0),(153,0,'<p>Service is like an Interface in Java or pure virtual function.</p><p>An interface can inherit another interface to add more method, that means service in Thrift can also inherit another service.</p>','',0),(154,0,'<p>Insert overwrite &nbsp;会重写所有数据， Insert into 插一条</p><p>而且column 的数量和类型必定是一致的！！不用验证了。</p><p><br/></p><p>show create table wfeng.test1; 有很多信息是系统的</p><p><br/></p><p>----test insert overwrite</p><p>create table wfeng.test1 ( name string )</p><p><br/></p><p>create table wfeng.test2 (name string, age int);</p><p>insert into table wfeng.test2 values (&#39;wang&#39;, 20);</p><p><br/></p><p>desc wfeng.test1;</p><p><br/></p><p>select * from wfeng.test1;</p><p><br/></p><p><br/></p><p>insert overwrite table wfeng.test1&nbsp;</p><p>select name, age from wfeng.test2</p><p>drop table wfeng.test1;&nbsp;</p><p>drop table wfeng.test2;</p><p><br/></p>','',0),(155,0,'<p>cookie1,2015-04-10 10:00:02,url2</p><p>cookie1,2015-04-10 10:00:00,url1</p><p>cookie1,2015-04-10 10:03:04,url3</p><p>cookie1,2015-04-10 10:50:05,url6</p><p>cookie1,2015-04-10 11:00:00,url7</p><p>cookie1,2015-04-10 10:10:00,url4</p><p>cookie1,2015-04-10 10:50:01,url5</p><p>cookie2,2015-04-10 10:00:02,url22</p><p>cookie2,2015-04-10 10:00:00,url11</p><p>cookie2,2015-04-10 10:03:04,url33</p><p>cookie2,2015-04-10 10:50:05,url66</p><p>cookie2,2015-04-10 11:00:00,url77</p><p>cookie2,2015-04-10 10:10:00,url44</p><p>cookie2,2015-04-10 10:50:01,url55</p><p><br/></p><p><br/></p><p><br/></p><p>---window_function directoery is important, file name is not&nbsp;</p><p>Drop TABLE wfeng.learn_window_function;</p><p>CREATE TABLE wfeng.learn_window_function (</p><p>&nbsp; &nbsp; cookieid string,</p><p>&nbsp; &nbsp; createtime string, &nbsp;</p><p>&nbsp; &nbsp; url STRING &nbsp; &nbsp; &nbsp;&nbsp;</p><p>)&nbsp;</p><p>ROW FORMAT DELIMITED&nbsp;</p><p>FIELDS TERMINATED BY &#39;,&#39;&nbsp;</p><p>LINES TERMINATED BY &#39;\\n&#39;</p><p>STORED AS TEXTFILE</p><p>LOCATION &#39;s3://pinlogs/users/wfeng/learn_window_function/&#39;;</p><p><br/></p><p>select * from wfeng.learn_window_function;</p><p><br/></p><p>SELECT cookieid, createtime, url,&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp;ROW_NUMBER() OVER(PARTITION BY cookieid ORDER BY createtime) AS rn,</p><p>&nbsp; &nbsp; &nbsp; &nbsp;LAG(createtime,1,&#39;1970-01-01 00:00:00&#39;) OVER(PARTITION BY cookieid ORDER BY createtime) AS last_1_time</p><p>&nbsp; &nbsp; &nbsp; &nbsp;--LAG(createtime,2) OVER(PARTITION BY cookieid ORDER BY createtime) AS last_2_time</p><p>&nbsp; &nbsp; &nbsp; &nbsp;FROM wfeng.learn_window_function;</p><p>&nbsp; &nbsp; &nbsp; &nbsp;</p><p>----window&nbsp;</p><p>SELECT cookieid, createtime, url,&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp;--ROW_NUMBER() OVER(PARTITION BY cookieid ORDER BY createtime ROWS between unbounded preceding and current row) AS rn,</p><p>&nbsp; &nbsp; &nbsp; &nbsp;count(url) OVER(PARTITION BY cookieid ORDER BY createtime ROWS between unbounded preceding and current row) AS rn</p><p>&nbsp; &nbsp; &nbsp; &nbsp;--LAG(createtime,1,&#39;1970-01-01 00:00:00&#39;) OVER(PARTITION BY cookieid ORDER BY createtime) AS last_1_time</p><p>&nbsp; &nbsp; &nbsp; &nbsp;FROM wfeng.learn_window_function;</p><p><br/></p><p>select * from ad.ad_search_query_onsite_agg where dt &lt;= and=&quot;&quot; dt=&quot;&quot;&gt;= &#39;2017-07-03&#39;</p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><br/></p>','',0),(156,0,'<p>为什么性欲的问题这么难解决。真是搞不懂，明明都已经这么累了，为什么还要看黄文，打飞机。</p><p>好浪费时间啊。</p>','',0),(157,0,'<p>dimension 将表的若干列作为一个索引。</p><p>metrics 索引之外要展示的数据</p>','',0),(158,0,'<p>1查看 data skew, 看每个hadoop map counter 的 number of bytes written and &nbsp;number of bytes read</p><p>2 某一个map一直run不出来，就找一个成功的map来对比</p>','',0),(159,0,'<p>先解k th&nbsp;的问题，求第K小的数。</p><p><br/></p><p>二分法的本质，取第K小 ===转化===&gt; 舍掉k / 2 个数后，取第 k - k / 2 小</p><p><br/></p><p>1.对于 [1,2,5], [3,4], k = 3, k / 2 =1, k - k/2 = 2, number[A_start] &lt; num[B_start]</p><p>等价于去掉A中的第一个后，再求第二小的数。</p><p>2. [2,3,4,5] [1] k = 4, k / 2</p><p>这种情况，应该删除小的。 B的前两个，然而B只有一个，所以是先去掉A的前两个。</p><p>3.[3,4,5] [1,2] k = 5, k - k / 2 = 3, 去掉两个求第3个了, k = 3</p><p>去掉 B的1，2， A_start = 0 + 2 = 2, 直接返回A的第3个 A_start + 3 - 1</p>','',0),(160,0,'<p>不用乘除取模来计算除法<br/></p><p>最直观的思路，就是减，一直减，看能减多少次。</p><p>为了加速这一过程，使用2分法，使减的数量乘2，当大于被除数时，则从头开始。</p>','',0),(161,0,'<p>不怕数据规模大，就怕数据死Q（skew ).</p><p><br/></p><p>&nbsp;第一步避免死Q的原则，尽量减少数据的规模，想尽一切办法去除冗余信息。</p><p>如果是reduce skew, &nbsp;一般用两级 hash,</p><p><br/></p><p>group by&nbsp;keyword+&quot;random string&quot; ) group by substr( &nbsp;keyword+&quot;random string&quot; )</p>','',0),(162,0,'<p>这题通过比较 nums[mid] 和 nums[start] &nbsp;的大小，来判断哪一边是有序的。</p><p>nums[mid] &gt; nums[start] , start ~ mid 有序</p><p>nu m<br/></p>','',0);
/*!40000 ALTER TABLE `ot_document_article` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_document_download`
--

DROP TABLE IF EXISTS `ot_document_download`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_document_download` (
  `id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '文档ID',
  `parse` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT '内容解析类型',
  `content` text NOT NULL COMMENT '下载详细描述',
  `template` varchar(100) NOT NULL DEFAULT '' COMMENT '详情页显示模板',
  `file_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '文件ID',
  `download` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '下载次数',
  `size` bigint(20) unsigned NOT NULL DEFAULT '0' COMMENT '文件大小',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='文档模型下载表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_document_download`
--

LOCK TABLES `ot_document_download` WRITE;
/*!40000 ALTER TABLE `ot_document_download` DISABLE KEYS */;
INSERT INTO `ot_document_download` VALUES (27,0,'','',0,0,0),(28,0,'','',0,0,0);
/*!40000 ALTER TABLE `ot_document_download` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_file`
--

DROP TABLE IF EXISTS `ot_file`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_file` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '文件ID',
  `name` char(30) NOT NULL DEFAULT '' COMMENT '原始文件名',
  `savename` char(20) NOT NULL DEFAULT '' COMMENT '保存名称',
  `savepath` char(30) NOT NULL DEFAULT '' COMMENT '文件保存路径',
  `ext` char(5) NOT NULL DEFAULT '' COMMENT '文件后缀',
  `mime` char(40) NOT NULL DEFAULT '' COMMENT '文件mime类型',
  `size` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '文件大小',
  `md5` char(32) NOT NULL DEFAULT '' COMMENT '文件md5',
  `sha1` char(40) NOT NULL DEFAULT '' COMMENT '文件 sha1编码',
  `location` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT '文件保存位置',
  `create_time` int(10) unsigned NOT NULL COMMENT '上传时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_md5` (`md5`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='文件表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_file`
--

LOCK TABLES `ot_file` WRITE;
/*!40000 ALTER TABLE `ot_file` DISABLE KEYS */;
/*!40000 ALTER TABLE `ot_file` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_hooks`
--

DROP TABLE IF EXISTS `ot_hooks`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_hooks` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键',
  `name` varchar(40) NOT NULL DEFAULT '' COMMENT '钩子名称',
  `description` text NOT NULL COMMENT '描述',
  `type` tinyint(1) unsigned NOT NULL DEFAULT '1' COMMENT '类型',
  `update_time` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '更新时间',
  `addons` varchar(255) NOT NULL DEFAULT '' COMMENT '钩子挂载的插件 ''，''分割',
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=MyISAM AUTO_INCREMENT=17 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_hooks`
--

LOCK TABLES `ot_hooks` WRITE;
/*!40000 ALTER TABLE `ot_hooks` DISABLE KEYS */;
INSERT INTO `ot_hooks` VALUES (1,'pageHeader','页面header钩子，一般用于加载插件CSS文件和代码',1,0,''),(2,'pageFooter','页面footer钩子，一般用于加载插件JS文件和JS代码',1,0,'ReturnTop'),(3,'documentEditForm','添加编辑表单的 扩展内容钩子',1,0,'Attachment'),(4,'documentDetailAfter','文档末尾显示',1,0,'Attachment,SocialComment'),(5,'documentDetailBefore','页面内容前显示用钩子',1,0,''),(6,'documentSaveComplete','保存文档数据后的扩展钩子',2,0,'Attachment'),(7,'documentEditFormContent','添加编辑表单的内容显示钩子',1,0,'Editor'),(8,'adminArticleEdit','后台内容编辑页编辑器',1,1378982734,'EditorForAdmin'),(13,'AdminIndex','首页小格子个性化显示',1,1382596073,'SiteStat,SystemInfo,DevTeam'),(14,'topicComment','评论提交方式扩展钩子。',1,1380163518,'Editor'),(16,'app_begin','应用开始',2,1384481614,'');
/*!40000 ALTER TABLE `ot_hooks` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_member`
--

DROP TABLE IF EXISTS `ot_member`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_member` (
  `uid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '用户ID',
  `nickname` char(16) NOT NULL DEFAULT '' COMMENT '昵称',
  `sex` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT '性别',
  `birthday` date NOT NULL DEFAULT '0000-00-00' COMMENT '生日',
  `qq` char(10) NOT NULL DEFAULT '' COMMENT 'qq号',
  `score` mediumint(8) NOT NULL DEFAULT '0' COMMENT '用户积分',
  `login` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '登录次数',
  `reg_ip` bigint(20) NOT NULL DEFAULT '0' COMMENT '注册IP',
  `reg_time` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '注册时间',
  `last_login_ip` bigint(20) NOT NULL DEFAULT '0' COMMENT '最后登录IP',
  `last_login_time` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '最后登录时间',
  `status` tinyint(4) NOT NULL DEFAULT '0' COMMENT '会员状态',
  PRIMARY KEY (`uid`),
  KEY `status` (`status`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COMMENT='会员表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_member`
--

LOCK TABLES `ot_member` WRITE;
/*!40000 ALTER TABLE `ot_member` DISABLE KEYS */;
INSERT INTO `ot_member` VALUES (1,'Wayne',0,'0000-00-00','',320,223,0,1450608302,3227402771,1504293921,1);
/*!40000 ALTER TABLE `ot_member` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_menu`
--

DROP TABLE IF EXISTS `ot_menu`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_menu` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '文档ID',
  `title` varchar(50) NOT NULL DEFAULT '' COMMENT '标题',
  `pid` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '上级分类ID',
  `sort` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '排序（同级有效）',
  `url` char(255) NOT NULL DEFAULT '' COMMENT '链接地址',
  `hide` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '是否隐藏',
  `tip` varchar(255) NOT NULL DEFAULT '' COMMENT '提示',
  `group` varchar(50) DEFAULT '' COMMENT '分组',
  `is_dev` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '是否仅开发者模式可见',
  PRIMARY KEY (`id`),
  KEY `pid` (`pid`)
) ENGINE=MyISAM AUTO_INCREMENT=122 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_menu`
--

LOCK TABLES `ot_menu` WRITE;
/*!40000 ALTER TABLE `ot_menu` DISABLE KEYS */;
INSERT INTO `ot_menu` VALUES (1,'首页',0,1,'Index/index',0,'','',0),(2,'内容',0,2,'Article/mydocument',0,'','',0),(3,'文档列表',2,0,'article/index',1,'','内容',0),(4,'新增',3,0,'article/add',0,'','',0),(5,'编辑',3,0,'article/edit',0,'','',0),(6,'改变状态',3,0,'article/setStatus',0,'','',0),(7,'保存',3,0,'article/update',0,'','',0),(8,'保存草稿',3,0,'article/autoSave',0,'','',0),(9,'移动',3,0,'article/move',0,'','',0),(10,'复制',3,0,'article/copy',0,'','',0),(11,'粘贴',3,0,'article/paste',0,'','',0),(12,'导入',3,0,'article/batchOperate',0,'','',0),(13,'回收站',2,0,'article/recycle',1,'','内容',0),(14,'还原',13,0,'article/permit',0,'','',0),(15,'清空',13,0,'article/clear',0,'','',0),(16,'用户',0,3,'User/index',0,'','',0),(17,'用户信息',16,0,'User/index',0,'','用户管理',0),(18,'新增用户',17,0,'User/add',0,'添加新用户','',0),(19,'用户行为',16,0,'User/action',0,'','行为管理',0),(20,'新增用户行为',19,0,'User/addaction',0,'','',0),(21,'编辑用户行为',19,0,'User/editaction',0,'','',0),(22,'保存用户行为',19,0,'User/saveAction',0,'\"用户->用户行为\"保存编辑和新增的用户行为','',0),(23,'变更行为状态',19,0,'User/setStatus',0,'\"用户->用户行为\"中的启用,禁用和删除权限','',0),(24,'禁用会员',19,0,'User/changeStatus?method=forbidUser',0,'\"用户->用户信息\"中的禁用','',0),(25,'启用会员',19,0,'User/changeStatus?method=resumeUser',0,'\"用户->用户信息\"中的启用','',0),(26,'删除会员',19,0,'User/changeStatus?method=deleteUser',0,'\"用户->用户信息\"中的删除','',0),(27,'权限管理',16,0,'AuthManager/index',0,'','用户管理',0),(28,'删除',27,0,'AuthManager/changeStatus?method=deleteGroup',0,'删除用户组','',0),(29,'禁用',27,0,'AuthManager/changeStatus?method=forbidGroup',0,'禁用用户组','',0),(30,'恢复',27,0,'AuthManager/changeStatus?method=resumeGroup',0,'恢复已禁用的用户组','',0),(31,'新增',27,0,'AuthManager/createGroup',0,'创建新的用户组','',0),(32,'编辑',27,0,'AuthManager/editGroup',0,'编辑用户组名称和描述','',0),(33,'保存用户组',27,0,'AuthManager/writeGroup',0,'新增和编辑用户组的\"保存\"按钮','',0),(34,'授权',27,0,'AuthManager/group',0,'\"后台 \\ 用户 \\ 用户信息\"列表页的\"授权\"操作按钮,用于设置用户所属用户组','',0),(35,'访问授权',27,0,'AuthManager/access',0,'\"后台 \\ 用户 \\ 权限管理\"列表页的\"访问授权\"操作按钮','',0),(36,'成员授权',27,0,'AuthManager/user',0,'\"后台 \\ 用户 \\ 权限管理\"列表页的\"成员授权\"操作按钮','',0),(37,'解除授权',27,0,'AuthManager/removeFromGroup',0,'\"成员授权\"列表页内的解除授权操作按钮','',0),(38,'保存成员授权',27,0,'AuthManager/addToGroup',0,'\"用户信息\"列表页\"授权\"时的\"保存\"按钮和\"成员授权\"里右上角的\"添加\"按钮)','',0),(39,'分类授权',27,0,'AuthManager/category',0,'\"后台 \\ 用户 \\ 权限管理\"列表页的\"分类授权\"操作按钮','',0),(40,'保存分类授权',27,0,'AuthManager/addToCategory',0,'\"分类授权\"页面的\"保存\"按钮','',0),(41,'模型授权',27,0,'AuthManager/modelauth',0,'\"后台 \\ 用户 \\ 权限管理\"列表页的\"模型授权\"操作按钮','',0),(42,'保存模型授权',27,0,'AuthManager/addToModel',0,'\"分类授权\"页面的\"保存\"按钮','',0),(43,'扩展',0,7,'Addons/index',0,'','',0),(44,'插件管理',43,1,'Addons/index',0,'','扩展',0),(45,'创建',44,0,'Addons/create',0,'服务器上创建插件结构向导','',0),(46,'检测创建',44,0,'Addons/checkForm',0,'检测插件是否可以创建','',0),(47,'预览',44,0,'Addons/preview',0,'预览插件定义类文件','',0),(48,'快速生成插件',44,0,'Addons/build',0,'开始生成插件结构','',0),(49,'设置',44,0,'Addons/config',0,'设置插件配置','',0),(50,'禁用',44,0,'Addons/disable',0,'禁用插件','',0),(51,'启用',44,0,'Addons/enable',0,'启用插件','',0),(52,'安装',44,0,'Addons/install',0,'安装插件','',0),(53,'卸载',44,0,'Addons/uninstall',0,'卸载插件','',0),(54,'更新配置',44,0,'Addons/saveconfig',0,'更新插件配置处理','',0),(55,'插件后台列表',44,0,'Addons/adminList',0,'','',0),(56,'URL方式访问插件',44,0,'Addons/execute',0,'控制是否有权限通过url访问插件控制器方法','',0),(57,'钩子管理',43,2,'Addons/hooks',0,'','扩展',0),(58,'模型管理',68,3,'Model/index',0,'','系统设置',0),(59,'新增',58,0,'model/add',0,'','',0),(60,'编辑',58,0,'model/edit',0,'','',0),(61,'改变状态',58,0,'model/setStatus',0,'','',0),(62,'保存数据',58,0,'model/update',0,'','',0),(63,'属性管理',68,0,'Attribute/index',1,'网站属性配置。','',0),(64,'新增',63,0,'Attribute/add',0,'','',0),(65,'编辑',63,0,'Attribute/edit',0,'','',0),(66,'改变状态',63,0,'Attribute/setStatus',0,'','',0),(67,'保存数据',63,0,'Attribute/update',0,'','',0),(68,'系统',0,4,'Config/group',0,'','',0),(69,'网站设置',68,1,'Config/group',0,'','系统设置',0),(70,'配置管理',68,4,'Config/index',0,'','系统设置',0),(71,'编辑',70,0,'Config/edit',0,'新增编辑和保存配置','',0),(72,'删除',70,0,'Config/del',0,'删除配置','',0),(73,'新增',70,0,'Config/add',0,'新增配置','',0),(74,'保存',70,0,'Config/save',0,'保存配置','',0),(75,'菜单管理',68,5,'Menu/index',0,'','系统设置',0),(76,'导航管理',68,6,'Channel/index',0,'','系统设置',0),(77,'新增',76,0,'Channel/add',0,'','',0),(78,'编辑',76,0,'Channel/edit',0,'','',0),(79,'删除',76,0,'Channel/del',0,'','',0),(80,'分类管理',68,2,'Category/index',0,'','系统设置',0),(81,'编辑',80,0,'Category/edit',0,'编辑和保存栏目分类','',0),(82,'新增',80,0,'Category/add',0,'新增栏目分类','',0),(83,'删除',80,0,'Category/remove',0,'删除栏目分类','',0),(84,'移动',80,0,'Category/operate/type/move',0,'移动栏目分类','',0),(85,'合并',80,0,'Category/operate/type/merge',0,'合并栏目分类','',0),(86,'备份数据库',68,0,'Database/index?type=export',0,'','数据备份',0),(87,'备份',86,0,'Database/export',0,'备份数据库','',0),(88,'优化表',86,0,'Database/optimize',0,'优化数据表','',0),(89,'修复表',86,0,'Database/repair',0,'修复数据表','',0),(90,'还原数据库',68,0,'Database/index?type=import',0,'','数据备份',0),(91,'恢复',90,0,'Database/import',0,'数据库恢复','',0),(92,'删除',90,0,'Database/del',0,'删除备份文件','',0),(93,'其他',0,5,'other',1,'','',0),(96,'新增',75,0,'Menu/add',0,'','系统设置',0),(98,'编辑',75,0,'Menu/edit',0,'','',0),(104,'下载管理',102,0,'Think/lists?model=download',0,'','',0),(105,'配置管理',102,0,'Think/lists?model=config',0,'','',0),(106,'行为日志',16,0,'Action/actionlog',0,'','行为管理',0),(108,'修改密码',16,0,'User/updatePassword',1,'','',0),(109,'修改昵称',16,0,'User/updateNickname',1,'','',0),(110,'查看行为日志',106,0,'action/edit',1,'','',0),(112,'新增数据',58,0,'think/add',1,'','',0),(113,'编辑数据',58,0,'think/edit',1,'','',0),(114,'导入',75,0,'Menu/import',0,'','',0),(115,'生成',58,0,'Model/generate',0,'','',0),(116,'新增钩子',57,0,'Addons/addHook',0,'','',0),(117,'编辑钩子',57,0,'Addons/edithook',0,'','',0),(118,'文档排序',3,0,'Article/sort',1,'','',0),(119,'排序',70,0,'Config/sort',1,'','',0),(120,'排序',75,0,'Menu/sort',1,'','',0),(121,'排序',76,0,'Channel/sort',1,'','',0);
/*!40000 ALTER TABLE `ot_menu` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_model`
--

DROP TABLE IF EXISTS `ot_model`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_model` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '模型ID',
  `name` char(30) NOT NULL DEFAULT '' COMMENT '模型标识',
  `title` char(30) NOT NULL DEFAULT '' COMMENT '模型名称',
  `extend` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '继承的模型',
  `relation` varchar(30) NOT NULL DEFAULT '' COMMENT '继承与被继承模型的关联字段',
  `need_pk` tinyint(1) unsigned NOT NULL DEFAULT '1' COMMENT '新建表时是否需要主键字段',
  `field_sort` text NOT NULL COMMENT '表单字段排序',
  `field_group` varchar(255) NOT NULL DEFAULT '1:基础' COMMENT '字段分组',
  `attribute_list` text NOT NULL COMMENT '属性列表（表的字段）',
  `template_list` varchar(100) NOT NULL DEFAULT '' COMMENT '列表模板',
  `template_add` varchar(100) NOT NULL DEFAULT '' COMMENT '新增模板',
  `template_edit` varchar(100) NOT NULL DEFAULT '' COMMENT '编辑模板',
  `list_grid` text NOT NULL COMMENT '列表定义',
  `list_row` smallint(2) unsigned NOT NULL DEFAULT '10' COMMENT '列表数据长度',
  `search_key` varchar(50) NOT NULL DEFAULT '' COMMENT '默认搜索字段',
  `search_list` varchar(255) NOT NULL DEFAULT '' COMMENT '高级搜索的字段',
  `create_time` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '创建时间',
  `update_time` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '更新时间',
  `status` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT '状态',
  `engine_type` varchar(25) NOT NULL DEFAULT 'MyISAM' COMMENT '数据库引擎',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COMMENT='文档模型表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_model`
--

LOCK TABLES `ot_model` WRITE;
/*!40000 ALTER TABLE `ot_model` DISABLE KEYS */;
INSERT INTO `ot_model` VALUES (1,'document','基础文档',0,'',1,'{\"1\":[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\"]}','1:基础','','','','','id:编号\r\ntitle:标题:article/index?cate_id=[category_id]&pid=[id]\r\ntype|get_document_type:类型\r\nlevel:优先级\r\nupdate_time|time_format:最后更新\r\nstatus_text:状态\r\nview:浏览\r\nid:操作:[EDIT]&cate_id=[category_id]|编辑,article/setstatus?status=-1&ids=[id]|删除',0,'','',1383891233,1384507827,1,'MyISAM'),(2,'article','文章',1,'',1,'{\"1\":[\"3\",\"24\",\"2\",\"5\"],\"2\":[\"9\",\"13\",\"19\",\"10\",\"12\",\"16\",\"17\",\"26\",\"20\",\"14\",\"11\",\"25\"]}','1:基础,2:扩展','','','','','id:编号\r\ntitle:标题:article/edit?cate_id=[category_id]&id=[id]\r\ncontent:内容',0,'','',1383891243,1387260622,1,'MyISAM'),(3,'download','下载',1,'',1,'{\"1\":[\"3\",\"28\",\"30\",\"32\",\"2\",\"5\",\"31\"],\"2\":[\"13\",\"10\",\"27\",\"9\",\"12\",\"16\",\"17\",\"19\",\"11\",\"20\",\"14\",\"29\"]}','1:基础,2:扩展','','','','','id:编号\r\ntitle:标题',0,'','',1383891252,1387260449,1,'MyISAM');
/*!40000 ALTER TABLE `ot_model` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_picture`
--

DROP TABLE IF EXISTS `ot_picture`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_picture` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键id自增',
  `path` varchar(255) NOT NULL DEFAULT '' COMMENT '路径',
  `url` varchar(255) NOT NULL DEFAULT '' COMMENT '图片链接',
  `md5` char(32) NOT NULL DEFAULT '' COMMENT '文件md5',
  `sha1` char(40) NOT NULL DEFAULT '' COMMENT '文件 sha1编码',
  `status` tinyint(2) NOT NULL DEFAULT '0' COMMENT '状态',
  `create_time` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '创建时间',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_picture`
--

LOCK TABLES `ot_picture` WRITE;
/*!40000 ALTER TABLE `ot_picture` DISABLE KEYS */;
INSERT INTO `ot_picture` VALUES (1,'/Uploads/Picture/2016-01-10/56920cddefccf.jpg','','59d62ce72cd2dc7f71c75360a601aa2c','43cd438170b13f8a0f573bd471ecf81254e7a5ab',1,1452412125);
/*!40000 ALTER TABLE `ot_picture` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_ucenter_admin`
--

DROP TABLE IF EXISTS `ot_ucenter_admin`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_ucenter_admin` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '管理员ID',
  `member_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '管理员用户ID',
  `status` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT '管理员状态',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='管理员表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_ucenter_admin`
--

LOCK TABLES `ot_ucenter_admin` WRITE;
/*!40000 ALTER TABLE `ot_ucenter_admin` DISABLE KEYS */;
/*!40000 ALTER TABLE `ot_ucenter_admin` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_ucenter_app`
--

DROP TABLE IF EXISTS `ot_ucenter_app`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_ucenter_app` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '应用ID',
  `title` varchar(30) NOT NULL COMMENT '应用名称',
  `url` varchar(100) NOT NULL COMMENT '应用URL',
  `ip` char(15) NOT NULL COMMENT '应用IP',
  `auth_key` varchar(100) NOT NULL COMMENT '加密KEY',
  `sys_login` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '同步登陆',
  `allow_ip` varchar(255) NOT NULL COMMENT '允许访问的IP',
  `create_time` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '创建时间',
  `update_time` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '更新时间',
  `status` tinyint(4) NOT NULL DEFAULT '0' COMMENT '应用状态',
  PRIMARY KEY (`id`),
  KEY `status` (`status`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='应用表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_ucenter_app`
--

LOCK TABLES `ot_ucenter_app` WRITE;
/*!40000 ALTER TABLE `ot_ucenter_app` DISABLE KEYS */;
/*!40000 ALTER TABLE `ot_ucenter_app` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_ucenter_member`
--

DROP TABLE IF EXISTS `ot_ucenter_member`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_ucenter_member` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '用户ID',
  `username` char(16) NOT NULL COMMENT '用户名',
  `password` char(32) NOT NULL COMMENT '密码',
  `email` char(32) NOT NULL COMMENT '用户邮箱',
  `mobile` char(15) NOT NULL COMMENT '用户手机',
  `reg_time` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '注册时间',
  `reg_ip` bigint(20) NOT NULL DEFAULT '0' COMMENT '注册IP',
  `last_login_time` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '最后登录时间',
  `last_login_ip` bigint(20) NOT NULL DEFAULT '0' COMMENT '最后登录IP',
  `update_time` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '更新时间',
  `status` tinyint(4) DEFAULT '0' COMMENT '用户状态',
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`),
  UNIQUE KEY `email` (`email`),
  KEY `status` (`status`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COMMENT='用户表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_ucenter_member`
--

LOCK TABLES `ot_ucenter_member` WRITE;
/*!40000 ALTER TABLE `ot_ucenter_member` DISABLE KEYS */;
INSERT INTO `ot_ucenter_member` VALUES (1,'Wayne','7de47d5222f09768a9ae7036bdf9226c','xiaowenzinihaoya@163.com','',1460898659,3395820372,1504293921,3227402771,1460898659,1);
/*!40000 ALTER TABLE `ot_ucenter_member` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_ucenter_setting`
--

DROP TABLE IF EXISTS `ot_ucenter_setting`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_ucenter_setting` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '设置ID',
  `type` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT '配置类型（1-用户配置）',
  `value` text NOT NULL COMMENT '配置数据',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='设置表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_ucenter_setting`
--

LOCK TABLES `ot_ucenter_setting` WRITE;
/*!40000 ALTER TABLE `ot_ucenter_setting` DISABLE KEYS */;
/*!40000 ALTER TABLE `ot_ucenter_setting` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_url`
--

DROP TABLE IF EXISTS `ot_url`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_url` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '链接唯一标识',
  `url` char(255) NOT NULL DEFAULT '' COMMENT '链接地址',
  `short` char(100) NOT NULL DEFAULT '' COMMENT '短网址',
  `status` tinyint(2) NOT NULL DEFAULT '2' COMMENT '状态',
  `create_time` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '创建时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `idx_url` (`url`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='链接表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_url`
--

LOCK TABLES `ot_url` WRITE;
/*!40000 ALTER TABLE `ot_url` DISABLE KEYS */;
/*!40000 ALTER TABLE `ot_url` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ot_userdata`
--

DROP TABLE IF EXISTS `ot_userdata`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ot_userdata` (
  `uid` int(10) unsigned NOT NULL COMMENT '用户id',
  `type` tinyint(3) unsigned NOT NULL COMMENT '类型标识',
  `target_id` int(10) unsigned NOT NULL COMMENT '目标id',
  UNIQUE KEY `uid` (`uid`,`type`,`target_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ot_userdata`
--

LOCK TABLES `ot_userdata` WRITE;
/*!40000 ALTER TABLE `ot_userdata` DISABLE KEYS */;
/*!40000 ALTER TABLE `ot_userdata` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2017-09-04 23:25:19
